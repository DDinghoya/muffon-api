---
http_interactions:
- request:
    method: get
    uri: https://www.discogs.com/artist/wejlhg239gh23?page=1&subtype=Albums&type=Releases
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.0.1p64
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - www.discogs.com
  response:
    status:
      code: 404
      message: NOT FOUND
    headers:
      Date:
      - Tue, 25 May 2021 08:15:18 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=15724800
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Request-Id:
      - 0a4430c0c50000f1626a171000000001
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Set-Cookie:
      - __cf_bm=81a9ca626ad41e5bf69cf1a115f5e8358542ee69-1621930518-1800-ASGnmXI6zPSRzi8Uk7HDC6vnxIBLdVToMolNYrrT0Huppm4cN3ivYDRtn7kkrvwC5x9pJQIPBbS6gJv1TjBNOGo=;
        path=/; expires=Tue, 25-May-21 08:45:18 GMT; domain=.discogs.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 654d50ae0c96f162-ARN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 25 May 2021 08:15:20 GMT
recorded_with: VCR 6.0.0

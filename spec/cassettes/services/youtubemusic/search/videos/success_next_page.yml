---
http_interactions:
- request:
    method: post
    uri: https://music.youtube.com/youtubei/v1/search?continuation
    body:
      encoding: UTF-8
      string: '{"context":{"client":{"clientName":"WEB_REMIX","clientVersion":"1.20230227.01.00","gl":"GB"}},"query":"wild
        nothing"}'
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.2.0p0
      Content-Type:
      - application/json
      Content-Length:
      - '117'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - music.youtube.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Sat, 04 Mar 2023 10:36:18 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "responseContext": {
    "visitorData": "CgtFZVFwTWpmSmhHUSihvoygBg%3D%3D",
    "serviceTrackingParams": [
      {
        "service": "CSI",
        "params": [
          {
            "key": "c",
            "value": "WEB_REMIX"
          },
          {
            "key": "cver",
            "value": "1.20230227.01.00"
          },
          {
            "key": "yt_li",
            "value": "0"
          },
          {
            "key": "GetSearch_rid",
            "value": "0x9c317891aa755e5b"
          }
        ]
      },
      {
        "service": "GFEEDBACK",
        "params": [
          {
            "key": "logged_in",
            "value": "0"
          },
          {
            "key": "e",
            "value": "1714257,23804281,23918597,23946420,23966208,23983296,23998056,24004644,24007246,24034168,24036947,24077241,24080738,24120819,24135310,24140247,24162919,24164186,24169501,24181174,24187043,24187377,24197450,24211178,24219713,24240253,24241378,24248091,24248685,24248956,24255163,24255543,24255545,24262346,24263796,24268142,24281897,24283015,24288047,24288664,24290971,24296354,24390674,24391537,24403793,24404640,24407191,24415864,24415866,24416291,24419278,24422318,24426636,24428818,24429094,24439360,24439483,24447671,24449516,24450250,24450367,24451032,24453129,24456736,24458317,24458324,24458329,24458476,24458839,24459436,24462054,24463874,24465011,24465097,24466371,24466454,24466859,24467288,24468724,24469243,24470280,24472429,24473354,24477512,24479964,24481213,24481771,24482081,24483766,24484079,24484375,24486574,24486981,24489231,24489888,24591038,39323074"
          }
        ]
      },
      {
        "service": "ECATCHER",
        "params": [
          {
            "key": "client.version",
            "value": "1.20000101"
          },
          {
            "key": "client.name",
            "value": "WEB_REMIX"
          },
          {
            "key": "client.fexp",
            "value": "24077241,23918597,24429094,24484375,24283015,24479964,24004644,24240253,24007246,24469243,24255543,24135310,24162919,24219713,24288047,23804281,23946420,24447671,24248091,24391537,24140247,24458329,24466371,24489231,23983296,24466859,24463874,24248685,24489888,24451032,24187377,24466454,24482081,24591038,24403793,24241378,24477512,24248956,24484079,24473354,24164186,24450367,24187043,24465011,24483766,24263796,24390674,24415866,24036947,23998056,24262346,24416291,24426636,24458476,24462054,24120819,24456736,24422318,24450250,24481771,24034168,24404640,24439360,24481213,24211178,24439483,24428818,24458324,24458317,24255545,24467288,24472429,24486574,24268142,24080738,24419278,23966208,24468724,24453129,39323074,24458839,24459436,24407191,24290971,24415864,24281897,24486981,24181174,24465097,24288664,24449516,24169501,24296354,24255163,1714257,24470280,24197450"
          }
        ]
      }
    ],
    "maxAgeSeconds": 120
  },
  "contents": {
    "tabbedSearchResultsRenderer": {
      "tabs": [
        {
          "tabRenderer": {
            "title": "yt music",
            "selected": true,
            "content": {
              "sectionListRenderer": {
                "contents": [
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Top result"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CNgBENVoGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/X-1ht9aicyJcYdhsVmmdvUgm0ASGGRomVV-9wylXnuksoBNYvoV4RsbI9sKb3RpI-sPFoqHv8NH2-wo=w60-h60-p-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/X-1ht9aicyJcYdhsVmmdvUgm0ASGGRomVV-9wylXnuksoBNYvoV4RsbI9sKb3RpI-sPFoqHv8NH2-wo=w120-h120-p-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_CIRCLE",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FILL",
                                "trackingParams": "CN0BEIS_AiITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Wild Nothing"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Artist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "13.3K subscribers"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNwBEJrzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAOzEZ14Ag02V1dUDIUe5EUAA",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "CNwBEJrzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNsBEJvzBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDEMzEZ14Ag02V1dUDIUe5EUAA",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CNsBEJvzBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNoBEJH7BRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "GhhVQ2JhSlpVVnFmRVpQdHdhVXpHZ2RaOEE%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CNoBEJH7BRgCIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  }
                                ],
                                "trackingParams": "CNkBEKc7IhMItN2qjorC_QIVW47eCh0Tlwwn",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CNgBENVoGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                              "browseEndpoint": {
                                "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CNcBEPleGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Albums"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CMcBENRoGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/3SHp6RXQq4-NBf9KNXmIiummPBXt157HgzYx81Bdx3spzpCW9CzyAGJUfV0OI3zVPXog3dOsntGuGyXn=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/3SHp6RXQq4-NBf9KNXmIiummPBXt157HgzYx81Bdx3spzpCW9CzyAGJUfV0OI3zVPXog3dOsntGuGyXn=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/3SHp6RXQq4-NBf9KNXmIiummPBXt157HgzYx81Bdx3spzpCW9CzyAGJUfV0OI3zVPXog3dOsntGuGyXn=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/3SHp6RXQq4-NBf9KNXmIiummPBXt157HgzYx81Bdx3spzpCW9CzyAGJUfV0OI3zVPXog3dOsntGuGyXn=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CNYBEIS_AiITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CNUBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "OLAK5uy_nmXKqPeuj5RTMAFG4ryhfTR-Uww3IyYQY"
                                      }
                                    },
                                    "trackingParams": "CNUBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Nocturne"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Nocturne"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Nocturne"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Album"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Wild Nothing",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CMcBENRoGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "2012"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNQBEJrzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "OLAK5uy_nmXKqPeuj5RTMAFG4ryhfTR-Uww3IyYQY",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CNQBEJrzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNMBEJvzBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLOLAK5uy_nmXKqPeuj5RTMAFG4ryhfTR-Uww3IyYQY",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CNMBEJvzBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CNEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_nmXKqPeuj5RTMAFG4ryhfTR-Uww3IyYQY"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CNEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CNIBEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CNEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CM8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_nmXKqPeuj5RTMAFG4ryhfTR-Uww3IyYQY"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CM8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CNABEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CM8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add album to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CM0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CM4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CM4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove album from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_REMOVE"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CM0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "OLAK5uy_nmXKqPeuj5RTMAFG4ryhfTR-Uww3IyYQY"
                                          }
                                        }
                                      },
                                      "trackingParams": "CM0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMsBEMOUBhgFIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CMwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CMwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CMsBEMOUBhgFIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMoBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "browseEndpoint": {
                                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CMoBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMkBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EilPTEFLNXV5X25tWEtxUGV1ajVSVE1BRkc0cnloZlRSLVV3dzNJeVlRWQ%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CMkBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  }
                                ],
                                "trackingParams": "CMgBEKc7IhMItN2qjorC_QIVW47eCh0Tlwwn",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CMcBENRoGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                              "browseEndpoint": {
                                "browseId": "MPREb_vNAFrC5HS2I",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CLcBENRoGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/fhvkv7q4dNDXxdVK8pQ7n5GBUnmZ8CIAD42vCruOYcIvvZ24-3j0-NCOobuW_6dx9RZQdPprpUQo3zbc=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/fhvkv7q4dNDXxdVK8pQ7n5GBUnmZ8CIAD42vCruOYcIvvZ24-3j0-NCOobuW_6dx9RZQdPprpUQo3zbc=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/fhvkv7q4dNDXxdVK8pQ7n5GBUnmZ8CIAD42vCruOYcIvvZ24-3j0-NCOobuW_6dx9RZQdPprpUQo3zbc=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/fhvkv7q4dNDXxdVK8pQ7n5GBUnmZ8CIAD42vCruOYcIvvZ24-3j0-NCOobuW_6dx9RZQdPprpUQo3zbc=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CMYBEIS_AiITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CMUBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "OLAK5uy_kJXWO_LsJOt0DU4EZtElJlrT3DRbI2BG0"
                                      }
                                    },
                                    "trackingParams": "CMUBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Gemini"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Gemini"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Gemini"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Album"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Wild Nothing",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CLcBENRoGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "2010"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMQBEJrzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "OLAK5uy_kJXWO_LsJOt0DU4EZtElJlrT3DRbI2BG0",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CMQBEJrzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMMBEJvzBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLOLAK5uy_kJXWO_LsJOt0DU4EZtElJlrT3DRbI2BG0",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CMMBEJvzBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CMEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_kJXWO_LsJOt0DU4EZtElJlrT3DRbI2BG0"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CMEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CMIBEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CMEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CL8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_kJXWO_LsJOt0DU4EZtElJlrT3DRbI2BG0"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CL8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CMABEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CL8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add album to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CL0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CL4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CL4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove album from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_REMOVE"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CL0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "OLAK5uy_kJXWO_LsJOt0DU4EZtElJlrT3DRbI2BG0"
                                          }
                                        }
                                      },
                                      "trackingParams": "CL0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLsBEMOUBhgFIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CLwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CLwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CLsBEMOUBhgFIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLoBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "browseEndpoint": {
                                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CLoBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLkBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EilPTEFLNXV5X2tKWFdPX0xzSk90MERVNEVadEVsSmxyVDNEUmJJMkJHMA%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CLkBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  }
                                ],
                                "trackingParams": "CLgBEKc7IhMItN2qjorC_QIVW47eCh0Tlwwn",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CLcBENRoGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                              "browseEndpoint": {
                                "browseId": "MPREb_jsFGot6MMrD",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CKcBENRoGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/q6r0DSjVK_hjdfYvSvfwA6t2Wm4VAKPpf5y9PyruwRU-CV3405ragNVsEdnCCVGxNxnRSIYl_A6au48Q=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/q6r0DSjVK_hjdfYvSvfwA6t2Wm4VAKPpf5y9PyruwRU-CV3405ragNVsEdnCCVGxNxnRSIYl_A6au48Q=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/q6r0DSjVK_hjdfYvSvfwA6t2Wm4VAKPpf5y9PyruwRU-CV3405ragNVsEdnCCVGxNxnRSIYl_A6au48Q=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/q6r0DSjVK_hjdfYvSvfwA6t2Wm4VAKPpf5y9PyruwRU-CV3405ragNVsEdnCCVGxNxnRSIYl_A6au48Q=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CLYBEIS_AiITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CLUBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "OLAK5uy_mlwh8m6nKgN-s42buN9hDh-6es6tDCDAU"
                                      }
                                    },
                                    "trackingParams": "CLUBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Blue Wings"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Blue Wings"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Blue Wings"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Single"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Wild Nothing",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CKcBENRoGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "2019"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLQBEJrzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "OLAK5uy_mlwh8m6nKgN-s42buN9hDh-6es6tDCDAU",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CLQBEJrzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLMBEJvzBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLOLAK5uy_mlwh8m6nKgN-s42buN9hDh-6es6tDCDAU",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CLMBEJvzBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CLEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_mlwh8m6nKgN-s42buN9hDh-6es6tDCDAU"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CLEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CLIBEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CLEBEL7uBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CK8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_mlwh8m6nKgN-s42buN9hDh-6es6tDCDAU"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CK8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CLABEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CK8BEPvvBRgDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add album to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CK0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CK4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CK4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove album from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_REMOVE"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CK0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "OLAK5uy_mlwh8m6nKgN-s42buN9hDh-6es6tDCDAU"
                                          }
                                        }
                                      },
                                      "trackingParams": "CK0BEIT_BRgEIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CKsBEMOUBhgFIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CKwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CKwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CKsBEMOUBhgFIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CKoBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "browseEndpoint": {
                                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CKoBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CKkBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EilPTEFLNXV5X21sd2g4bTZuS2dOLXM0MmJ1TjloRGgtNmVzNnREQ0RBVQ%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CKkBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  }
                                ],
                                "trackingParams": "CKgBEKc7IhMItN2qjorC_QIVW47eCh0Tlwwn",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CKcBENRoGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                              "browseEndpoint": {
                                "browseId": "MPREb_1rWYKr0G0i4",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CKYBEPleGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CKYBEPleGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                        "searchEndpoint": {
                          "query": "wild nothing",
                          "params": "EgWKAQIYAWoKEAkQAxAEEAoQBQ%3D%3D"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Songs"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CJYBEOFnGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/Aq0-2stEaS3ZgVG9CvLyoT0wryMkknNeI7HyO_iq_FyzHBCxKeRQB1nnNuJoNi06KhpKr6-ODSsQuX95bA=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/Aq0-2stEaS3ZgVG9CvLyoT0wryMkknNeI7HyO_iq_FyzHBCxKeRQB1nnNuJoNi06KhpKr6-ODSsQuX95bA=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CKUBEIS_AiITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CKQBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                      "watchEndpoint": {
                                        "videoId": "g60k7N68Ay4",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CKQBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Letting Go - Wild Nothing"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Letting Go - Wild Nothing"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Letting Go",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CJYBEOFnGAAiEwi03aqOisL9AhVbjt4KHROXDCeaAQMQ9CQ=",
                                          "watchEndpoint": {
                                            "videoId": "g60k7N68Ay4",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Song"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Wild Nothing",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CJYBEOFnGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Indigo",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CJYBEOFnGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "MPREb_U9fVpzT89vL",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "3:42"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CKMBEJvzBRgAIhMItN2qjorC_QIVW47eCh0TlwwnmgEDEPQk",
                                        "watchEndpoint": {
                                          "videoId": "g60k7N68Ay4",
                                          "playlistId": "RDAMVMg60k7N68Ay4",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1nNjBrN042OEF5NA%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CKMBEJvzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CKEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "g60k7N68Ay4"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CKEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CKIBEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CKEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CJ8BEPvvBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "g60k7N68Ay4"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CJ8BEPvvBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CKABEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CJ8BEPvvBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CJ0BEIyfBhgDIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CJ4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CJ4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CJ0BEIyfBhgDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJsBEMOUBhgEIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CJwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CJwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CJsBEMOUBhgEIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to album"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ALBUM"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJoBEI_7BRgFIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "browseEndpoint": {
                                          "browseId": "MPREb_U9fVpzT89vL",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CJoBEI_7BRgFIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJkBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "browseEndpoint": {
                                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CJkBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJgBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtnNjBrN042OEF5NA%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CJgBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  }
                                ],
                                "trackingParams": "CJcBEKc7IhMItN2qjorC_QIVW47eCh0Tlwwn",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "g60k7N68Ay4"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CIYBEOFnGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/3SHp6RXQq4-NBf9KNXmIiummPBXt157HgzYx81Bdx3spzpCW9CzyAGJUfV0OI3zVPXog3dOsntGuGyXn=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/3SHp6RXQq4-NBf9KNXmIiummPBXt157HgzYx81Bdx3spzpCW9CzyAGJUfV0OI3zVPXog3dOsntGuGyXn=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CJUBEIS_AiITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CJQBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                      "watchEndpoint": {
                                        "videoId": "v_ncDpcCt44",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CJQBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Paradise - Wild Nothing"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Paradise - Wild Nothing"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Paradise",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CIYBEOFnGAEiEwi03aqOisL9AhVbjt4KHROXDCeaAQMQ9CQ=",
                                          "watchEndpoint": {
                                            "videoId": "v_ncDpcCt44",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Song"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Wild Nothing",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CIYBEOFnGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Nocturne",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CIYBEOFnGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "MPREb_vNAFrC5HS2I",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "5:30"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJMBEJvzBRgAIhMItN2qjorC_QIVW47eCh0TlwwnmgEDEPQk",
                                        "watchEndpoint": {
                                          "videoId": "v_ncDpcCt44",
                                          "playlistId": "RDAMVMv_ncDpcCt44",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk12X25jRHBjQ3Q0NA%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CJMBEJvzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CJEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "v_ncDpcCt44"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CJEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CJIBEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CJEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CI8BEPvvBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "v_ncDpcCt44"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CI8BEPvvBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CJABEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CI8BEPvvBRgCIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CI0BEIyfBhgDIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CI4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CI4BEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CI0BEIyfBhgDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIsBEMOUBhgEIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CIwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CIwBEPBbIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CIsBEMOUBhgEIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to album"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ALBUM"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIoBEI_7BRgFIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "browseEndpoint": {
                                          "browseId": "MPREb_vNAFrC5HS2I",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CIoBEI_7BRgFIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIkBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "browseEndpoint": {
                                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CIkBEJD7BRgGIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIgBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "Cgt2X25jRHBjQ3Q0NA%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CIgBEJH7BRgHIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  }
                                ],
                                "trackingParams": "CIcBEKc7IhMItN2qjorC_QIVW47eCh0Tlwwn",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "v_ncDpcCt44"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CHYQ4WcYAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/3SHp6RXQq4-NBf9KNXmIiummPBXt157HgzYx81Bdx3spzpCW9CzyAGJUfV0OI3zVPXog3dOsntGuGyXn=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/3SHp6RXQq4-NBf9KNXmIiummPBXt157HgzYx81Bdx3spzpCW9CzyAGJUfV0OI3zVPXog3dOsntGuGyXn=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CIUBEIS_AiITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CIQBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                      "watchEndpoint": {
                                        "videoId": "eeb262NT7S0",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CIQBEMjeAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Shadow - Wild Nothing"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Shadow - Wild Nothing"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Shadow",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CHYQ4WcYAiITCLTdqo6Kwv0CFVuO3godE5cMJ5oBAxD0JA==",
                                          "watchEndpoint": {
                                            "videoId": "eeb262NT7S0",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Song"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Wild Nothing",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CHYQ4WcYAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                          "browseEndpoint": {
                                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Nocturne",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CHYQ4WcYAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                          "browseEndpoint": {
                                            "browseId": "MPREb_vNAFrC5HS2I",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "4:18"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIMBEJvzBRgAIhMItN2qjorC_QIVW47eCh0TlwwnmgEDEPQk",
                                        "watchEndpoint": {
                                          "videoId": "eeb262NT7S0",
                                          "playlistId": "RDAMVMeeb262NT7S0",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1lZWIyNjJOVDdTMA%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CIMBEJvzBRgAIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CIEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "eeb262NT7S0"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CIEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CIIBEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CIEBEL7uBRgBIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CH8Q--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "eeb262NT7S0"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CH8Q--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CIABEMrHAyITCLTdqo6Kwv0CFVuO3godE5cMJw=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CH8Q--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CH0QjJ8GGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CH4Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CH4Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CH0QjJ8GGAMiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHsQw5QGGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CHwQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CHwQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CHsQw5QGGAQiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to album"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ALBUM"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHoQj_sFGAUiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "browseEndpoint": {
                                          "browseId": "MPREb_vNAFrC5HS2I",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CHoQj_sFGAUiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHkQkPsFGAYiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "browseEndpoint": {
                                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CHkQkPsFGAYiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHgQkfsFGAciEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtlZWIyNjJOVDdTMA%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CHgQkfsFGAciEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CHcQpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "eeb262NT7S0"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CHUQ-V4YAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CHUQ-V4YAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                        "searchEndpoint": {
                          "query": "wild nothing",
                          "params": "EgWKAQIIAWoKEAkQAxAEEAoQBQ%3D%3D"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Videos"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CGcQ02gYACITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://i.ytimg.com/vi/O1IiEkaQOGI/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3k5fR6PYNQhceD3LvEMvveCY5oiYw",
                                      "width": 400,
                                      "height": 225
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CHQQhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CHMQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                      "watchEndpoint": {
                                        "videoId": "O1IiEkaQOGI",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CHMQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Wild Nothing - Full Performance (Live on KEXP) - KEXP"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Wild Nothing - Full Performance (Live on KEXP) - KEXP"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Wild Nothing - Full Performance (Live on KEXP)",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CGcQ02gYACITCLTdqo6Kwv0CFVuO3godE5cMJ5oBAxD0JA==",
                                          "watchEndpoint": {
                                            "videoId": "O1IiEkaQOGI",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Video"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "KEXP",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CGcQ02gYACITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                          "browseEndpoint": {
                                            "browseId": "UC3I2GFN_F8WudD_2jUZbojA",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "148K views"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "22:11"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHIQm_MFGAAiEwi03aqOisL9AhVbjt4KHROXDCeaAQMQ9CQ=",
                                        "watchEndpoint": {
                                          "videoId": "O1IiEkaQOGI",
                                          "playlistId": "RDAMVMO1IiEkaQOGI",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1PMUlpRWthUU9HSQ%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CHIQm_MFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CHAQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "O1IiEkaQOGI"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CHAQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CHEQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CHAQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CG4Q--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "O1IiEkaQOGI"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CG4Q--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CG8QyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CG4Q--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CGwQjJ8GGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CG0Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CG0Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CGwQjJ8GGAMiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CGoQw5QGGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CGsQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CGsQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CGoQw5QGGAQiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CGkQkfsFGAUiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtPMUlpRWthUU9HSQ%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CGkQkfsFGAUiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CGgQpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "O1IiEkaQOGI"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CFkQ02gYASITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://i.ytimg.com/vi/6hj-pfAsab4/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3kujIQnMcVtI5x2S7j7z0p0PHribA",
                                      "width": 400,
                                      "height": 225
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CGYQhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CGUQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                      "watchEndpoint": {
                                        "videoId": "6hj-pfAsab4",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CGUQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Wild Nothing - Full Performance (Live on KEXP) - KEXP"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Wild Nothing - Full Performance (Live on KEXP) - KEXP"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Wild Nothing - Full Performance (Live on KEXP)",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CFkQ02gYASITCLTdqo6Kwv0CFVuO3godE5cMJ5oBAxD0JA==",
                                          "watchEndpoint": {
                                            "videoId": "6hj-pfAsab4",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Video"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "KEXP",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CFkQ02gYASITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                          "browseEndpoint": {
                                            "browseId": "UC3I2GFN_F8WudD_2jUZbojA",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "322K views"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "27:39"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CGQQm_MFGAAiEwi03aqOisL9AhVbjt4KHROXDCeaAQMQ9CQ=",
                                        "watchEndpoint": {
                                          "videoId": "6hj-pfAsab4",
                                          "playlistId": "RDAMVM6hj-pfAsab4",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk02aGotcGZBc2FiNA%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CGQQm_MFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CGIQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "6hj-pfAsab4"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CGIQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CGMQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CGIQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CGAQ--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "6hj-pfAsab4"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CGAQ--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CGEQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CGAQ--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CF4QjJ8GGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CF8Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CF8Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CF4QjJ8GGAMiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CFwQw5QGGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CF0Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CF0Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CFwQw5QGGAQiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CFsQkfsFGAUiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "Cgs2aGotcGZBc2FiNA%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CFsQkfsFGAUiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CFoQpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "6hj-pfAsab4"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CEsQ02gYAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://i.ytimg.com/vi/CV9W8AsIZ8Q/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3lSo5kFdtzH_J8AWZJCgXixsiOtEg",
                                      "width": 400,
                                      "height": 225
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CFgQhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CFcQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                      "watchEndpoint": {
                                        "videoId": "CV9W8AsIZ8Q",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CFcQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Wild Nothing - Live at Lollapalooza Chicago 2013 - Alexander"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Wild Nothing - Live at Lollapalooza Chicago 2013 - Alexander"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Wild Nothing - Live at Lollapalooza Chicago 2013",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CEsQ02gYAiITCLTdqo6Kwv0CFVuO3godE5cMJ5oBAxD0JA==",
                                          "watchEndpoint": {
                                            "videoId": "CV9W8AsIZ8Q",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Video"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Alexander",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CEsQ02gYAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                                          "browseEndpoint": {
                                            "browseId": "UCrRloJbByfblVAb1JKOoaTA",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "399K views"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "46:01"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CFYQm_MFGAAiEwi03aqOisL9AhVbjt4KHROXDCeaAQMQ9CQ=",
                                        "watchEndpoint": {
                                          "videoId": "CV9W8AsIZ8Q",
                                          "playlistId": "RDAMVMCV9W8AsIZ8Q",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1DVjlXOEFzSVo4UQ%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CFYQm_MFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CFQQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "CV9W8AsIZ8Q"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CFQQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CFUQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CFQQvu4FGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CFIQ--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "CV9W8AsIZ8Q"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CFIQ--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CFMQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CFIQ--8FGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CFAQjJ8GGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CFEQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CFEQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CFAQjJ8GGAMiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CE4Qw5QGGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CE8Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CE8Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CE4Qw5QGGAQiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CE0QkfsFGAUiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtDVjlXOEFzSVo4UQ%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CE0QkfsFGAUiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CEwQpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "CV9W8AsIZ8Q"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CEoQ-V4YAyITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CEoQ-V4YAyITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                        "searchEndpoint": {
                          "query": "wild nothing",
                          "params": "EgWKAQIQAWoKEAkQAxAEEAoQBQ%3D%3D"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Community playlists"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CDsQ1p8HGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://yt3.ggpht.com/DxU0ZjnwX4YveV8ShFIs9WwVBTNlvAPivwlnnwLGyFWFRC1JF2tnZ7iqKFmJYhHspRwv06AeVA=s192",
                                      "width": 192,
                                      "height": 192
                                    },
                                    {
                                      "url": "https://yt3.ggpht.com/DxU0ZjnwX4YveV8ShFIs9WwVBTNlvAPivwlnnwLGyFWFRC1JF2tnZ7iqKFmJYhHspRwv06AeVA=s576",
                                      "width": 576,
                                      "height": 576
                                    },
                                    {
                                      "url": "https://yt3.ggpht.com/DxU0ZjnwX4YveV8ShFIs9WwVBTNlvAPivwlnnwLGyFWFRC1JF2tnZ7iqKFmJYhHspRwv06AeVA=s1200",
                                      "width": 1200,
                                      "height": 1200
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CEkQhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CEgQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "PL5dancZUtK0lPijkHqtL6S3fnxF1GPHeg",
                                        "params": "wAEB8gECKAE%3D"
                                      }
                                    },
                                    "trackingParams": "CEgQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Wild Nothing (song playlist)"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Wild Nothing (song playlist)"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Wild Nothing (song playlist)"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "chillfactor2112",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CDsQ1p8HGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "UCHWHc0Avvn3db0UTZpc7EJw",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "47 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CEcQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "PL5dancZUtK0lPijkHqtL6S3fnxF1GPHeg",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CEcQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CEYQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLPL5dancZUtK0lPijkHqtL6S3fnxF1GPHeg",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CEYQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CEQQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PL5dancZUtK0lPijkHqtL6S3fnxF1GPHeg"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CEQQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CEUQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CEQQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CEIQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PL5dancZUtK0lPijkHqtL6S3fnxF1GPHeg"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CEIQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CEMQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CEIQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CEAQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CEEQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CEEQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_REMOVE"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CEAQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "PL5dancZUtK0lPijkHqtL6S3fnxF1GPHeg"
                                          }
                                        }
                                      },
                                      "trackingParams": "CEAQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CD4Qw5QGGAUiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CD8Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CD8Q8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CD4Qw5QGGAUiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CD0QkfsFGAYiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EiJQTDVkYW5jWlV0SzBsUGlqa0hxdEw2UzNmbnhGMUdQSGVn",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CD0QkfsFGAYiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CDwQpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CDsQ1p8HGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                              "browseEndpoint": {
                                "browseId": "VLPL5dancZUtK0lPijkHqtL6S3fnxF1GPHeg",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CCwQ1p8HGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://i.ytimg.com/vi/lltBsYsMWKU/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3kyLSxDAIKAi8_AvMStpr99VDgYKg",
                                      "width": 400,
                                      "height": 225
                                    },
                                    {
                                      "url": "https://i.ytimg.com/vi/lltBsYsMWKU/sddefault.jpg?sqp=-oaymwEWCKoDEPABIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3nv6lvamZo4MgG9Z9eL62sKyOhhmQ",
                                      "width": 426,
                                      "height": 240
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CDoQhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CDkQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "PLrA5Sc2luujLO-o3K5IeS6DIA5JUaB5wl",
                                        "params": "wAEB8gECKAE%3D"
                                      }
                                    },
                                    "trackingParams": "CDkQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Wild Nothing"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Wild Nothing"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Wild Nothing"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Shoegaze Daydream ",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CCwQ1p8HGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "UCBE-gdDFsMm8EFr-jJUZSlA",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "10 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CDgQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "PLrA5Sc2luujLO-o3K5IeS6DIA5JUaB5wl",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CDgQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CDcQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLPLrA5Sc2luujLO-o3K5IeS6DIA5JUaB5wl",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CDcQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CDUQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLrA5Sc2luujLO-o3K5IeS6DIA5JUaB5wl"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CDUQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CDYQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CDUQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CDMQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLrA5Sc2luujLO-o3K5IeS6DIA5JUaB5wl"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CDMQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CDQQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CDMQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CDEQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CDIQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CDIQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_REMOVE"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CDEQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "PLrA5Sc2luujLO-o3K5IeS6DIA5JUaB5wl"
                                          }
                                        }
                                      },
                                      "trackingParams": "CDEQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CC8Qw5QGGAUiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CDAQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CDAQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CC8Qw5QGGAUiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CC4QkfsFGAYiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EiJQTHJBNVNjMmx1dWpMTy1vM0s1SWVTNkRJQTVKVWFCNXds",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CC4QkfsFGAYiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CC0QpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CCwQ1p8HGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                              "browseEndpoint": {
                                "browseId": "VLPLrA5Sc2luujLO-o3K5IeS6DIA5JUaB5wl",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CB0Q1p8HGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://i.ytimg.com/vi/pFptt7Cargc/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3kBfKVVcq9F6s2ta_CYtbe68nR0yA",
                                      "width": 400,
                                      "height": 225
                                    },
                                    {
                                      "url": "https://i.ytimg.com/vi/pFptt7Cargc/hq720.jpg?sqp=-oaymwEXCKAGEMIDIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3nTiW1YGlYuVGlFhBI_XJ92nDwx-w",
                                      "width": 800,
                                      "height": 450
                                    },
                                    {
                                      "url": "https://i.ytimg.com/vi/pFptt7Cargc/hq720.jpg?sqp=-oaymwEXCNUGEOADIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3lj88Idu-DgW_x3hFWA_MQYQyS_dA",
                                      "width": 853,
                                      "height": 480
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CCsQhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CCoQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "PLULCQP1q3xvKsQMzvcZeKyM7mSJMf10TR",
                                        "params": "wAEB8gECKAE%3D"
                                      }
                                    },
                                    "trackingParams": "CCoQyN4CIhMItN2qjorC_QIVW47eCh0Tlwwn",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Wild Nothing Mix"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Wild Nothing Mix"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Wild Nothing Mix"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Ciara Power",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CB0Q1p8HGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                          "browseEndpoint": {
                                            "browseId": "UCrtbKPnFxmzs7VFsYCF2yqw",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "34 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CCkQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "PLULCQP1q3xvKsQMzvcZeKyM7mSJMf10TR",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CCkQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CCgQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLPLULCQP1q3xvKsQMzvcZeKyM7mSJMf10TR",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CCgQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CCYQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLULCQP1q3xvKsQMzvcZeKyM7mSJMf10TR"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CCYQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CCcQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CCYQvu4FGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CCQQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLULCQP1q3xvKsQMzvcZeKyM7mSJMf10TR"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CCQQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CCUQyscDIhMItN2qjorC_QIVW47eCh0Tlwwn"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CCQQ--8FGAMiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CCIQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CCMQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CCMQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_REMOVE"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CCIQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "PLULCQP1q3xvKsQMzvcZeKyM7mSJMf10TR"
                                          }
                                        }
                                      },
                                      "trackingParams": "CCIQhP8FGAQiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CCAQw5QGGAUiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CCEQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CCEQ8FsiEwi03aqOisL9AhVbjt4KHROXDCc="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CCAQw5QGGAUiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CB8QkfsFGAYiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EiJQTFVMQ1FQMXEzeHZLc1FNenZjWmVLeU03bVNKTWYxMFRS",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CB8QkfsFGAYiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CB4QpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CB0Q1p8HGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                              "browseEndpoint": {
                                "browseId": "VLPLULCQP1q3xvKsQMzvcZeKyM7mSJMf10TR",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CBwQ-V4YBCITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CBwQ-V4YBCITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                        "searchEndpoint": {
                          "query": "wild nothing",
                          "params": "EgeKAQQoAEABagoQCRADEAQQChAF"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Artists"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CBYQ1WgYACITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/FQ_aKaZNRozbbAJ1dFwt9FA2ZQCQMssgKWEwBPwXPQ85EIUNT56euLO57d4XcPntTQZFZVyk9RREkmTkoQ=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/FQ_aKaZNRozbbAJ1dFwt9FA2ZQCQMssgKWEwBPwXPQ85EIUNT56euLO57d4XcPntTQZFZVyk9RREkmTkoQ=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_CIRCLE",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FILL",
                                "trackingParams": "CBsQhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Epic Dream"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Artist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "76 subscribers"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBoQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAOr1gtp72TgyzmiMyO_GbvCQ",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "CBoQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBkQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDEMr1gtp72TgyzmiMyO_GbvCQ",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CBkQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBgQkfsFGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "GhhVQ2hQN0FVT1pwVTdQUFJhSUYyNFFGWUE%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CBgQkfsFGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CBcQpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CBYQ1WgYACITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                              "browseEndpoint": {
                                "browseId": "UChP7AUOZpU7PPRaIF24QFYA",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CBAQ1WgYASITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/a-/AD5-WCkrpVANBEnq8lpVPVktqAKxMvU4FFncn7gFlz-l4A=w60-h60-l90-rj-dcpXSQra0G",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/a-/AD5-WCkrpVANBEnq8lpVPVktqAKxMvU4FFncn7gFlz-l4A=w120-h120-l90-rj-dcpXSQra0G",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_CIRCLE",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FILL",
                                "trackingParams": "CBUQhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Molly Burch"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Artist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "7.64K subscribers"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBQQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAOubI-CFobR0SqRRxgGt32PA",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "CBQQmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBMQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDEMubI-CFobR0SqRRxgGt32PA",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CBMQm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBIQkfsFGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "GhhVQ3NjbXBaUGgzTm9ZamdnUlNoSFFnZGc%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CBIQkfsFGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CBEQpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CBAQ1WgYASITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                              "browseEndpoint": {
                                "browseId": "UCscmpZPh3NoYjggRShHQgdg",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CAoQ1WgYAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/38qj-y45aqC8KvmWtowU9ROQjTuI2HZtyPAqPZpbnF0sgYy6I__fChUbho_4pUafcbTAtdlM3KgBYQoa=w60-h60-p-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/38qj-y45aqC8KvmWtowU9ROQjTuI2HZtyPAqPZpbnF0sgYy6I__fChUbho_4pUafcbTAtdlM3KgBYQoa=w120-h120-p-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_CIRCLE",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FILL",
                                "trackingParams": "CA8QhL8CIhMItN2qjorC_QIVW47eCh0Tlwwn"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "As I Lay Dying"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Artist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "247K subscribers"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CA4QmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAOzcwSZy66N_FL-dtJtMSPCw",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "CA4QmvMFGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CA0Qm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDEMzcwSZy66N_FL-dtJtMSPCw",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CA0Qm_MFGAEiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CAwQkfsFGAIiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "GhhVQ2ZGWjJraHBCRzBCSFNUTmNmdHVIZXc%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CAwQkfsFGAIiEwi03aqOisL9AhVbjt4KHROXDCc="
                                    }
                                  }
                                ],
                                "trackingParams": "CAsQpzsiEwi03aqOisL9AhVbjt4KHROXDCc=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CAoQ1WgYAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                              "browseEndpoint": {
                                "browseId": "UCfFZ2khpBG0BHSTNcftuHew",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CAkQ-V4YBSITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CAkQ-V4YBSITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                        "searchEndpoint": {
                          "query": "wild nothing",
                          "params": "EgWKAQIgAWoKEAkQAxAEEAoQBQ%3D%3D"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  }
                ],
                "trackingParams": "CAIQui8iEwi03aqOisL9AhVbjt4KHROXDCc=",
                "header": {
                  "chipCloudRenderer": {
                    "chips": [
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Albums"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAgQ_V0YACITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "searchEndpoint": {
                              "query": "wild nothing",
                              "params": "EgWKAQIYAWoKEAkQAxAEEAoQBQ%3D%3D"
                            }
                          },
                          "trackingParams": "CAgQ_V0YACITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show album results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Albums"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Songs"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAcQ_V0YASITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "searchEndpoint": {
                              "query": "wild nothing",
                              "params": "EgWKAQIIAWoKEAkQAxAEEAoQBQ%3D%3D"
                            }
                          },
                          "trackingParams": "CAcQ_V0YASITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show song results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Songs"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Videos"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAYQ_V0YAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "searchEndpoint": {
                              "query": "wild nothing",
                              "params": "EgWKAQIQAWoKEAkQAxAEEAoQBQ%3D%3D"
                            }
                          },
                          "trackingParams": "CAYQ_V0YAiITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show video results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Videos"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Community playlists"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAUQ_V0YAyITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "searchEndpoint": {
                              "query": "wild nothing",
                              "params": "EgeKAQQoAEABagoQCRADEAQQChAF"
                            }
                          },
                          "trackingParams": "CAUQ_V0YAyITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show community playlist results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Community playlists"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Artists"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAQQ_V0YBCITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                            "searchEndpoint": {
                              "query": "wild nothing",
                              "params": "EgWKAQIgAWoKEAkQAxAEEAoQBQ%3D%3D"
                            }
                          },
                          "trackingParams": "CAQQ_V0YBCITCLTdqo6Kwv0CFVuO3godE5cMJw==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show artist results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Artists"
                        }
                      }
                    ],
                    "collapsedRowCount": 1,
                    "trackingParams": "CAMQ_F0iEwi03aqOisL9AhVbjt4KHROXDCc=",
                    "horizontalScrollable": true
                  }
                }
              }
            },
            "tabIdentifier": "music_search_catalog",
            "trackingParams": "CAEQ8JMBGAAiEwi03aqOisL9AhVbjt4KHROXDCc="
          }
        }
      ]
    }
  },
  "trackingParams": "CAAQvGkiEwi03aqOisL9AhVbjt4KHROXDCc="
}

  recorded_at: Sat, 04 Mar 2023 10:36:18 GMT
- request:
    method: post
    uri: https://music.youtube.com/youtubei/v1/search?continuation=EqkDEgx3aWxkIG5vdGhpbmcamANFZ1dLQVFJUUFVZ1VhZ29RQ1JBREVBUVFDaEFGZ2dFTFR6RkphVVZyWVZGUFIwbUNBUXMyYUdvdGNHWkJjMkZpTklJQkMwTldPVmM0UVhOSldqaFJnZ0VMZW0wMk16WldVMUZZVlZXQ0FRdE5ZMFp5VTNCNldXRXlRWUlCQzJGVmRFUmZRa0pUWWxZNGdnRUxWWE5XZGpjdFNYTndYekNDQVF0MldqVlBlblJPUjJWYWE0SUJDMEl3UWpoRVV6SmFZMmRWZ2dFTFprUTRVbVZpTFhwSVdFR0NBUXRTVm1WcU0xOVdjVGhJYTRJQkMxaGxaM2wxU0ZwU2VYbEpnZ0VMVG5ac1NHSkdNRlYyV0UyQ0FRdFBhVlk1Wlc1QmJ6TnVVWUlCQzNkT1pIRlZNMlpRTlZSSmdnRUxVVXBoUm5WZk5rdHVlVW1DQVF0UGNtbFRiVGgwVldkcE5JSUJDMjFYYVdKME9WSlhkM1JaZ2dFTFZWRTJhWEp4YW5ad2NHLUNBUXRrZFMxVldFTlVUR1JTYnclM0QlM0QY8erQLg%253D%253D
    body:
      encoding: UTF-8
      string: '{"context":{"client":{"clientName":"WEB_REMIX","clientVersion":"1.20230227.01.00","gl":"GB"}},"query":"wild
        nothing","params":"EgWKAQIQAWoKEAkQAxAEEAoQBQ%3D%3D"}'
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.2.0p0
      Content-Type:
      - application/json
      Content-Length:
      - '161'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - music.youtube.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Sat, 04 Mar 2023 10:36:18 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "responseContext": {
    "visitorData": "Cgs1NGtoU3U3MDcyUSiivoygBg%3D%3D",
    "serviceTrackingParams": [
      {
        "service": "CSI",
        "params": [
          {
            "key": "c",
            "value": "WEB_REMIX"
          },
          {
            "key": "cver",
            "value": "1.20230227.01.00"
          },
          {
            "key": "yt_li",
            "value": "0"
          },
          {
            "key": "GetSearch_rid",
            "value": "0x2b32a06b2e5a554b"
          }
        ]
      },
      {
        "service": "GFEEDBACK",
        "params": [
          {
            "key": "logged_in",
            "value": "0"
          },
          {
            "key": "e",
            "value": "1714250,23804281,23918597,23946420,23966208,23983296,23998056,24004644,24007246,24034168,24036947,24077241,24080738,24120820,24135310,24140247,24162919,24164186,24169501,24181174,24186126,24187043,24187377,24197450,24211178,24219713,24241378,24248091,24255165,24255543,24255545,24262346,24263796,24268142,24281897,24283015,24288664,24290971,24390674,24404640,24407191,24415864,24415866,24420425,24422004,24426636,24428818,24428940,24429092,24439360,24439483,24450367,24451033,24453129,24456736,24458317,24458324,24458329,24458476,24458839,24459435,24465011,24466371,24466859,24468724,24470280,24474983,24475364,24476290,24477512,24481213,24481771,24482080,24484080,24486981,24487189,39323074"
          }
        ]
      },
      {
        "service": "ECATCHER",
        "params": [
          {
            "key": "client.version",
            "value": "1.20000101"
          },
          {
            "key": "client.name",
            "value": "WEB_REMIX"
          },
          {
            "key": "client.fexp",
            "value": "24288664,24248091,23804281,24181174,23946420,24407191,24290971,24456736,23966208,39323074,24268142,1714250,24077241,24120820,24458317,24415864,24197450,24281897,24458324,24486981,24211178,24481213,24429092,24468724,24453129,24241378,24255545,24458839,24186126,24482080,24481771,24474983,24470280,24169501,24451033,24439483,24487189,24390674,24404640,24420425,24439360,24428818,24034168,24255165,24007246,24459435,24187377,24162919,24036947,24004644,23998056,24415866,24458329,24477512,24426636,24262346,24476290,24466859,24263796,24187043,24466371,24428940,24450367,24135310,24080738,24164186,24422004,23918597,24283015,24475364,24484080,24255543,24465011,24140247,24458476,23983296,24219713"
          }
        ]
      }
    ],
    "maxAgeSeconds": 120
  },
  "continuationContents": {
    "musicShelfContinuation": {
      "contents": [
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CJgCENNoGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/w6eGWMl9qx8/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3ksi69RjRWlLfMxBq7AAvOqVPWlCA",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CKUCEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CKQCEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "w6eGWMl9qx8",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CKQCEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Partners In Motion (Live on KEXP) - KEXP"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Partners In Motion (Live on KEXP) - KEXP"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Partners In Motion (Live on KEXP)",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CJgCENNoGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "w6eGWMl9qx8",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "KEXP",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CJgCENNoGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UC3I2GFN_F8WudD_2jUZbojA",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "33K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:29"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKMCEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "w6eGWMl9qx8",
                          "playlistId": "RDAMVMw6eGWMl9qx8",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk13NmVHV01sOXF4OA%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CKMCEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CKECEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "w6eGWMl9qx8"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CKECEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CKICEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CKECEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJ8CEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "w6eGWMl9qx8"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CJ8CEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CKACEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJ8CEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CJ0CEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJ4CEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJ4CEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CJ0CEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJsCEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJwCEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJwCEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CJsCEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJoCEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "Cgt3NmVHV01sOXF4OA%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CJoCEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CJkCEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "w6eGWMl9qx8"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CIoCENNoGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/UQ6irqjvppo/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3mEFtNMb3f9advz0FBlxI13_3W7zA",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CJcCEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CJYCEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "UQ6irqjvppo",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CJYCEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - TV Queen (2015) (Audio) - tangkad99"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - TV Queen (2015) (Audio) - tangkad99"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - TV Queen (2015) (Audio)",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CIoCENNoGAEiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "UQ6irqjvppo",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "tangkad99",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CIoCENNoGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UCxPLRz3kUU9nIrmvqsvBl9Q",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "73K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "3:55"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJUCEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "UQ6irqjvppo",
                          "playlistId": "RDAMVMUQ6irqjvppo",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1VUTZpcnFqdnBwbw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CJUCEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJMCEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "UQ6irqjvppo"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CJMCEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CJQCEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJMCEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJECEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "UQ6irqjvppo"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CJECEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CJICEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJECEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CI8CEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJACEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJACEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CI8CEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CI0CEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CI4CEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CI4CEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CI0CEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIwCEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtVUTZpcnFqdnBwbw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CIwCEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CIsCEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "UQ6irqjvppo"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CPwBENNoGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/h9it4zTzhlU/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3miSJ6a5lwoWjytcAMJk2C2nmSGFQ",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CIkCEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CIgCEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "h9it4zTzhlU",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CIgCEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing-Summer Holiday live in Lollapalooza - cheno mol"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing-Summer Holiday live in Lollapalooza - cheno mol"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing-Summer Holiday live in Lollapalooza",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CPwBENNoGAIiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "h9it4zTzhlU",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "cheno mol",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CPwBENNoGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UCs85xLfABV7CgbNbVsxKOTw",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "13K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:05"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIcCEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "h9it4zTzhlU",
                          "playlistId": "RDAMVMh9it4zTzhlU",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1oOWl0NHpUemhsVQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CIcCEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CIUCEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "h9it4zTzhlU"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CIUCEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CIYCEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CIUCEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CIMCEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "h9it4zTzhlU"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CIMCEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CIQCEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CIMCEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CIECEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CIICEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CIICEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CIECEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CP8BEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CIACEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CIACEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CP8BEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CP4BEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtoOWl0NHpUemhsVQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CP4BEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CP0BEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "h9it4zTzhlU"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CO4BENNoGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/OZhxC5XMatY/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3kPBjsfyVxWai2pYmpDG2VEKfPYNQ",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CPsBEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CPoBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "OZhxC5XMatY",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CPoBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Only Heather - Wild Nothing (Subtitulada) - S u n f l o w e r"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Only Heather - Wild Nothing (Subtitulada) - S u n f l o w e r"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Only Heather - Wild Nothing (Subtitulada)",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CO4BENNoGAMiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "OZhxC5XMatY",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "S u n f l o w e r",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CO4BENNoGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UC8I29AEci0UbxvbnbCejX0w",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "7.8K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "3:13"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CPkBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "OZhxC5XMatY",
                          "playlistId": "RDAMVMOZhxC5XMatY",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1PWmh4QzVYTWF0WQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CPkBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CPcBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "OZhxC5XMatY"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CPcBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CPgBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CPcBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CPUBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "OZhxC5XMatY"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CPUBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CPYBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CPUBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CPMBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CPQBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CPQBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CPMBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CPEBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CPIBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CPIBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CPEBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CPABEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtPWmh4QzVYTWF0WQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CPABEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CO8BEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "OZhxC5XMatY"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "COABENNoGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/EfwLH4_P6ag/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3kNYlfGSPNN1jLIAIIMb8-24-g4rA",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CO0BEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "COwBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "EfwLH4_P6ag",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "COwBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Chinatown (Sub. Español) - 𝙒 𝙃 𝘼 𝙇 𝙀 𝙍ᰓ"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Chinatown (Sub. Español) - 𝙒 𝙃 𝘼 𝙇 𝙀 𝙍ᰓ"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Chinatown (Sub. Español)",
                        "navigationEndpoint": {
                          "clickTrackingParams": "COABENNoGAQiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "EfwLH4_P6ag",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "𝙒 𝙃 𝘼 𝙇 𝙀 𝙍ᰓ",
                        "navigationEndpoint": {
                          "clickTrackingParams": "COABENNoGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UCRKQshCs6TPPPuBSXVi6t2g",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "1.5K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "3:21"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "COsBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "EfwLH4_P6ag",
                          "playlistId": "RDAMVMEfwLH4_P6ag",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1FZndMSDRfUDZhZw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "COsBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "COkBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "EfwLH4_P6ag"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "COkBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "COoBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "COkBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "COcBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "EfwLH4_P6ag"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "COcBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "COgBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "COcBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "COUBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "COYBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "COYBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "COUBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "COMBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "COQBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "COQBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "COMBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "COIBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtFZndMSDRfUDZhZw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "COIBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "COEBEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "EfwLH4_P6ag"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CNIBENNoGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/v5txXg4nFNU/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3nTPaggYRfqCsu733aCwu0tV58Qeg",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CN8BEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CN4BEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "v5txXg4nFNU",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CN4BEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Chinatown (Live in Chile) - fauna.tv"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Chinatown (Live in Chile) - fauna.tv"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Chinatown (Live in Chile)",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CNIBENNoGAUiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "v5txXg4nFNU",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "fauna.tv",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CNIBENNoGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UC_2340gvw820T6FSVzfvsGQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "3.1K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "2:54"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CN0BEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "v5txXg4nFNU",
                          "playlistId": "RDAMVMv5txXg4nFNU",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk12NXR4WGc0bkZOVQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CN0BEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CNsBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "v5txXg4nFNU"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CNsBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CNwBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CNsBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CNkBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "v5txXg4nFNU"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CNkBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CNoBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CNkBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CNcBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CNgBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CNgBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CNcBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CNUBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CNYBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CNYBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CNUBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CNQBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "Cgt2NXR4WGc0bkZOVQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CNQBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CNMBEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "v5txXg4nFNU"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CMQBENNoGAYiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/qtujljYkHdQ/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3l8XRWKFcOGbWuhDKW7JNnfm-CVqA",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CNEBEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CNABEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "qtujljYkHdQ",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CNABEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing / Wheels of Misfortune - Okipako"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing / Wheels of Misfortune - Okipako"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing / Wheels of Misfortune",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CMQBENNoGAYiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "qtujljYkHdQ",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Okipako",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CMQBENNoGAYiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UCcT7BOcIeuM_WYo-tJq32WQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "2.6K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:15"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CM8BEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "qtujljYkHdQ",
                          "playlistId": "RDAMVMqtujljYkHdQ",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1xdHVqbGpZa0hkUQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CM8BEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CM0BEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "qtujljYkHdQ"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CM0BEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CM4BEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CM0BEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CMsBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "qtujljYkHdQ"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CMsBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CMwBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CMsBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CMkBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CMoBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CMoBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CMkBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CMcBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CMgBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CMgBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CMcBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CMYBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtxdHVqbGpZa0hkUQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CMYBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CMUBEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "qtujljYkHdQ"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CLUBENNoGAciEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/cP8wfslr7hY/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3nw5bIVALH52YHsNmDgjbLu1srlzw",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CMMBEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CMIBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "cP8wfslr7hY",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                          }
                        }
                      }
                    },
                    "trackingParams": "CMIBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Paradise - Wild Nothing"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Paradise - Wild Nothing"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Paradise",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CLUBENNoGAciEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "cP8wfslr7hY",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CLUBENNoGAciEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "572K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "5:33"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CMEBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "cP8wfslr7hY",
                          "playlistId": "RDAMVMcP8wfslr7hY",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1jUDh3ZnNscjdoWQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                            }
                          }
                        }
                      },
                      "trackingParams": "CMEBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CL8BEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "cP8wfslr7hY"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CL8BEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CMABEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CL8BEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CL0BEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "cP8wfslr7hY"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CL0BEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CL4BEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CL0BEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CLsBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CLwBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CLwBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CLsBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLkBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CLoBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CLoBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CLkBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Go to artist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ARTIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLgBEJD7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "browseEndpoint": {
                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                          "browseEndpointContextSupportedConfigs": {
                            "browseEndpointContextMusicConfig": {
                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                            }
                          }
                        }
                      },
                      "trackingParams": "CLgBEJD7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLcBEJH7BRgGIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtjUDh3ZnNscjdoWQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CLcBEJH7BRgGIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CLYBEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "cP8wfslr7hY"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CKcBENNoGAgiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/6HH-HESVfCM/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3nBeVg-6W_Q0uscx1-8Goe85YeV7Q",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CLQBEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CLMBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "6HH-HESVfCM",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CLMBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Partners In Motion- LYRICS - JV info red"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Partners In Motion- LYRICS - JV info red"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Partners In Motion- LYRICS",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CKcBENNoGAgiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "6HH-HESVfCM",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "JV info red",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CKcBENNoGAgiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UC9xmbk1ilKyTEN5Biql47XA",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "5.3K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:21"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLIBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "6HH-HESVfCM",
                          "playlistId": "RDAMVM6HH-HESVfCM",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk02SEgtSEVTVmZDTQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CLIBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CLABEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "6HH-HESVfCM"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CLABEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CLEBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CLABEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CK4BEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "6HH-HESVfCM"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CK4BEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CK8BEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CK4BEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CKwBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CK0BEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CK0BEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CKwBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKoBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CKsBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CKsBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CKoBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKkBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "Cgs2SEgtSEVTVmZDTQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CKkBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CKgBEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "6HH-HESVfCM"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CJkBENNoGAkiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/u0WT5BQuYUs/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3lnFRGrLgNeI4lZKgs-fsOK8P82xg",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CKYBEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CKUBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "u0WT5BQuYUs",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                          }
                        }
                      }
                    },
                    "trackingParams": "CKUBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Partners in Motion - Jack Tatum"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Partners in Motion - Jack Tatum"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Partners in Motion",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CJkBENNoGAkiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "u0WT5BQuYUs",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Jack Tatum"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "40K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:25"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKQBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "u0WT5BQuYUs",
                          "playlistId": "RDAMVMu0WT5BQuYUs",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk11MFdUNUJRdVlVcw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                            }
                          }
                        }
                      },
                      "trackingParams": "CKQBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CKIBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "u0WT5BQuYUs"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CKIBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CKMBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CKIBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CKABEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "u0WT5BQuYUs"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CKABEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CKEBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CKABEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CJ4BEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJ8BEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJ8BEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CJ4BEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJwBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJ0BEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJ0BEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CJwBEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJsBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "Cgt1MFdUNUJRdVlVcw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CJsBEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CJoBEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "u0WT5BQuYUs"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CIsBENNoGAoiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/J-y-B7Jo21Y/hqdefault.jpg?sqp=-oaymwEWCMACELQBIAQqCghQEJADGFogjgJIWg&rs=AMzJL3kJsYhCOZU-K4_-O9QAQf5zrjjJ9Q",
                      "width": 320,
                      "height": 180
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CJgBEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CJcBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "J-y-B7Jo21Y",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CJcBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Gemini - Pessimist - TheSerialHunter"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Gemini - Pessimist - TheSerialHunter"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Gemini - Pessimist",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CIsBENNoGAoiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                          "watchEndpoint": {
                            "videoId": "J-y-B7Jo21Y",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "TheSerialHunter",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CIsBENNoGAoiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                          "browseEndpoint": {
                            "browseId": "UCWF5kQ134q-CN-t580--ieQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "53K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "1:47"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJYBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "J-y-B7Jo21Y",
                          "playlistId": "RDAMVMJ-y-B7Jo21Y",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1KLXktQjdKbzIxWQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CJYBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJQBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "J-y-B7Jo21Y"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CJQBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CJUBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJQBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJIBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "J-y-B7Jo21Y"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CJIBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CJMBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJIBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CJABEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJEBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJEBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CJABEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CI4BEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CI8BEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CI8BEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CI4BEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CI0BEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtKLXktQjdKbzIxWQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CI0BEJH7BRgFIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  }
                ],
                "trackingParams": "CIwBEKc7IhMI4oHNjorC_QIVB9QRCB0s3wfG",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "J-y-B7Jo21Y"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CH0Q02gYCyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/j6gHlAUEK9k/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3m72xcUgCH5l-OfNILVG6AmIGAE3A",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CIoBEIS_AiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CIkBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                      "watchEndpoint": {
                        "videoId": "j6gHlAUEK9k",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CIkBEMjeAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Cloudbusting - krryslow"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Cloudbusting - krryslow"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Cloudbusting",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CH0Q02gYCyITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "j6gHlAUEK9k",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "krryslow",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CH0Q02gYCyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UCsUyojO9v1q0Wu9H6NBzSUQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "14K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "5:26"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIgBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfGmgEDEPQk",
                        "watchEndpoint": {
                          "videoId": "j6gHlAUEK9k",
                          "playlistId": "RDAMVMj6gHlAUEK9k",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1qNmdIbEFVRUs5aw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CIgBEJvzBRgAIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CIYBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "j6gHlAUEK9k"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CIYBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CIcBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CIYBEL7uBRgBIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CIQBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "j6gHlAUEK9k"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CIQBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CIUBEMrHAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CIQBEPvvBRgCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CIIBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CIMBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CIMBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CIIBEIyfBhgDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIABEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CIEBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CIEBEPBbIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CIABEMOUBhgEIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CH8QkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtqNmdIbEFVRUs5aw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CH8QkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CH4QpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "j6gHlAUEK9k"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CG8Q02gYDCITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/MDzMQs6q_uY/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3mCf1ZKKFfAPlPxoL811vDfUqleoQ",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CHwQhL8CIhMI4oHNjorC_QIVB9QRCB0s3wfG"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CHsQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                      "watchEndpoint": {
                        "videoId": "MDzMQs6q_uY",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CHsQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Whenever I - C'est la Vie"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Whenever I - C'est la Vie"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Whenever I",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CG8Q02gYDCITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "MDzMQs6q_uY",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "C'est la Vie",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CG8Q02gYDCITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UCR9NI8JjCD12BdQB8O_HqrQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "91K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:57"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CHoQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                        "watchEndpoint": {
                          "videoId": "MDzMQs6q_uY",
                          "playlistId": "RDAMVMMDzMQs6q_uY",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1NRHpNUXM2cV91WQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CHoQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CHgQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "MDzMQs6q_uY"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CHgQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CHkQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CHgQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CHYQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "MDzMQs6q_uY"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CHYQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CHcQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CHYQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CHQQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CHUQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CHUQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CHQQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CHIQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CHMQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CHMQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CHIQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CHEQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtNRHpNUXM2cV91WQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CHEQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CHAQpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "MDzMQs6q_uY"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CGEQ02gYDSITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/fihC8W_-_vo/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3kBDJz2_8sVKSefEdOsO36vuJf2zQ",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CG4QhL8CIhMI4oHNjorC_QIVB9QRCB0s3wfG"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CG0QyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                      "watchEndpoint": {
                        "videoId": "fihC8W_-_vo",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CG0QyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Gemini / THEY SHOOT MUSIC - theyshootmusic"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Gemini / THEY SHOOT MUSIC - theyshootmusic"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Gemini / THEY SHOOT MUSIC",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CGEQ02gYDSITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "fihC8W_-_vo",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "theyshootmusic",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CGEQ02gYDSITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UCBneLU-vaosPfjC65cKnOig",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "39K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "5:51"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CGwQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                        "watchEndpoint": {
                          "videoId": "fihC8W_-_vo",
                          "playlistId": "RDAMVMfihC8W_-_vo",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1maWhDOFdfLV92bw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CGwQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CGoQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "fihC8W_-_vo"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CGoQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CGsQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CGoQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CGgQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "fihC8W_-_vo"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CGgQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CGkQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CGgQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CGYQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CGcQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CGcQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CGYQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CGQQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CGUQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CGUQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CGQQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CGMQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtmaWhDOFdfLV92bw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CGMQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CGIQpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "fihC8W_-_vo"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CFIQ02gYDiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/RVej3_Vq8Hk/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3lnjqJAASzlpLm8qJATbyyr0KbupQ",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CGAQhL8CIhMI4oHNjorC_QIVB9QRCB0s3wfG"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CF8QyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                      "watchEndpoint": {
                        "videoId": "RVej3_Vq8Hk",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                          }
                        }
                      }
                    },
                    "trackingParams": "CF8QyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Shadow - Wild Nothing"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Shadow - Wild Nothing"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Shadow",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CFIQ02gYDiITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "RVej3_Vq8Hk",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CFIQ02gYDiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "45K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:20"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CF4Qm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                        "watchEndpoint": {
                          "videoId": "RVej3_Vq8Hk",
                          "playlistId": "RDAMVMRVej3_Vq8Hk",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1SVmVqM19WcThIaw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                            }
                          }
                        }
                      },
                      "trackingParams": "CF4Qm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CFwQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "RVej3_Vq8Hk"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CFwQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CF0QyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CFwQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CFoQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "RVej3_Vq8Hk"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CFoQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CFsQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CFoQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CFgQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CFkQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CFkQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CFgQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CFYQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CFcQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CFcQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CFYQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Go to artist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ARTIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CFUQkPsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "browseEndpoint": {
                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                          "browseEndpointContextSupportedConfigs": {
                            "browseEndpointContextMusicConfig": {
                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                            }
                          }
                        }
                      },
                      "trackingParams": "CFUQkPsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CFQQkfsFGAYiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtSVmVqM19WcThIaw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CFQQkfsFGAYiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CFMQpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "RVej3_Vq8Hk"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CEQQ02gYDyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/lgdnz4f_q5o/hqdefault.jpg?sqp=-oaymwEWCMACELQBIAQqCghQEJADGFogjgJIWg&rs=AMzJL3lmobSP8fWAYIVHpzYr_OHKSvsDSw",
                      "width": 320,
                      "height": 180
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CFEQhL8CIhMI4oHNjorC_QIVB9QRCB0s3wfG"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CFAQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                      "watchEndpoint": {
                        "videoId": "lgdnz4f_q5o",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CFAQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Gemini - The Witching Hour - TheSerialHunter"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Gemini - The Witching Hour - TheSerialHunter"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Gemini - The Witching Hour",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CEQQ02gYDyITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "lgdnz4f_q5o",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "TheSerialHunter",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CEQQ02gYDyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UCWF5kQ134q-CN-t580--ieQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "62K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:06"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CE8Qm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                        "watchEndpoint": {
                          "videoId": "lgdnz4f_q5o",
                          "playlistId": "RDAMVMlgdnz4f_q5o",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1sZ2RuejRmX3E1bw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CE8Qm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CE0Qvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "lgdnz4f_q5o"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CE0Qvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CE4QyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CE0Qvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CEsQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "lgdnz4f_q5o"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CEsQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CEwQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CEsQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CEkQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CEoQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CEoQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CEkQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CEcQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CEgQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CEgQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CEcQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CEYQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtsZ2RuejRmX3E1bw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CEYQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CEUQpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "lgdnz4f_q5o"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CDYQ02gYECITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/DsaH2kGnYvc/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3mqPY3y_RHfMVPFAGZBbuXgDpyBQQ",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CEMQhL8CIhMI4oHNjorC_QIVB9QRCB0s3wfG"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CEIQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                      "watchEndpoint": {
                        "videoId": "DsaH2kGnYvc",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CEIQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Live In Dreams (Live on KEXP) - KEXP"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Live In Dreams (Live on KEXP) - KEXP"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Live In Dreams (Live on KEXP)",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CDYQ02gYECITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "DsaH2kGnYvc",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "KEXP",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CDYQ02gYECITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UC3I2GFN_F8WudD_2jUZbojA",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "110K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "3:54"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CEEQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                        "watchEndpoint": {
                          "videoId": "DsaH2kGnYvc",
                          "playlistId": "RDAMVMDsaH2kGnYvc",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1Ec2FIMmtHbll2Yw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CEEQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CD8Qvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "DsaH2kGnYvc"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CD8Qvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CEAQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CD8Qvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CD0Q--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "DsaH2kGnYvc"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CD0Q--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CD4QyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CD0Q--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CDsQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CDwQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CDwQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CDsQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CDkQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CDoQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CDoQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CDkQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CDgQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtEc2FIMmtHbll2Yw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CDgQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CDcQpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "DsaH2kGnYvc"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CCgQ02gYESITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/YZAS2-U3Fqs/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3n1TxOb7HqSYcFDRzuWjwZjxnf6HQ",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CDUQhL8CIhMI4oHNjorC_QIVB9QRCB0s3wfG"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CDQQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                      "watchEndpoint": {
                        "videoId": "YZAS2-U3Fqs",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CDQQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - The Blue Dress - greg os"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - The Blue Dress - greg os"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - The Blue Dress",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CCgQ02gYESITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "YZAS2-U3Fqs",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "greg os",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CCgQ02gYESITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UCobDl4rRjJc8bXfpyrGrPCg",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "182K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "3:30"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CDMQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                        "watchEndpoint": {
                          "videoId": "YZAS2-U3Fqs",
                          "playlistId": "RDAMVMYZAS2-U3Fqs",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1ZWkFTMi1VM0Zxcw%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CDMQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CDEQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "YZAS2-U3Fqs"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CDEQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CDIQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CDEQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CC8Q--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "YZAS2-U3Fqs"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CC8Q--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CDAQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CC8Q--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CC0QjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CC4Q8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CC4Q8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CC0QjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CCsQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CCwQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CCwQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CCsQw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CCoQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtZWkFTMi1VM0Zxcw%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CCoQkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CCkQpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "YZAS2-U3Fqs"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CBkQ02gYEiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/b20SV7v0fzE/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3nSl-dNTlH64_Q1U4m-m3SEUJOFxg",
                      "width": 400,
                      "height": 225
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CCcQhL8CIhMI4oHNjorC_QIVB9QRCB0s3wfG"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CCYQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                      "watchEndpoint": {
                        "videoId": "b20SV7v0fzE",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                          }
                        }
                      }
                    },
                    "trackingParams": "CCYQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play A Dancing Shell - Wild Nothing"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause A Dancing Shell - Wild Nothing"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "A Dancing Shell",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CBkQ02gYEiITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "b20SV7v0fzE",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CBkQ02gYEiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "606K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "4:25"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CCUQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                        "watchEndpoint": {
                          "videoId": "b20SV7v0fzE",
                          "playlistId": "RDAMVMb20SV7v0fzE",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1iMjBTVjd2MGZ6RQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_OMV"
                            }
                          }
                        }
                      },
                      "trackingParams": "CCUQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CCMQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "b20SV7v0fzE"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CCMQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CCQQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CCMQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CCEQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "b20SV7v0fzE"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CCEQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CCIQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CCEQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CB8QjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CCAQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CCAQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CB8QjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CB0Qw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CB4Q8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CB4Q8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CB0Qw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Go to artist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ARTIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CBwQkPsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "browseEndpoint": {
                          "browseId": "UCbaJZUVqfEZPtwaUzGgdZ8A",
                          "browseEndpointContextSupportedConfigs": {
                            "browseEndpointContextMusicConfig": {
                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                            }
                          }
                        }
                      },
                      "trackingParams": "CBwQkPsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CBsQkfsFGAYiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtiMjBTVjd2MGZ6RQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CBsQkfsFGAYiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CBoQpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "b20SV7v0fzE"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CAsQ02gYEyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/F_ldlQWFMvM/hqdefault.jpg?sqp=-oaymwEWCMACELQBIAQqCghQEJADGFogjgJIWg&rs=AMzJL3nUxgCPgI-dNQwRCkVurW_juaqF5g",
                      "width": 320,
                      "height": 180
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CBgQhL8CIhMI4oHNjorC_QIVB9QRCB0s3wfG"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CBcQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                      "watchEndpoint": {
                        "videoId": "F_ldlQWFMvM",
                        "watchEndpointMusicSupportedConfigs": {
                          "watchEndpointMusicConfig": {
                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                          }
                        }
                      }
                    },
                    "trackingParams": "CBcQyN4CIhMI4oHNjorC_QIVB9QRCB0s3wfG",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Wild Nothing - Gemini - Drifter - TheSerialHunter"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Wild Nothing - Gemini - Drifter - TheSerialHunter"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Wild Nothing - Gemini - Drifter",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CAsQ02gYEyITCOKBzY6Kwv0CFQfUEQgdLN8HxpoBAxD0JA==",
                          "watchEndpoint": {
                            "videoId": "F_ldlQWFMvM",
                            "watchEndpointMusicSupportedConfigs": {
                              "watchEndpointMusicConfig": {
                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "TheSerialHunter",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CAsQ02gYEyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                          "browseEndpoint": {
                            "browseId": "UCWF5kQ134q-CN-t580--ieQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "128K views"
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "3:34"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CBYQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8aaAQMQ9CQ=",
                        "watchEndpoint": {
                          "videoId": "F_ldlQWFMvM",
                          "playlistId": "RDAMVMF_ldlQWFMvM",
                          "params": "wAEB",
                          "loggingContext": {
                            "vssLoggingContext": {
                              "serializedContextData": "GhFSREFNVk1GX2xkbFFXRk12TQ%3D%3D"
                            }
                          },
                          "watchEndpointMusicSupportedConfigs": {
                            "watchEndpointMusicConfig": {
                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                            }
                          }
                        }
                      },
                      "trackingParams": "CBYQm_MFGAAiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CBQQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "F_ldlQWFMvM"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CBQQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CBUQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CBQQvu4FGAEiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CBIQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "videoId": "F_ldlQWFMvM"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CBIQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Song added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CBMQyscDIhMI4oHNjorC_QIVB9QRCB0s3wfG"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CBIQ--8FGAIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add to liked songs"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "FAVORITE"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CBAQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Like this song"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Improve recommendations and save music after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CBEQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CBEQ8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove from liked songs"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "UNFAVORITE"
                      },
                      "trackingParams": "CBAQjJ8GGAMiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CA4Qw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CA8Q8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CA8Q8FsiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CA4Qw5QGGAQiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CA0QkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "CgtGX2xkbFFXRk12TQ%3D%3D",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CA0QkfsFGAUiEwjigc2OisL9AhUH1BEIHSzfB8Y="
                    }
                  }
                ],
                "trackingParams": "CAwQpzsiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "playlistItemData": {
              "videoId": "F_ldlQWFMvM"
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        }
      ],
      "trackingParams": "CAkQ-V4iEwjigc2OisL9AhUH1BEIHSzfB8Y=",
      "continuations": [
        {
          "nextContinuationData": {
            "continuation": "EqkDEgx3aWxkIG5vdGhpbmcamANFZ1dLQVFJUUFVZ29hZ29RQ1JBREVBUVFDaEFGZ2dFTGR6WmxSMWROYkRseGVEaUNBUXRWVVRacGNuRnFkbkJ3YjRJQkMyZzVhWFEwZWxSNmFHeFZnZ0VMVDFwb2VFTTFXRTFoZEZtQ0FRdEZabmRNU0RSZlVEWmhaNElCQzNZMWRIaFlaelJ1Ums1VmdnRUxjWFIxYW14cVdXdElaRkdDQVF0alVEaDNabk5zY2pkb1dZSUJDelpJU0MxSVJWTldaa05OZ2dFTGRUQlhWRFZDVVhWWlZYT0NBUXRLTFhrdFFqZEtiekl4V1lJQkMybzJaMGhzUVZWRlN6bHJnZ0VMVFVSNlRWRnpObkZmZFZtQ0FRdG1hV2hET0ZkZkxWOTJiNElCQzFKV1pXb3pYMVp4T0VocmdnRUxiR2RrYm5vMFpsOXhOVy1DQVF0RWMyRklNbXRIYmxsMlk0SUJDMWxhUVZNeUxWVXpSbkZ6Z2dFTFlqSXdVMVkzZGpCbWVrV0NBUXRHWDJ4a2JGRlhSazEyVFElM0QlM0QY8erQLg%3D%3D",
            "clickTrackingParams": "CAoQybcCIhMI4oHNjorC_QIVB9QRCB0s3wfG"
          }
        }
      ],
      "shelfDivider": {
        "musicShelfDividerRenderer": {
          "hidden": true
        }
      },
      "autoReloadWhenEmpty": false
    }
  },
  "trackingParams": "CAAQvGkiEwjigc2OisL9AhUH1BEIHSzfB8Y=",
  "header": {
    "musicHeaderRenderer": {
      "header": {
        "chipCloudRenderer": {
          "chips": [
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_SECONDARY"
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAgQ_V0YACITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                  "searchEndpoint": {
                    "query": "wild nothing"
                  }
                },
                "trackingParams": "CAgQ_V0YACITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                "icon": {
                  "iconType": "CLOSE"
                },
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Clear filters"
                  }
                },
                "isSelected": false
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Albums"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAcQ_V0YASITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                  "searchEndpoint": {
                    "query": "wild nothing",
                    "params": "EgWKAQIYAWoKEAkQAxAEEAoQBQ%3D%3D"
                  }
                },
                "trackingParams": "CAcQ_V0YASITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show album results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Albums"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Songs"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAYQ_V0YAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                  "searchEndpoint": {
                    "query": "wild nothing",
                    "params": "EgWKAQIIAWoKEAkQAxAEEAoQBQ%3D%3D"
                  }
                },
                "trackingParams": "CAYQ_V0YAiITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show song results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Songs"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_PRIMARY"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Videos"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAUQ_V0YAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                  "searchEndpoint": {
                    "query": "wild nothing",
                    "params": "EgWKAQIQAWoKEAkQAxAEEAoQBQ%3D%3D"
                  }
                },
                "trackingParams": "CAUQ_V0YAyITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show video results selected"
                  }
                },
                "isSelected": true,
                "uniqueId": "Videos"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Community playlists"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAQQ_V0YBCITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                  "searchEndpoint": {
                    "query": "wild nothing",
                    "params": "EgeKAQQoAEABagoQCRADEAQQChAF"
                  }
                },
                "trackingParams": "CAQQ_V0YBCITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show community playlist results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Community playlists"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Artists"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAMQ_V0YBSITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                  "searchEndpoint": {
                    "query": "wild nothing",
                    "params": "EgWKAQIgAWoKEAkQAxAEEAoQBQ%3D%3D"
                  }
                },
                "trackingParams": "CAMQ_V0YBSITCOKBzY6Kwv0CFQfUEQgdLN8Hxg==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show artist results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Artists"
              }
            }
          ],
          "collapsedRowCount": 1,
          "trackingParams": "CAIQ_F0iEwjigc2OisL9AhUH1BEIHSzfB8Y=",
          "horizontalScrollable": true
        }
      },
      "trackingParams": "CAEQ4HIiEwjigc2OisL9AhUH1BEIHSzfB8Y="
    }
  }
}

  recorded_at: Sat, 04 Mar 2023 10:36:18 GMT
recorded_with: VCR 6.1.0

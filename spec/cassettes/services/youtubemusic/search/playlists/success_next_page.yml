---
http_interactions:
- request:
    method: post
    uri: https://music.youtube.com/youtubei/v1/search?continuation
    body:
      encoding: UTF-8
      string: '{"context":{"client":{"clientName":"WEB_REMIX","clientVersion":"1.20230227.01.00","gl":"GB"}},"query":"80s"}'
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.2.0p0
      Content-Type:
      - application/json
      Content-Length:
      - '108'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - music.youtube.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Fri, 07 Apr 2023 11:27:24 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "responseContext": {
    "visitorData": "CgtfRndRYVJPWjF0byic_L-hBg%3D%3D",
    "serviceTrackingParams": [
      {
        "service": "CSI",
        "params": [
          {
            "key": "c",
            "value": "WEB_REMIX"
          },
          {
            "key": "cver",
            "value": "1.20230227.01.00"
          },
          {
            "key": "yt_li",
            "value": "0"
          },
          {
            "key": "GetSearch_rid",
            "value": "0x82e789ccc144823a"
          }
        ]
      },
      {
        "service": "GFEEDBACK",
        "params": [
          {
            "key": "logged_in",
            "value": "0"
          },
          {
            "key": "e",
            "value": "1714252,23804281,23918597,23946420,23966208,23983296,23998056,24004644,24007246,24034168,24036947,24077241,24080738,24120819,24135310,24140247,24162919,24169501,24181174,24187043,24187377,24197450,24211178,24219713,24235780,24241378,24255163,24255543,24255545,24262346,24263796,24268142,24288043,24288664,24290971,24390675,24391541,24391690,24396565,24403793,24404640,24405914,24407191,24409417,24415864,24415866,24416290,24426636,24427229,24428902,24429095,24439361,24439483,24440518,24445499,24450367,24451319,24451438,24453129,24455284,24456681,24458317,24458324,24458329,24458839,24463362,24465011,24465101,24466371,24466460,24468615,24468691,24468724,24469241,24470676,24471752,24474986,24477227,24477512,24481175,24482081,24483010,24483504,24483899,24484079,24485239,24485421,24486580,24487287,24487523,24488187,24488210,24490508,24491070,24494081,24494198,24494984,24494993,24495060,24495907,24495956,24495969,24496318,24496739,24496968,24499115,24499293,24499304,24499568,24499577,24499792,24512414,24513409,24515366,24516016,24516157,24518245,24518452,24519102,24519142,24519223,24519256,24530194,24530296,24530334,24530441,24530948,24531085,24534541,39323074"
          }
        ]
      },
      {
        "service": "ECATCHER",
        "params": [
          {
            "key": "client.version",
            "value": "1.20000101"
          },
          {
            "key": "client.name",
            "value": "WEB_REMIX"
          },
          {
            "key": "client.fexp",
            "value": "24262346,24518245,24426636,24197450,24468691,24494984,23804281,24451319,24518452,24405914,1714252,24465011,24263796,24519256,24415866,24488210,24499293,24135310,24219713,24162919,24396565,23946420,24485239,24496968,23918597,24077241,24255543,24496318,24519102,24455284,24004644,24530441,23998056,24007246,24483504,24499577,24530296,24255545,24470676,24428902,24494081,24486580,24120819,24495907,24468615,24390675,24485421,24458329,24466371,24495956,24530194,24513409,24496739,24080738,24453129,24468724,24440518,24458839,24391690,24429095,24481175,24482081,24463362,24255163,24484079,24036947,24495060,24187377,24409417,24494993,24519223,24512414,24268142,24169501,24187043,24531085,24530948,24519142,24290971,24495969,24474986,24288664,24181174,24516157,24439483,24491070,24034168,24211178,24445499,24488187,24499568,24404640,24471752,24469241,24415864,24499115,24490508,24534541,24465101,24466460,24530334,24458324,24458317,24487523,24288043,24483899,24235780,24477227,24140247,24427229,23983296,24515366,24416290,23966208,24456681,39323074,24494198,24499792,24439361,24483010,24407191,24391541,24451438,24450367,24403793,24477512,24241378,24487287,24516016,24499304"
          }
        ]
      }
    ],
    "maxAgeSeconds": 120
  },
  "contents": {
    "tabbedSearchResultsRenderer": {
      "tabs": [
        {
          "tabRenderer": {
            "title": "yt music",
            "selected": true,
            "content": {
              "sectionListRenderer": {
                "contents": [
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Featured playlists"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CPQBENWfBxgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/ldh198x_Vohj8Tb1-fMc7E0VnICTzXgfJEBhlBc3h_xXlg8JIgjCtTqCirHUAK7pBTwPBhIc6sUETgA=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/ldh198x_Vohj8Tb1-fMc7E0VnICTzXgfJEBhlBc3h_xXlg8JIgjCtTqCirHUAK7pBTwPBhIc6sUETgA=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/ldh198x_Vohj8Tb1-fMc7E0VnICTzXgfJEBhlBc3h_xXlg8JIgjCtTqCirHUAK7pBTwPBhIc6sUETgA=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/ldh198x_Vohj8Tb1-fMc7E0VnICTzXgfJEBhlBc3h_xXlg8JIgjCtTqCirHUAK7pBTwPBhIc6sUETgA=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CIICEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CIECEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "RDCLAK5uy_mWwefjEmOc-aIL0y5ce5hrur6-HPEHRsM",
                                        "params": "wAEB"
                                      }
                                    },
                                    "trackingParams": "CIECEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play 80s French Pop"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause 80s French Pop"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "80s French Pop"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "YouTube Music"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "90 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIACEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDCLAK5uy_mWwefjEmOc-aIL0y5ce5hrur6-HPEHRsM",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "CIACEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CP8BEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLRDCLAK5uy_mWwefjEmOc-aIL0y5ce5hrur6-HPEHRsM",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CP8BEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CP0BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "RDCLAK5uy_mWwefjEmOc-aIL0y5ce5hrur6-HPEHRsM"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CP0BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CP4BEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CP0BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CPsBEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "RDCLAK5uy_mWwefjEmOc-aIL0y5ce5hrur6-HPEHRsM"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CPsBEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CPwBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CPsBEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CPkBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CPoBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CPoBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CPkBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "RDCLAK5uy_mWwefjEmOc-aIL0y5ce5hrur6-HPEHRsM"
                                          }
                                        }
                                      },
                                      "trackingParams": "CPkBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CPcBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CPgBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CPgBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CPcBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CPYBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EitSRENMQUs1dXlfbVd3ZWZqRW1PYy1hSUwweTVjZTVocnVyNi1IUEVIUnNN",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CPYBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  }
                                ],
                                "trackingParams": "CPUBEKc7IhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CPQBENWfBxgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                              "browseEndpoint": {
                                "browseId": "VLRDCLAK5uy_mWwefjEmOc-aIL0y5ce5hrur6-HPEHRsM",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "COUBENWfBxgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/NFejnqmjsDm4Ox8aQjIs_JkXzQ5etdQXbzh0WFf7sxYxWEB8sartnp8trlZvbOFTXWcyOuwL9Ak9Z38=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/NFejnqmjsDm4Ox8aQjIs_JkXzQ5etdQXbzh0WFf7sxYxWEB8sartnp8trlZvbOFTXWcyOuwL9Ak9Z38=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/NFejnqmjsDm4Ox8aQjIs_JkXzQ5etdQXbzh0WFf7sxYxWEB8sartnp8trlZvbOFTXWcyOuwL9Ak9Z38=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/NFejnqmjsDm4Ox8aQjIs_JkXzQ5etdQXbzh0WFf7sxYxWEB8sartnp8trlZvbOFTXWcyOuwL9Ak9Z38=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CPMBEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CPIBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "RDCLAK5uy_kcMSKZlz7xvLj5CFdzxceBJRnf14zWSa4",
                                        "params": "wAEB"
                                      }
                                    },
                                    "trackingParams": "CPIBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Pop Indonesia '80-an"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Pop Indonesia '80-an"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Pop Indonesia '80-an"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "YouTube Music"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "100 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CPEBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDCLAK5uy_kcMSKZlz7xvLj5CFdzxceBJRnf14zWSa4",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "CPEBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CPABEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLRDCLAK5uy_kcMSKZlz7xvLj5CFdzxceBJRnf14zWSa4",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CPABEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CO4BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "RDCLAK5uy_kcMSKZlz7xvLj5CFdzxceBJRnf14zWSa4"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CO4BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CO8BEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CO4BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "COwBEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "RDCLAK5uy_kcMSKZlz7xvLj5CFdzxceBJRnf14zWSa4"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "COwBEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CO0BEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "COwBEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "COoBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "COsBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "COsBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "COoBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "RDCLAK5uy_kcMSKZlz7xvLj5CFdzxceBJRnf14zWSa4"
                                          }
                                        }
                                      },
                                      "trackingParams": "COoBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "COgBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "COkBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "COkBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "COgBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "COcBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EitSRENMQUs1dXlfa2NNU0tabHo3eHZMajVDRmR6eGNlQkpSbmYxNHpXU2E0",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "COcBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  }
                                ],
                                "trackingParams": "COYBEKc7IhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "COUBENWfBxgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                              "browseEndpoint": {
                                "browseId": "VLRDCLAK5uy_kcMSKZlz7xvLj5CFdzxceBJRnf14zWSa4",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CNYBENWfBxgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/twtZoAVWxJUgUk62bPEPDuxqXPEkReKeIc_31xi2jNRagPLYzBG356LUbBMB_xHJfbWWphbLWaIcsRA=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/twtZoAVWxJUgUk62bPEPDuxqXPEkReKeIc_31xi2jNRagPLYzBG356LUbBMB_xHJfbWWphbLWaIcsRA=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/twtZoAVWxJUgUk62bPEPDuxqXPEkReKeIc_31xi2jNRagPLYzBG356LUbBMB_xHJfbWWphbLWaIcsRA=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/twtZoAVWxJUgUk62bPEPDuxqXPEkReKeIc_31xi2jNRagPLYzBG356LUbBMB_xHJfbWWphbLWaIcsRA=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "COQBEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "COMBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "RDCLAK5uy_k2M7Bug3ZvV6NgY8QLsSNPD5I-AQz7wMo",
                                        "params": "wAEB"
                                      }
                                    },
                                    "trackingParams": "COMBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play '80s Bollywood"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause '80s Bollywood"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "'80s Bollywood"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "YouTube Music"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "100 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "COIBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDCLAK5uy_k2M7Bug3ZvV6NgY8QLsSNPD5I-AQz7wMo",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "COIBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "COEBEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLRDCLAK5uy_k2M7Bug3ZvV6NgY8QLsSNPD5I-AQz7wMo",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "COEBEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CN8BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "RDCLAK5uy_k2M7Bug3ZvV6NgY8QLsSNPD5I-AQz7wMo"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CN8BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "COABEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CN8BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CN0BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "RDCLAK5uy_k2M7Bug3ZvV6NgY8QLsSNPD5I-AQz7wMo"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CN0BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CN4BEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CN0BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CNsBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CNwBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CNwBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CNsBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "RDCLAK5uy_k2M7Bug3ZvV6NgY8QLsSNPD5I-AQz7wMo"
                                          }
                                        }
                                      },
                                      "trackingParams": "CNsBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNkBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CNoBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CNoBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CNkBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNgBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EitSRENMQUs1dXlfazJNN0J1ZzNadlY2TmdZOFFMc1NOUEQ1SS1BUXo3d01v",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CNgBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  }
                                ],
                                "trackingParams": "CNcBEKc7IhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CNYBENWfBxgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                              "browseEndpoint": {
                                "browseId": "VLRDCLAK5uy_k2M7Bug3ZvV6NgY8QLsSNPD5I-AQz7wMo",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CNUBEPleGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CNUBEPleGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                        "searchEndpoint": {
                          "query": "80s",
                          "params": "EgeKAQQoADgBagwQDhAKEAMQBBAJEAU%3D"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Community playlists"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CMYBENafBxgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://yt3.googleusercontent.com/PuhF0SdjMDIk5uc25Crw2idXuNhRGe0_mvZxprDJn2Rwy3XuZN4d8ZSWwhEB5NsqWuocfJ4OxtUh=s192",
                                      "width": 192,
                                      "height": 192
                                    },
                                    {
                                      "url": "https://yt3.googleusercontent.com/PuhF0SdjMDIk5uc25Crw2idXuNhRGe0_mvZxprDJn2Rwy3XuZN4d8ZSWwhEB5NsqWuocfJ4OxtUh=s576",
                                      "width": 576,
                                      "height": 576
                                    },
                                    {
                                      "url": "https://yt3.googleusercontent.com/PuhF0SdjMDIk5uc25Crw2idXuNhRGe0_mvZxprDJn2Rwy3XuZN4d8ZSWwhEB5NsqWuocfJ4OxtUh=s1200",
                                      "width": 1200,
                                      "height": 1200
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CNQBEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CNMBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "PLmXxqSJJq-yXrCPGIT2gn8b34JjOrl4Xf",
                                        "params": "wAEB8gECKAE%3D"
                                      }
                                    },
                                    "trackingParams": "CNMBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play 80s Music Hits | Best 80s Music Playlist"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause 80s Music Hits | Best 80s Music Playlist"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "80s Music Hits | Best 80s Music Playlist"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "RHINO",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CMYBENafBxgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                          "browseEndpoint": {
                                            "browseId": "UCWEtnEiVwUy7mwFeshyAWLA",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "183 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNIBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "PLmXxqSJJq-yXrCPGIT2gn8b34JjOrl4Xf",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CNIBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CNEBEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLPLmXxqSJJq-yXrCPGIT2gn8b34JjOrl4Xf",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CNEBEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CM8BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLmXxqSJJq-yXrCPGIT2gn8b34JjOrl4Xf"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CM8BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CNABEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CM8BEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CM0BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLmXxqSJJq-yXrCPGIT2gn8b34JjOrl4Xf"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CM0BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CM4BEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CM0BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CMsBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CMwBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CMwBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CMsBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "PLmXxqSJJq-yXrCPGIT2gn8b34JjOrl4Xf"
                                          }
                                        }
                                      },
                                      "trackingParams": "CMsBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMkBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CMoBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CMoBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CMkBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMgBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EiJQTG1YeHFTSkpxLXlYckNQR0lUMmduOGIzNEpqT3JsNFhm",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CMgBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  }
                                ],
                                "trackingParams": "CMcBEKc7IhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CMYBENafBxgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                              "browseEndpoint": {
                                "browseId": "VLPLmXxqSJJq-yXrCPGIT2gn8b34JjOrl4Xf",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CLcBENafBxgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://yt3.ggpht.com/uHyQ4e_CBRxz0ZbO5WG6-_Jh0ZaueRJVMzHo8lD3arAe5ZkJBQSeCV90tJbXDka9XPXHUW40xMQ=s192",
                                      "width": 192,
                                      "height": 192
                                    },
                                    {
                                      "url": "https://yt3.ggpht.com/uHyQ4e_CBRxz0ZbO5WG6-_Jh0ZaueRJVMzHo8lD3arAe5ZkJBQSeCV90tJbXDka9XPXHUW40xMQ=s576",
                                      "width": 576,
                                      "height": 576
                                    },
                                    {
                                      "url": "https://yt3.ggpht.com/uHyQ4e_CBRxz0ZbO5WG6-_Jh0ZaueRJVMzHo8lD3arAe5ZkJBQSeCV90tJbXDka9XPXHUW40xMQ=s1200",
                                      "width": 1200,
                                      "height": 1200
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CMUBEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CMQBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "PLd9auH4JIHvupoMgW5YfOjqtj6Lih0MKw",
                                        "params": "wAEB8gECKAE%3D"
                                      }
                                    },
                                    "trackingParams": "CMQBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play \"BEST OF THE 80's\" - A Compilation of the Most Popular Music Video's Ever Played on MTV in the 80's."
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause \"BEST OF THE 80's\" - A Compilation of the Most Popular Music Video's Ever Played on MTV in the 80's."
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "\"BEST OF THE 80's\" - A Compilation of the Most Popular Music Video's Ever Played on MTV in the 80's."
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Robert Rainey Bearclawws",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CLcBENafBxgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                          "browseEndpoint": {
                                            "browseId": "UCrWV62o6s6dvqPhbDBV974g",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "501 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMMBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "PLd9auH4JIHvupoMgW5YfOjqtj6Lih0MKw",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CMMBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CMIBEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLPLd9auH4JIHvupoMgW5YfOjqtj6Lih0MKw",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CMIBEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CMABEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLd9auH4JIHvupoMgW5YfOjqtj6Lih0MKw"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CMABEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CMEBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CMABEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CL4BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLd9auH4JIHvupoMgW5YfOjqtj6Lih0MKw"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CL4BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CL8BEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CL4BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CLwBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CL0BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CL0BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CLwBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "PLd9auH4JIHvupoMgW5YfOjqtj6Lih0MKw"
                                          }
                                        }
                                      },
                                      "trackingParams": "CLwBEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLoBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CLsBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CLsBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CLoBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLkBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EiJQTGQ5YXVINEpJSHZ1cG9NZ1c1WWZPanF0ajZMaWgwTUt3",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CLkBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  }
                                ],
                                "trackingParams": "CLgBEKc7IhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CLcBENafBxgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                              "browseEndpoint": {
                                "browseId": "VLPLd9auH4JIHvupoMgW5YfOjqtj6Lih0MKw",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CKgBENafBxgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://yt3.googleusercontent.com/cMG5g4BmjmIUYdGarD884f5dYEnGnJAW9SOdPH2vnzKZ7rvlvBxOIEe2K9ByRpIb9N1vzknOOA=s192",
                                      "width": 192,
                                      "height": 192
                                    },
                                    {
                                      "url": "https://yt3.googleusercontent.com/cMG5g4BmjmIUYdGarD884f5dYEnGnJAW9SOdPH2vnzKZ7rvlvBxOIEe2K9ByRpIb9N1vzknOOA=s576",
                                      "width": 576,
                                      "height": 576
                                    },
                                    {
                                      "url": "https://yt3.googleusercontent.com/cMG5g4BmjmIUYdGarD884f5dYEnGnJAW9SOdPH2vnzKZ7rvlvBxOIEe2K9ByRpIb9N1vzknOOA=s1200",
                                      "width": 1200,
                                      "height": 1200
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CLYBEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CLUBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "PLCD0445C57F2B7F41",
                                        "params": "wAEB8gECKAE%3D"
                                      }
                                    },
                                    "trackingParams": "CLUBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play 80s Music Hits - 80s Playlist Greatest Hits (Best 80s Songs)"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause 80s Music Hits - 80s Playlist Greatest Hits (Best 80s Songs)"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "80s Music Hits - 80s Playlist Greatest Hits (Best 80s Songs)"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Playlist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Redlist Decades",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CKgBENafBxgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                          "browseEndpoint": {
                                            "browseId": "UCwtKO1Vwz-7g0nBxBQcU4bg",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "150 songs"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLQBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "PLCD0445C57F2B7F41",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CLQBEJrzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CLMBEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLPLCD0445C57F2B7F41",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CLMBEJvzBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CLEBEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLCD0445C57F2B7F41"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CLEBEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CLIBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CLEBEL7uBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CK8BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "PLCD0445C57F2B7F41"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CK8BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Playlist added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CLABEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CK8BEPvvBRgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add playlist to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CK0BEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CK4BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CK4BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove playlist from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CK0BEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "PLCD0445C57F2B7F41"
                                          }
                                        }
                                      },
                                      "trackingParams": "CK0BEIT_BRgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CKsBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CKwBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CKwBEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CKsBEMOUBhgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CKoBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EhJQTENEMDQ0NUM1N0YyQjdGNDE%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CKoBEJH7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  }
                                ],
                                "trackingParams": "CKkBEKc7IhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CKgBENafBxgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                              "browseEndpoint": {
                                "browseId": "VLPLCD0445C57F2B7F41",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CKcBEPleGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CKcBEPleGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                        "searchEndpoint": {
                          "query": "80s",
                          "params": "EgeKAQQoAEABagwQDhAKEAMQBBAJEAU%3D"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Songs"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CJcBEOFnGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/SIsfw6vFT3bU5MrHtSHkyrC3Ci8baZ2LMGaJKWePFcNEQrx5KI9a3tpXXfXxw5kFUSSl-pj2_EGJ2fQ=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/SIsfw6vFT3bU5MrHtSHkyrC3Ci8baZ2LMGaJKWePFcNEQrx5KI9a3tpXXfXxw5kFUSSl-pj2_EGJ2fQ=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CKYBEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CKUBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchEndpoint": {
                                        "videoId": "dS4nSwjniUo",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CKUBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Mix Rock De Los 80s - Dj Furioso"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Mix Rock De Los 80s - Dj Furioso"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Mix Rock De Los 80s",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CJcBEOFnGAAiEwiEqKj51Jf-AhV38REIHVliDnKaAQMQ9CQ=",
                                          "watchEndpoint": {
                                            "videoId": "dS4nSwjniUo",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Song"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Dj Furioso",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CJcBEOFnGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                          "browseEndpoint": {
                                            "browseId": "UCcWJqAjqilnpqem2V4O0aLw",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Mix Rock De Los 80s",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CJcBEOFnGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                          "browseEndpoint": {
                                            "browseId": "MPREb_7QFw0OPj8I3",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "24:35"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CKQBEJvzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5ymgEDEPQk",
                                        "watchEndpoint": {
                                          "videoId": "dS4nSwjniUo",
                                          "playlistId": "RDAMVMdS4nSwjniUo",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1kUzRuU3dqbmlVbw%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CKQBEJvzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CKIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "dS4nSwjniUo"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CKIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CKMBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CKIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CKABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "dS4nSwjniUo"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CKABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CKEBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CKABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CJ4BEIyfBhgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CJ8BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CJ8BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CJ4BEIyfBhgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJwBEMOUBhgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CJ0BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CJ0BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CJwBEMOUBhgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to album"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ALBUM"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJsBEI_7BRgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "browseEndpoint": {
                                          "browseId": "MPREb_7QFw0OPj8I3",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CJsBEI_7BRgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJoBEJD7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "browseEndpoint": {
                                          "browseId": "UCcWJqAjqilnpqem2V4O0aLw",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CJoBEJD7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJkBEJH7BRgHIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtkUzRuU3dqbmlVbw%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CJkBEJH7BRgHIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  }
                                ],
                                "trackingParams": "CJgBEKc7IhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "dS4nSwjniUo"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CIcBEOFnGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/VpZeNqI-Dy6d8UJJvDJpC_THVXsp6ZDIyxdPCYY7p3rRLCZorQcll93sQ62lBlP5AMJE0rW90srqztXT_g=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/VpZeNqI-Dy6d8UJJvDJpC_THVXsp6ZDIyxdPCYY7p3rRLCZorQcll93sQ62lBlP5AMJE0rW90srqztXT_g=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CJYBEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CJUBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchEndpoint": {
                                        "videoId": "J20DCaXWnZ4",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CJUBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play The 80's Continuous Workout Mix - DJ Pump Up The Jam!"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause The 80's Continuous Workout Mix - DJ Pump Up The Jam!"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "The 80's Continuous Workout Mix",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CIcBEOFnGAEiEwiEqKj51Jf-AhV38REIHVliDnKaAQMQ9CQ=",
                                          "watchEndpoint": {
                                            "videoId": "J20DCaXWnZ4",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Song"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "DJ Pump Up The Jam!",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CIcBEOFnGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                          "browseEndpoint": {
                                            "browseId": "UC_46kZfsk3hAf0CJWHT4Bcg",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "80s Fitness Workout - The Eighties Way to Workout & Keep Fit !",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CIcBEOFnGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                          "browseEndpoint": {
                                            "browseId": "MPREb_s9OOFh5OtvB",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "49:34"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CJQBEJvzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5ymgEDEPQk",
                                        "watchEndpoint": {
                                          "videoId": "J20DCaXWnZ4",
                                          "playlistId": "RDAMVMJ20DCaXWnZ4",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1KMjBEQ2FYV25aNA%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CJQBEJvzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CJIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "J20DCaXWnZ4"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CJIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CJMBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CJIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CJABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "J20DCaXWnZ4"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CJABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CJEBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CJABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CI4BEIyfBhgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CI8BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CI8BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CI4BEIyfBhgDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIwBEMOUBhgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CI0BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CI0BEPBbIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CIwBEMOUBhgEIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to album"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ALBUM"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIsBEI_7BRgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "browseEndpoint": {
                                          "browseId": "MPREb_s9OOFh5OtvB",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CIsBEI_7BRgFIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIoBEJD7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "browseEndpoint": {
                                          "browseId": "UC_46kZfsk3hAf0CJWHT4Bcg",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CIoBEJD7BRgGIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIkBEJH7BRgHIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtKMjBEQ2FYV25aNA%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CIkBEJH7BRgHIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  }
                                ],
                                "trackingParams": "CIgBEKc7IhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "J20DCaXWnZ4"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CHcQ4WcYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/4fOqoyxwy6eHx29id7_e3Hgcj9gxjFn5qRsd9PtLt11UeWivUVahDDqHk1jmIjGwjE1X4zkpDSNH8ciE=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/4fOqoyxwy6eHx29id7_e3Hgcj9gxjFn5qRsd9PtLt11UeWivUVahDDqHk1jmIjGwjE1X4zkpDSNH8ciE=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CIYBEIS_AiITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CIUBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                      "watchEndpoint": {
                                        "videoId": "KxsK50HJKf8",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CIUBEMjeAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play 80's In My Mercedes - Secret Panda Society"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause 80's In My Mercedes - Secret Panda Society"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "80's In My Mercedes",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CHcQ4WcYAiITCISoqPnUl_4CFXfxEQgdWWIOcpoBAxD0JA==",
                                          "watchEndpoint": {
                                            "videoId": "KxsK50HJKf8",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Song"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Secret Panda Society",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CHcQ4WcYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                          "browseEndpoint": {
                                            "browseId": "UCqLCzJFGn76kOXQpIwA5x9w",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Crop Top",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CHcQ4WcYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                          "browseEndpoint": {
                                            "browseId": "MPREb_f38tFYdlcMx",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "5:21"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CIQBEJvzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5ymgEDEPQk",
                                        "watchEndpoint": {
                                          "videoId": "KxsK50HJKf8",
                                          "playlistId": "RDAMVMKxsK50HJKf8",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1LeHNLNTBISktmOA%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_ATV"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CIQBEJvzBRgAIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CIIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "KxsK50HJKf8"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CIIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CIMBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CIIBEL7uBRgBIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CIABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "KxsK50HJKf8"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CIABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CIEBEMrHAyITCISoqPnUl_4CFXfxEQgdWWIOcg=="
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CIABEPvvBRgCIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CH4QjJ8GGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CH8Q8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CH8Q8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CH4QjJ8GGAMiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHwQw5QGGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CH0Q8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CH0Q8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CHwQw5QGGAQiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to album"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ALBUM"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHsQj_sFGAUiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "browseEndpoint": {
                                          "browseId": "MPREb_f38tFYdlcMx",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CHsQj_sFGAUiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHoQkPsFGAYiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "browseEndpoint": {
                                          "browseId": "UCqLCzJFGn76kOXQpIwA5x9w",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CHoQkPsFGAYiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHkQkfsFGAciEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtLeHNLNTBISktmOA%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CHkQkfsFGAciEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CHgQpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "KxsK50HJKf8"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CHYQ-V4YAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CHYQ-V4YAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                        "searchEndpoint": {
                          "query": "80s",
                          "params": "EgWKAQIIAWoMEA4QChADEAQQCRAF"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Videos"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CGgQ02gYACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://i.ytimg.com/vi/7ezCt0xrrGU/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3nNk4l-Mr2XrRs_9zNrnndvLNB2NA",
                                      "width": 400,
                                      "height": 225
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CHUQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CHQQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                      "watchEndpoint": {
                                        "videoId": "7ezCt0xrrGU",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CHQQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play 80s Greatest Hits - Best Oldies Songs Of 1980s - Oldies But Goodies - Music Memory"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause 80s Greatest Hits - Best Oldies Songs Of 1980s - Oldies But Goodies - Music Memory"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "80s Greatest Hits - Best Oldies Songs Of 1980s - Oldies But Goodies",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CGgQ02gYACITCISoqPnUl_4CFXfxEQgdWWIOcpoBAxD0JA==",
                                          "watchEndpoint": {
                                            "videoId": "7ezCt0xrrGU",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Video"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Music Memory",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CGgQ02gYACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                          "browseEndpoint": {
                                            "browseId": "UCDNN-5oJNpFi_s8vTPvf2Tw",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "23M views"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "1:42:13"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CHMQm_MFGAAiEwiEqKj51Jf-AhV38REIHVliDnKaAQMQ9CQ=",
                                        "watchEndpoint": {
                                          "videoId": "7ezCt0xrrGU",
                                          "playlistId": "RDAMVM7ezCt0xrrGU",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk03ZXpDdDB4cnJHVQ%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CHMQm_MFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CHEQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "7ezCt0xrrGU"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CHEQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CHIQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CHEQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CG8Q--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "7ezCt0xrrGU"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CG8Q--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CHAQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CG8Q--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CG0QjJ8GGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CG4Q8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CG4Q8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CG0QjJ8GGAMiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CGsQw5QGGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CGwQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CGwQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CGsQw5QGGAQiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CGoQkfsFGAUiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "Cgs3ZXpDdDB4cnJHVQ%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CGoQkfsFGAUiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CGkQpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "7ezCt0xrrGU"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CFoQ02gYASITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://i.ytimg.com/vi/p5pHyjJB5DU/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3nGSF2WfCuJPrVFLUA2k5RnBxThTg",
                                      "width": 400,
                                      "height": 225
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CGcQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CGYQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                      "watchEndpoint": {
                                        "videoId": "p5pHyjJB5DU",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CGYQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play 80's Best Euro-Disco, Synth-Pop & Dance Hits Vol.1 (Serega Bolonkin Video Mix)│Танцевальные Хиты 80х - Serega Bolonkin"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause 80's Best Euro-Disco, Synth-Pop & Dance Hits Vol.1 (Serega Bolonkin Video Mix)│Танцевальные Хиты 80х - Serega Bolonkin"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "80's Best Euro-Disco, Synth-Pop & Dance Hits Vol.1 (Serega Bolonkin Video Mix)│Танцевальные Хиты 80х",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CFoQ02gYASITCISoqPnUl_4CFXfxEQgdWWIOcpoBAxD0JA==",
                                          "watchEndpoint": {
                                            "videoId": "p5pHyjJB5DU",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Video"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Serega Bolonkin",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CFoQ02gYASITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                          "browseEndpoint": {
                                            "browseId": "UCdd7ZguXMabw06ZAzGVxvPQ",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "70M views"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "51:30"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CGUQm_MFGAAiEwiEqKj51Jf-AhV38REIHVliDnKaAQMQ9CQ=",
                                        "watchEndpoint": {
                                          "videoId": "p5pHyjJB5DU",
                                          "playlistId": "RDAMVMp5pHyjJB5DU",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1wNXBIeWpKQjVEVQ%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CGUQm_MFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CGMQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "p5pHyjJB5DU"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CGMQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CGQQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CGMQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CGEQ--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "p5pHyjJB5DU"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CGEQ--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CGIQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CGEQ--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CF8QjJ8GGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CGAQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CGAQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CF8QjJ8GGAMiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CF0Qw5QGGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CF4Q8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CF4Q8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CF0Qw5QGGAQiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CFwQkfsFGAUiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtwNXBIeWpKQjVEVQ%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CFwQkfsFGAUiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CFsQpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "p5pHyjJB5DU"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CEwQ02gYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://i.ytimg.com/vi/KtYTgqrXImw/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3kC4AHkMhXOMcd7a0q1bpNDGGIrHQ",
                                      "width": 400,
                                      "height": 225
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CFkQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CFgQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                      "watchEndpoint": {
                                        "videoId": "KtYTgqrXImw",
                                        "watchEndpointMusicSupportedConfigs": {
                                          "watchEndpointMusicConfig": {
                                            "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                          }
                                        }
                                      }
                                    },
                                    "trackingParams": "CFgQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Nonstop 80s Greatest Hits Best Oldies Songs Of 1980s Greatest 80s Music Hits - Music Memory"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Nonstop 80s Greatest Hits Best Oldies Songs Of 1980s Greatest 80s Music Hits - Music Memory"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Nonstop 80s Greatest Hits Best Oldies Songs Of 1980s Greatest 80s Music Hits",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CEwQ02gYAiITCISoqPnUl_4CFXfxEQgdWWIOcpoBAxD0JA==",
                                          "watchEndpoint": {
                                            "videoId": "KtYTgqrXImw",
                                            "watchEndpointMusicSupportedConfigs": {
                                              "watchEndpointMusicConfig": {
                                                "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Video"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Music Memory",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CEwQ02gYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                          "browseEndpoint": {
                                            "browseId": "UCDNN-5oJNpFi_s8vTPvf2Tw",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "3.4M views"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "2:13:33"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CFcQm_MFGAAiEwiEqKj51Jf-AhV38REIHVliDnKaAQMQ9CQ=",
                                        "watchEndpoint": {
                                          "videoId": "KtYTgqrXImw",
                                          "playlistId": "RDAMVMKtYTgqrXImw",
                                          "params": "wAEB",
                                          "loggingContext": {
                                            "vssLoggingContext": {
                                              "serializedContextData": "GhFSREFNVk1LdFlUZ3FyWEltdw%3D%3D"
                                            }
                                          },
                                          "watchEndpointMusicSupportedConfigs": {
                                            "watchEndpointMusicConfig": {
                                              "musicVideoType": "MUSIC_VIDEO_TYPE_UGC"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CFcQm_MFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CFUQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "KtYTgqrXImw"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CFUQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CFYQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CFUQvu4FGAEiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CFMQ--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "videoId": "KtYTgqrXImw"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CFMQ--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Song added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CFQQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CFMQ--8FGAIiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add to liked songs"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "FAVORITE"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CFEQjJ8GGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Like this song"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Improve recommendations and save music after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CFIQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CFIQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove from liked songs"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "UNFAVORITE"
                                      },
                                      "trackingParams": "CFEQjJ8GGAMiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CE8Qw5QGGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CFAQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CFAQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CE8Qw5QGGAQiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CE4QkfsFGAUiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "CgtLdFlUZ3FyWEltdw%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CE4QkfsFGAUiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CE0QpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "playlistItemData": {
                              "videoId": "KtYTgqrXImw"
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CEsQ-V4YAyITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CEsQ-V4YAyITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                        "searchEndpoint": {
                          "query": "80s",
                          "params": "EgWKAQIQAWoMEA4QChADEAQQCRAF"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Albums"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CDsQ1GgYACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/IYwr3QmgdUXwjOp6BiwhiQOuhwy4H1EViaipec-cYtdPgqOnZnLuVh_tXDuCYfioFeV8zGmz6shmy2fU=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/IYwr3QmgdUXwjOp6BiwhiQOuhwy4H1EViaipec-cYtdPgqOnZnLuVh_tXDuCYfioFeV8zGmz6shmy2fU=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/IYwr3QmgdUXwjOp6BiwhiQOuhwy4H1EViaipec-cYtdPgqOnZnLuVh_tXDuCYfioFeV8zGmz6shmy2fU=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/IYwr3QmgdUXwjOp6BiwhiQOuhwy4H1EViaipec-cYtdPgqOnZnLuVh_tXDuCYfioFeV8zGmz6shmy2fU=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CEoQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CEkQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "OLAK5uy_mPhSbvST9zHgKEc8uvfozU6zMBAT-yAbs"
                                      }
                                    },
                                    "trackingParams": "CEkQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play На дискотеке [Back to The 80's Extended]"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause На дискотеке [Back to The 80's Extended]"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "На дискотеке [Back to The 80's Extended] (feat. Margerie)"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Single"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Storm DJs",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CDsQ1GgYACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                          "browseEndpoint": {
                                            "browseId": "UCzRW1rvocRA6UmpS4cRfmYw",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "2023"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CEgQmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "OLAK5uy_mPhSbvST9zHgKEc8uvfozU6zMBAT-yAbs",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CEgQmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CEcQm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLOLAK5uy_mPhSbvST9zHgKEc8uvfozU6zMBAT-yAbs",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CEcQm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CEUQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_mPhSbvST9zHgKEc8uvfozU6zMBAT-yAbs"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CEUQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CEYQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CEUQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CEMQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_mPhSbvST9zHgKEc8uvfozU6zMBAT-yAbs"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CEMQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CEQQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CEMQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add album to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CEEQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CEIQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CEIQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove album from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CEEQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "OLAK5uy_mPhSbvST9zHgKEc8uvfozU6zMBAT-yAbs"
                                          }
                                        }
                                      },
                                      "trackingParams": "CEEQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CD8Qw5QGGAUiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CEAQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CEAQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CD8Qw5QGGAUiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CD4QkPsFGAYiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "browseEndpoint": {
                                          "browseId": "UCzRW1rvocRA6UmpS4cRfmYw",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CD4QkPsFGAYiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CD0QkfsFGAciEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EilPTEFLNXV5X21QaFNidlNUOXpIZ0tFYzh1dmZvelU2ek1CQVQteUFicw%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CD0QkfsFGAciEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CDwQpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CDsQ1GgYACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                              "browseEndpoint": {
                                "browseId": "MPREb_ZQjIVB169cz",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CCwQ1GgYASITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/0t0pWeb66Ia5i3kS8_9h3ejw7Joh6ARVxipAIDjnN76P2bdaDeNSw_Su2_le5rU6Xcp456hj5l_Ssvalfg=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/0t0pWeb66Ia5i3kS8_9h3ejw7Joh6ARVxipAIDjnN76P2bdaDeNSw_Su2_le5rU6Xcp456hj5l_Ssvalfg=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/0t0pWeb66Ia5i3kS8_9h3ejw7Joh6ARVxipAIDjnN76P2bdaDeNSw_Su2_le5rU6Xcp456hj5l_Ssvalfg=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/0t0pWeb66Ia5i3kS8_9h3ejw7Joh6ARVxipAIDjnN76P2bdaDeNSw_Su2_le5rU6Xcp456hj5l_Ssvalfg=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CDoQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CDkQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "OLAK5uy_mg448Fcvdiqz40HJaSkp0kCan5eG3p3PA"
                                      }
                                    },
                                    "trackingParams": "CDkQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Synthwave (The 80s Revival Vol. 2)"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Synthwave (The 80s Revival Vol. 2)"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Synthwave (The 80s Revival Vol. 2)"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Album"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "Various Artists"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "2023"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CDgQmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "OLAK5uy_mg448Fcvdiqz40HJaSkp0kCan5eG3p3PA",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CDgQmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CDcQm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLOLAK5uy_mg448Fcvdiqz40HJaSkp0kCan5eG3p3PA",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CDcQm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CDUQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_mg448Fcvdiqz40HJaSkp0kCan5eG3p3PA"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CDUQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CDYQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CDUQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CDMQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_mg448Fcvdiqz40HJaSkp0kCan5eG3p3PA"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CDMQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CDQQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CDMQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add album to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CDEQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CDIQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CDIQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove album from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CDEQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "OLAK5uy_mg448Fcvdiqz40HJaSkp0kCan5eG3p3PA"
                                          }
                                        }
                                      },
                                      "trackingParams": "CDEQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CC8Qw5QGGAUiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CDAQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CDAQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CC8Qw5QGGAUiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CC4QkfsFGAYiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EilPTEFLNXV5X21nNDQ4RmN2ZGlxejQwSEphU2twMGtDYW41ZUczcDNQQQ%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CC4QkfsFGAYiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CC0QpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CCwQ1GgYASITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                              "browseEndpoint": {
                                "browseId": "MPREb_y2uOd12cAyA",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CBwQ1GgYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/ewLbEY6F_8ZLITiVp4e-wTmCYIsrCii638jCYZXsDR6gPzXpnAKMiJUArXnpNwL72o2a4snOcAYaAbs=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/ewLbEY6F_8ZLITiVp4e-wTmCYIsrCii638jCYZXsDR6gPzXpnAKMiJUArXnpNwL72o2a4snOcAYaAbs=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/ewLbEY6F_8ZLITiVp4e-wTmCYIsrCii638jCYZXsDR6gPzXpnAKMiJUArXnpNwL72o2a4snOcAYaAbs=w226-h226-l90-rj",
                                      "width": 226,
                                      "height": 226
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/ewLbEY6F_8ZLITiVp4e-wTmCYIsrCii638jCYZXsDR6gPzXpnAKMiJUArXnpNwL72o2a4snOcAYaAbs=w544-h544-l90-rj",
                                      "width": 544,
                                      "height": 544
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                                "trackingParams": "CCsQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "overlay": {
                              "musicItemThumbnailOverlayRenderer": {
                                "background": {
                                  "verticalGradient": {
                                    "gradientLayerColors": [
                                      "3422552064",
                                      "3422552064"
                                    ]
                                  }
                                },
                                "content": {
                                  "musicPlayButtonRenderer": {
                                    "playNavigationEndpoint": {
                                      "clickTrackingParams": "CCoQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                      "watchPlaylistEndpoint": {
                                        "playlistId": "OLAK5uy_kBIZsQDBYzGOfWbJK3vrhaWbWWOfaD0yo"
                                      }
                                    },
                                    "trackingParams": "CCoQyN4CIhMIhKio-dSX_gIVd_ERCB1ZYg5y",
                                    "playIcon": {
                                      "iconType": "PLAY_ARROW"
                                    },
                                    "pauseIcon": {
                                      "iconType": "PAUSE"
                                    },
                                    "iconColor": 4294967295,
                                    "backgroundColor": 0,
                                    "activeBackgroundColor": 0,
                                    "loadingIndicatorColor": 4294901760,
                                    "playingIcon": {
                                      "iconType": "VOLUME_UP"
                                    },
                                    "iconLoadingColor": 0,
                                    "activeScaleFactor": 1,
                                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                                    "accessibilityPlayData": {
                                      "accessibilityData": {
                                        "label": "Play Fliperama Arcade in 80s"
                                      }
                                    },
                                    "accessibilityPauseData": {
                                      "accessibilityData": {
                                        "label": "Pause Fliperama Arcade in 80s"
                                      }
                                    }
                                  }
                                },
                                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Fliperama Arcade in 80s"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Single"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "One Music Everyday",
                                        "navigationEndpoint": {
                                          "clickTrackingParams": "CBwQ1GgYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                                          "browseEndpoint": {
                                            "browseId": "UCOk2T6KzdvFcXFpc2jr5y9w",
                                            "browseEndpointContextSupportedConfigs": {
                                              "browseEndpointContextMusicConfig": {
                                                "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "2023"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CCkQmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "OLAK5uy_kBIZsQDBYzGOfWbJK3vrhaWbWWOfaD0yo",
                                          "params": "wAEB8gECKAE%3D"
                                        }
                                      },
                                      "trackingParams": "CCkQmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CCgQm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAMPLOLAK5uy_kBIZsQDBYzGOfWbJK3vrhaWbWWOfaD0yo",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CCgQm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Play next"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "QUEUE_PLAY_NEXT"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CCYQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_kBIZsQDBYzGOfWbJK3vrhaWbWWOfaD0yo"
                                          },
                                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CCYQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album will play next"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CCcQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CCYQvu4FGAIiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuServiceItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to queue"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_REMOTE_QUEUE"
                                      },
                                      "serviceEndpoint": {
                                        "clickTrackingParams": "CCQQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "queueAddEndpoint": {
                                          "queueTarget": {
                                            "playlistId": "OLAK5uy_kBIZsQDBYzGOfWbJK3vrhaWbWWOfaD0yo"
                                          },
                                          "queueInsertPosition": "INSERT_AT_END",
                                          "commands": [
                                            {
                                              "clickTrackingParams": "CCQQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                              "addToToastAction": {
                                                "item": {
                                                  "notificationTextRenderer": {
                                                    "successResponseText": {
                                                      "runs": [
                                                        {
                                                          "text": "Album added to queue"
                                                        }
                                                      ]
                                                    },
                                                    "trackingParams": "CCUQyscDIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "trackingParams": "CCQQ--8FGAMiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "toggleMenuServiceItemRenderer": {
                                      "defaultText": {
                                        "runs": [
                                          {
                                            "text": "Add album to library"
                                          }
                                        ]
                                      },
                                      "defaultIcon": {
                                        "iconType": "LIBRARY_ADD"
                                      },
                                      "defaultServiceEndpoint": {
                                        "clickTrackingParams": "CCIQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Add favorites to your library after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CCMQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CCMQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "toggledText": {
                                        "runs": [
                                          {
                                            "text": "Remove album from library"
                                          }
                                        ]
                                      },
                                      "toggledIcon": {
                                        "iconType": "LIBRARY_SAVED"
                                      },
                                      "toggledServiceEndpoint": {
                                        "clickTrackingParams": "CCIQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "likeEndpoint": {
                                          "status": "INDIFFERENT",
                                          "target": {
                                            "playlistId": "OLAK5uy_kBIZsQDBYzGOfWbJK3vrhaWbWWOfaD0yo"
                                          }
                                        }
                                      },
                                      "trackingParams": "CCIQhP8FGAQiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Add to playlist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ADD_TO_PLAYLIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CCAQw5QGGAUiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "modalEndpoint": {
                                          "modal": {
                                            "modalWithTitleAndButtonRenderer": {
                                              "title": {
                                                "runs": [
                                                  {
                                                    "text": "Save this for later"
                                                  }
                                                ]
                                              },
                                              "content": {
                                                "runs": [
                                                  {
                                                    "text": "Make playlists and share them after signing in"
                                                  }
                                                ]
                                              },
                                              "button": {
                                                "buttonRenderer": {
                                                  "style": "STYLE_BLUE_TEXT",
                                                  "isDisabled": false,
                                                  "text": {
                                                    "runs": [
                                                      {
                                                        "text": "Sign in"
                                                      }
                                                    ]
                                                  },
                                                  "navigationEndpoint": {
                                                    "clickTrackingParams": "CCEQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                                    "signInEndpoint": {
                                                      "hack": true
                                                    }
                                                  },
                                                  "trackingParams": "CCEQ8FsiEwiEqKj51Jf-AhV38REIHVliDnI="
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CCAQw5QGGAUiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Go to artist"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "ARTIST"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CB8QkPsFGAYiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "browseEndpoint": {
                                          "browseId": "UCOk2T6KzdvFcXFpc2jr5y9w",
                                          "browseEndpointContextSupportedConfigs": {
                                            "browseEndpointContextMusicConfig": {
                                              "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                            }
                                          }
                                        }
                                      },
                                      "trackingParams": "CB8QkPsFGAYiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CB4QkfsFGAciEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "EilPTEFLNXV5X2tCSVpzUURCWXpHT2ZXYkpLM3ZyaGFXYldXT2ZhRDB5bw%3D%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CB4QkfsFGAciEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CB0QpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CBwQ1GgYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                              "browseEndpoint": {
                                "browseId": "MPREb_iSpMMbTwq1b",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ALBUM"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CBsQ-V4YBCITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CBsQ-V4YBCITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                        "searchEndpoint": {
                          "query": "80s",
                          "params": "EgWKAQIYAWoMEA4QChADEAQQCRAF"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  },
                  {
                    "musicShelfRenderer": {
                      "title": {
                        "runs": [
                          {
                            "text": "Artists"
                          }
                        ]
                      },
                      "contents": [
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CBUQ1WgYACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/usn3N_8vCM8-Hwaa7AthDlNFnlvw3rxOTZbx0qVrZkguRNhslroJ6skAMEeCs4KKYv-_HWMQ6_2Dh4IR=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/usn3N_8vCM8-Hwaa7AthDlNFnlvw3rxOTZbx0qVrZkguRNhslroJ6skAMEeCs4KKYv-_HWMQ6_2Dh4IR=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_CIRCLE",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FILL",
                                "trackingParams": "CBoQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "60's 70's 80's 90's Hits"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Artist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "812 subscribers"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBkQmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAOGoY-xtzFVcypM5Nph_Opiw",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "CBkQmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBgQm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDEMGoY-xtzFVcypM5Nph_Opiw",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CBgQm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBcQkfsFGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "GhhVQ0lhdFZ1dDBoZDhqUGYzMWZQc2pYX2c%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CBcQkfsFGAIiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CBYQpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CBUQ1WgYACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                              "browseEndpoint": {
                                "browseId": "UCIatVut0hd8jPf31fPsjX_g",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CBEQ1WgYASITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/SP7WfRPxwvY35fdGFyW-pGTn--Osy6w3fuZrFaLy0CPVM_q0hjtHAG9u2QpamkFgofMS0iroPZqVoSHUiA=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/SP7WfRPxwvY35fdGFyW-pGTn--Osy6w3fuZrFaLy0CPVM_q0hjtHAG9u2QpamkFgofMS0iroPZqVoSHUiA=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_CIRCLE",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FILL",
                                "trackingParams": "CBQQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "80's Greatest Hits"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Artist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "1.9K subscribers"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CBMQkfsFGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "GhhVQ29wTWUzcC1GZ2l4NUNxWGZ5QkIzaVE%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CBMQkfsFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CBIQpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CBEQ1WgYASITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                              "browseEndpoint": {
                                "browseId": "UCopMe3p-Fgix5CqXfyBB3iQ",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        },
                        {
                          "musicResponsiveListItemRenderer": {
                            "trackingParams": "CAsQ1WgYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "thumbnail": {
                              "musicThumbnailRenderer": {
                                "thumbnail": {
                                  "thumbnails": [
                                    {
                                      "url": "https://lh3.googleusercontent.com/iYOfDp0ig3o4vHVIA0Sk2UJWLCQ4ykJZNndfmXt3_Ifr6BX9NjzMewihDsY6UtjCb2-_EOljTDauJQ8=w60-h60-l90-rj",
                                      "width": 60,
                                      "height": 60
                                    },
                                    {
                                      "url": "https://lh3.googleusercontent.com/iYOfDp0ig3o4vHVIA0Sk2UJWLCQ4ykJZNndfmXt3_Ifr6BX9NjzMewihDsY6UtjCb2-_EOljTDauJQ8=w120-h120-l90-rj",
                                      "width": 120,
                                      "height": 120
                                    }
                                  ]
                                },
                                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_CIRCLE",
                                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FILL",
                                "trackingParams": "CBAQhL8CIhMIhKio-dSX_gIVd_ERCB1ZYg5y"
                              }
                            },
                            "flexColumns": [
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "80's Disco Band, Le meilleur des années 80, Années 80"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              },
                              {
                                "musicResponsiveListItemFlexColumnRenderer": {
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Artist"
                                      },
                                      {
                                        "text": " • "
                                      },
                                      {
                                        "text": "206 subscribers"
                                      }
                                    ]
                                  },
                                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                                }
                              }
                            ],
                            "menu": {
                              "menuRenderer": {
                                "items": [
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Shuffle play"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MUSIC_SHUFFLE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CA8QmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDAOOK31J-P5DJ0N5Cw_jyf3uA",
                                          "params": "wAEB8gECGAE%3D"
                                        }
                                      },
                                      "trackingParams": "CA8QmvMFGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Start radio"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "MIX"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CA4Qm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "watchPlaylistEndpoint": {
                                          "playlistId": "RDEMOK31J-P5DJ0N5Cw_jyf3uA",
                                          "params": "wAEB"
                                        }
                                      },
                                      "trackingParams": "CA4Qm_MFGAEiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  },
                                  {
                                    "menuNavigationItemRenderer": {
                                      "text": {
                                        "runs": [
                                          {
                                            "text": "Share"
                                          }
                                        ]
                                      },
                                      "icon": {
                                        "iconType": "SHARE"
                                      },
                                      "navigationEndpoint": {
                                        "clickTrackingParams": "CA0QkfsFGAIiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                        "shareEntityEndpoint": {
                                          "serializedShareEntity": "GhhVQ3JOTmVweThRNmozQ3JJT0kwUnJRTEE%3D",
                                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                                        }
                                      },
                                      "trackingParams": "CA0QkfsFGAIiEwiEqKj51Jf-AhV38REIHVliDnI="
                                    }
                                  }
                                ],
                                "trackingParams": "CAwQpzsiEwiEqKj51Jf-AhV38REIHVliDnI=",
                                "accessibility": {
                                  "accessibilityData": {
                                    "label": "Action menu"
                                  }
                                }
                              }
                            },
                            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
                            "navigationEndpoint": {
                              "clickTrackingParams": "CAsQ1WgYAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                              "browseEndpoint": {
                                "browseId": "UCrNNepy8Q6j3CrIOI0RrQLA",
                                "browseEndpointContextSupportedConfigs": {
                                  "browseEndpointContextMusicConfig": {
                                    "pageType": "MUSIC_PAGE_TYPE_ARTIST"
                                  }
                                }
                              }
                            },
                            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
                          }
                        }
                      ],
                      "trackingParams": "CAoQ-V4YBSITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                      "bottomText": {
                        "runs": [
                          {
                            "text": "Show all"
                          }
                        ]
                      },
                      "bottomEndpoint": {
                        "clickTrackingParams": "CAoQ-V4YBSITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                        "searchEndpoint": {
                          "query": "80s",
                          "params": "EgWKAQIgAWoMEA4QChADEAQQCRAF"
                        }
                      },
                      "shelfDivider": {
                        "musicShelfDividerRenderer": {
                          "hidden": true
                        }
                      }
                    }
                  }
                ],
                "trackingParams": "CAIQui8iEwiEqKj51Jf-AhV38REIHVliDnI=",
                "header": {
                  "chipCloudRenderer": {
                    "chips": [
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Featured playlists"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAkQ_V0YACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "searchEndpoint": {
                              "query": "80s",
                              "params": "EgeKAQQoADgBagwQDhAKEAMQBBAJEAU%3D"
                            }
                          },
                          "trackingParams": "CAkQ_V0YACITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show featured playlist results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Featured playlists"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Community playlists"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAgQ_V0YASITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "searchEndpoint": {
                              "query": "80s",
                              "params": "EgeKAQQoAEABagwQDhAKEAMQBBAJEAU%3D"
                            }
                          },
                          "trackingParams": "CAgQ_V0YASITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show community playlist results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Community playlists"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Songs"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAcQ_V0YAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "searchEndpoint": {
                              "query": "80s",
                              "params": "EgWKAQIIAWoMEA4QChADEAQQCRAF"
                            }
                          },
                          "trackingParams": "CAcQ_V0YAiITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show song results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Songs"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Videos"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAYQ_V0YAyITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "searchEndpoint": {
                              "query": "80s",
                              "params": "EgWKAQIQAWoMEA4QChADEAQQCRAF"
                            }
                          },
                          "trackingParams": "CAYQ_V0YAyITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show video results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Videos"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Albums"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAUQ_V0YBCITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "searchEndpoint": {
                              "query": "80s",
                              "params": "EgWKAQIYAWoMEA4QChADEAQQCRAF"
                            }
                          },
                          "trackingParams": "CAUQ_V0YBCITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show album results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Albums"
                        }
                      },
                      {
                        "chipCloudChipRenderer": {
                          "style": {
                            "styleType": "STYLE_DEFAULT"
                          },
                          "text": {
                            "runs": [
                              {
                                "text": "Artists"
                              }
                            ]
                          },
                          "navigationEndpoint": {
                            "clickTrackingParams": "CAQQ_V0YBSITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                            "searchEndpoint": {
                              "query": "80s",
                              "params": "EgWKAQIgAWoMEA4QChADEAQQCRAF"
                            }
                          },
                          "trackingParams": "CAQQ_V0YBSITCISoqPnUl_4CFXfxEQgdWWIOcg==",
                          "accessibilityData": {
                            "accessibilityData": {
                              "label": "Show artist results"
                            }
                          },
                          "isSelected": false,
                          "uniqueId": "Artists"
                        }
                      }
                    ],
                    "collapsedRowCount": 1,
                    "trackingParams": "CAMQ_F0iEwiEqKj51Jf-AhV38REIHVliDnI=",
                    "horizontalScrollable": true
                  }
                }
              }
            },
            "tabIdentifier": "music_search_catalog",
            "trackingParams": "CAEQ8JMBGAAiEwiEqKj51Jf-AhV38REIHVliDnI="
          }
        }
      ]
    }
  },
  "trackingParams": "CAAQvGkiEwiEqKj51Jf-AhV38REIHVliDnI="
}

  recorded_at: Fri, 07 Apr 2023 11:27:24 GMT
- request:
    method: post
    uri: https://music.youtube.com/youtubei/v1/search?continuation=ErIHEgM4MHMaqgdFZ2VLQVFRb0FFQUJTQlJxREJBT0VBb1FBeEFFRUFrUUJZSUJJbEJNYlZoNGNWTktTbkV0ZVZoeVExQkhTVlF5WjI0NFlqTTBTbXBQY213MFdHYUNBU0pRVEdRNVlYVklORXBKU0haMWNHOU5aMWMxV1daUGFuRjBhalpNYVdnd1RVdDNnZ0VTVUV4RFJEQTBORFZETlRkR01rSTNSalF4Z2dFaVVFeDZVazR0YW1nNE5WcDRWV1UxTlVKUmRtSlVMVGQxYUdOWmVGVkhiR05GUklJQkVsQk1Remt3UmtJM01VWTJSVU5GTVRkR000SUJJbEJNYlZoNGNWTktTbkV0ZVZaWGNGSkdSMGx0U0ZsYVFsRlVkVUpIVEdwSE5IU0NBU0pRVEdoblpYSkNXVFYxUzNkVWVtTmlaM0ZRVm1OUVJHVjBiMjluWlVwNU0waGlnZ0VpVUV3MlIwMUhaa1F0TkhWMVdFSnJhamRsYjJaTGREWlNTVlpGUm1admNETmFNSUlCSWxCTWEwWTRlalJmY2tWcFNHZGhhVlJxYVZnMmJsZHJVbDlIUlRjeFlUbENiRUtDQVNKUVREUk5RbFp2Vm1GdFVrMTVZemRaYjFkR1MxVXRSMGg0TkV0TE5XOXBhRGd5Z2dFaVVFeFhXV3M0VG5sVE9GWlhORVJqTUhOek9YQjFUMk0wV0daRWRXSnpNMkp3WTRJQkVsQk1Nekl4TUVKRE5ESTNOamhETmtFNE9JSUJJbEJNY0ZsWFMwZE5aMUpCTVhWVk9XeDVUWFJTT0haUlFucGpORWh5YW5CeFdYV0NBU0pRVEVWWGMwaHRXR2RGWkZWVFpYTXlVbWt5ZFZsaFZtMTRTbWRuVG5CamFFTTBnZ0VTVUV3MVFUZEVPVVk1TWprMU5EZzVRVVJCZ2dFaVVFd3ljSFJvTldGaGFqUjRjbEV6WkZSbk0zUmlWRXR1VHpSTWRFTlBkV1l6YklJQklsQk1SMEoxUzJadVJYSmFiRVJpYW5FNFZERlVRVFJ0U0dwSllVeG1OemRwUWstQ0FTSlFUR3A1Y1RBeVFrWk5SV1JIYm5sWWJEaExNbVJ3TWpsVFpXTnBNRFF6WjFoU2dnRWlVRXh3YkZoUk1tTm5PVUpmYnpGWUxVdHVaRFYzWjJKQmFTMVpSRlJUWW0xNUxZSUJJbEJNTTBWbU5rVnJaRzl4ZW5JemVXcEZiVWhXUTBJdGVGQXdibXg0Ymt0RVgyTSUzRBjx6tAu
    body:
      encoding: UTF-8
      string: '{"context":{"client":{"clientName":"WEB_REMIX","clientVersion":"1.20230227.01.00","gl":"GB"}},"query":"80s","params":"EgeKAQQoAEABagwQDhAKEAMQBBAJEAU%3D"}'
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.2.0p0
      Content-Type:
      - application/json
      Content-Length:
      - '154'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - music.youtube.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Fri, 07 Apr 2023 11:27:25 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "responseContext": {
    "visitorData": "CgtPSTgtYjIzeTFjTSic_L-hBg%3D%3D",
    "serviceTrackingParams": [
      {
        "service": "CSI",
        "params": [
          {
            "key": "c",
            "value": "WEB_REMIX"
          },
          {
            "key": "cver",
            "value": "1.20230227.01.00"
          },
          {
            "key": "yt_li",
            "value": "0"
          },
          {
            "key": "GetSearch_rid",
            "value": "0x251457b57e9e712a"
          }
        ]
      },
      {
        "service": "GFEEDBACK",
        "params": [
          {
            "key": "logged_in",
            "value": "0"
          },
          {
            "key": "e",
            "value": "1714253,23804281,23853953,23918597,23946420,23966208,23983296,23998056,24004644,24007246,24034168,24036948,24077241,24080738,24120820,24135310,24140247,24162920,24169501,24181174,24187043,24187377,24197450,24211178,24219713,24235780,24241378,24255165,24255543,24255545,24262346,24263796,24268142,24288043,24288664,24290971,24390675,24391539,24396565,24404640,24407191,24407446,24409417,24415864,24415866,24419276,24425061,24426636,24428415,24429092,24439361,24439483,24440518,24441788,24449913,24450367,24451319,24451438,24453129,24455284,24456680,24458317,24458324,24458329,24458393,24458839,24459436,24462372,24465011,24465101,24466371,24466460,24468691,24468724,24471752,24474986,24477227,24477512,24482081,24483503,24483890,24484079,24485239,24485421,24486584,24487014,24488187,24490486,24491070,24494083,24494198,24494984,24494997,24495060,24495838,24495960,24495971,24496739,24496968,24499289,24499300,24499568,24499573,24499792,24499945,24510482,24513984,24515366,24516012,24516016,24516156,24518007,24518452,24519102,24519142,24519223,24519257,24530194,24530296,24530334,24530439,24530852,24530948,24531267,24532175,24534542,39323074"
          }
        ]
      },
      {
        "service": "ECATCHER",
        "params": [
          {
            "key": "client.version",
            "value": "1.20000101"
          },
          {
            "key": "client.name",
            "value": "WEB_REMIX"
          },
          {
            "key": "client.fexp",
            "value": "24441788,24531267,24135310,24255543,24455284,23998056,23946420,24530852,24483890,24219713,24485421,24495960,24396565,24518452,24499289,24496968,23918597,24516156,24494984,23966208,24516012,24451319,24426636,24415866,24407191,24468691,24077241,24495971,24482081,24519102,23804281,24004644,24499300,24465011,24419276,24197450,24007246,24187377,24484079,24409417,24468724,24391539,24495060,24532175,24453129,24440518,24499945,24459436,24534542,24458839,24494997,24458393,24162920,24080738,24486584,24458329,24485239,24530194,24496739,24530296,24036948,24255545,24390675,24466371,24499573,24519223,24499568,24211178,24407446,24429092,24456680,24530334,24491070,1714253,24439483,24425061,24519142,24034168,24404640,24494083,24465101,24471752,24415864,24466460,24513984,24530948,24290971,24255165,24530439,24474986,24288664,24181174,24169501,24428415,24462372,24449913,24268142,24490486,24483503,24262346,24120820,24477512,24499792,24516016,23853953,24518007,24451438,24187043,24495838,24515366,24519257,39323074,24241378,24494198,24263796,24439361,24140247,24510482,24488187,24458317,24458324,24487014,24450367,24288043,23983296,24477227,24235780"
          }
        ]
      }
    ],
    "maxAgeSeconds": 120
  },
  "continuationContents": {
    "musicShelfContinuation": {
      "contents": [
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CKkCENafBxgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/5OMTSoDEWQQIEWBx60NG0Ek39DUi7F858wSihjgO3OgOCHbro7IAcdkfRnuhvUinBW1-KIBs7BY=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/5OMTSoDEWQQIEWBx60NG0Ek39DUi7F858wSihjgO3OgOCHbro7IAcdkfRnuhvUinBW1-KIBs7BY=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/5OMTSoDEWQQIEWBx60NG0Ek39DUi7F858wSihjgO3OgOCHbro7IAcdkfRnuhvUinBW1-KIBs7BY=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CLcCEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CLYCEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLNtVJw64iuw3KRKljIn6d5xj1DJBEGaoo",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CLYCEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 80s Covers Playlist"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 80s Covers Playlist"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "80s Covers Playlist"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Mark Mongie",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CKkCENafBxgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UCUMclHM8D5-FgsINBW8KZcQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "177 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLUCEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLNtVJw64iuw3KRKljIn6d5xj1DJBEGaoo",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CLUCEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLQCEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLNtVJw64iuw3KRKljIn6d5xj1DJBEGaoo",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CLQCEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CLICEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLNtVJw64iuw3KRKljIn6d5xj1DJBEGaoo"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CLICEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CLMCEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CLICEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CLACEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLNtVJw64iuw3KRKljIn6d5xj1DJBEGaoo"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CLACEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CLECEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CLACEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CK4CEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CK8CEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CK8CEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CK4CEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLNtVJw64iuw3KRKljIn6d5xj1DJBEGaoo"
                          }
                        }
                      },
                      "trackingParams": "CK4CEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKwCEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CK0CEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CK0CEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CKwCEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKsCEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTE50Vkp3NjRpdXczS1JLbGpJbjZkNXhqMURKQkVHYW9v",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CKsCEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CKoCEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CKkCENafBxgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLNtVJw64iuw3KRKljIn6d5xj1DJBEGaoo",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CJoCENafBxgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/JHYIGy1dyd8/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3l16Q8yR1SPA8RR3zq6DdmxpEHY5Q",
                      "width": 400,
                      "height": 225
                    },
                    {
                      "url": "https://i.ytimg.com/vi/JHYIGy1dyd8/hq720.jpg?sqp=-oaymwEXCKAGEMIDIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3nyxqtawMg-gZLpX49bfca_TguOYA",
                      "width": 800,
                      "height": 450
                    },
                    {
                      "url": "https://i.ytimg.com/vi/JHYIGy1dyd8/hq720.jpg?sqp=-oaymwEXCNUGEOADIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3kvzxyopAEUReO0GE7s5D18IB7EHw",
                      "width": 853,
                      "height": 480
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CKgCEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CKcCEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLQjmHhWp1u0OzGUY9hKukEIXoRrq2xK8B",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CKcCEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 80s british invasion"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 80s british invasion"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "80s british invasion"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "April Demes",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CJoCENafBxgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UCqB27LYPRi1nVGbGNObJbgg",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "95 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKYCEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLQjmHhWp1u0OzGUY9hKukEIXoRrq2xK8B",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CKYCEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKUCEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLQjmHhWp1u0OzGUY9hKukEIXoRrq2xK8B",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CKUCEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CKMCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLQjmHhWp1u0OzGUY9hKukEIXoRrq2xK8B"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CKMCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CKQCEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CKMCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CKECEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLQjmHhWp1u0OzGUY9hKukEIXoRrq2xK8B"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CKECEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CKICEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CKECEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CJ8CEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CKACEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CKACEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CJ8CEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLQjmHhWp1u0OzGUY9hKukEIXoRrq2xK8B"
                          }
                        }
                      },
                      "trackingParams": "CJ8CEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJ0CEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJ4CEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJ4CEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CJ0CEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJwCEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTFFqbUhoV3AxdTBPekdVWTloS3VrRUlYb1JycTJ4SzhC",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CJwCEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CJsCEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CJoCENafBxgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLQjmHhWp1u0OzGUY9hKukEIXoRrq2xK8B",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CIsCENafBxgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.googleusercontent.com/nL6R1MnQl5dG2TwXrn0eOaoYwwxss3O8njDemNP7tyFEz8LPm3R_hlF3C_S4coiNOLlt0XHKJkNj=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.googleusercontent.com/nL6R1MnQl5dG2TwXrn0eOaoYwwxss3O8njDemNP7tyFEz8LPm3R_hlF3C_S4coiNOLlt0XHKJkNj=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.googleusercontent.com/nL6R1MnQl5dG2TwXrn0eOaoYwwxss3O8njDemNP7tyFEz8LPm3R_hlF3C_S4coiNOLlt0XHKJkNj=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CJkCEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CJgCEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLmXxqSJJq-yXQtNvNCeUsPIqne001dXov",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CJgCEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Soft Rock Hits Playlist | Best Soft Rock Songs From The 70s 80s 90s"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Soft Rock Hits Playlist | Best Soft Rock Songs From The 70s 80s 90s"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Soft Rock Hits Playlist | Best Soft Rock Songs From The 70s 80s 90s"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "RHINO",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CIsCENafBxgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UCWEtnEiVwUy7mwFeshyAWLA",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "151 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJcCEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLmXxqSJJq-yXQtNvNCeUsPIqne001dXov",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CJcCEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJYCEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLmXxqSJJq-yXQtNvNCeUsPIqne001dXov",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CJYCEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJQCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLmXxqSJJq-yXQtNvNCeUsPIqne001dXov"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CJQCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CJUCEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJQCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJICEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLmXxqSJJq-yXQtNvNCeUsPIqne001dXov"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CJICEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CJMCEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJICEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CJACEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJECEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJECEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CJACEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLmXxqSJJq-yXQtNvNCeUsPIqne001dXov"
                          }
                        }
                      },
                      "trackingParams": "CJACEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CI4CEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CI8CEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CI8CEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CI4CEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CI0CEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTG1YeHFTSkpxLXlYUXROdk5DZVVzUElxbmUwMDFkWG92",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CI0CEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CIwCEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CIsCENafBxgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLmXxqSJJq-yXQtNvNCeUsPIqne001dXov",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CPwBENafBxgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/t4_kVCqwHNvZxUkWygkTT3TgHKu0eqYD9Ctl6Ja7u5rI_o8hu3Bz4usO0H4WvJ07grF7-FU5jg=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/t4_kVCqwHNvZxUkWygkTT3TgHKu0eqYD9Ctl6Ja7u5rI_o8hu3Bz4usO0H4WvJ07grF7-FU5jg=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/t4_kVCqwHNvZxUkWygkTT3TgHKu0eqYD9Ctl6Ja7u5rI_o8hu3Bz4usO0H4WvJ07grF7-FU5jg=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CIoCEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CIkCEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PL-rFYrnzIalWsY6gkT7VDoYqpk8GL21cp",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CIkCEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play The Best Of Rock Ballads Ever Of The 60's, 70's 80's & 90's"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause The Best Of Rock Ballads Ever Of The 60's, 70's 80's & 90's"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "The Best Of Rock Ballads Ever Of The 60's, 70's 80's & 90's"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Caio Figueiredo",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CPwBENafBxgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UClyc_HOLCKoVx7tlDALN3ig",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "321 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIgCEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PL-rFYrnzIalWsY6gkT7VDoYqpk8GL21cp",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CIgCEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIcCEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPL-rFYrnzIalWsY6gkT7VDoYqpk8GL21cp",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CIcCEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CIUCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PL-rFYrnzIalWsY6gkT7VDoYqpk8GL21cp"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CIUCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CIYCEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CIUCEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CIMCEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PL-rFYrnzIalWsY6gkT7VDoYqpk8GL21cp"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CIMCEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CIQCEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CIMCEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CIECEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CIICEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CIICEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CIECEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PL-rFYrnzIalWsY6gkT7VDoYqpk8GL21cp"
                          }
                        }
                      },
                      "trackingParams": "CIECEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CP8BEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CIACEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CIACEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CP8BEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CP4BEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTC1yRllybnpJYWxXc1k2Z2tUN1ZEb1lxcGs4R0wyMWNw",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CP4BEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CP0BEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CPwBENafBxgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPL-rFYrnzIalWsY6gkT7VDoYqpk8GL21cp",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CO0BENafBxgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.googleusercontent.com/eWBmBuIjwyoZ1DcYeeHiTbvGiZcNldkd7anBCsgY7CBz2RiVYE8urqOxJ-_lT1EXy_mkex3ANw=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.googleusercontent.com/eWBmBuIjwyoZ1DcYeeHiTbvGiZcNldkd7anBCsgY7CBz2RiVYE8urqOxJ-_lT1EXy_mkex3ANw=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.googleusercontent.com/eWBmBuIjwyoZ1DcYeeHiTbvGiZcNldkd7anBCsgY7CBz2RiVYE8urqOxJ-_lT1EXy_mkex3ANw=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CPsBEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CPoBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLwv5e6ZGQ-AJshU8dhTwA-sVjMMi0tyCc",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CPoBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 80s Rock Anthems Spotify - Best Spotify 80s Rock Playlist - All Out 80's Spotify - Rock Collection 80s"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 80s Rock Anthems Spotify - Best Spotify 80s Rock Playlist - All Out 80's Spotify - Rock Collection 80s"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "80s Rock Anthems Spotify - Best Spotify 80s Rock Playlist - All Out 80's Spotify - Rock Collection 80s"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Musify Mixes",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CO0BENafBxgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UCGb9NC1WlTmqgH9PGAdEjBQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "60 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CPkBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLwv5e6ZGQ-AJshU8dhTwA-sVjMMi0tyCc",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CPkBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CPgBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLwv5e6ZGQ-AJshU8dhTwA-sVjMMi0tyCc",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CPgBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CPYBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLwv5e6ZGQ-AJshU8dhTwA-sVjMMi0tyCc"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CPYBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CPcBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CPYBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CPQBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLwv5e6ZGQ-AJshU8dhTwA-sVjMMi0tyCc"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CPQBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CPUBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CPQBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CPIBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CPMBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CPMBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CPIBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLwv5e6ZGQ-AJshU8dhTwA-sVjMMi0tyCc"
                          }
                        }
                      },
                      "trackingParams": "CPIBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CPABEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CPEBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CPEBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CPABEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CO8BEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTHd2NWU2WkdRLUFKc2hVOGRoVHdBLXNWak1NaTB0eUNj",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CO8BEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CO4BEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CO0BENafBxgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLwv5e6ZGQ-AJshU8dhTwA-sVjMMi0tyCc",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CN4BENafBxgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/aXCvJGFbxiqnabb12A1pxjp8cblgnMz80PBtLiqwl5tBGXnYkFN4zQKpr8XTNkQfjznsvpwajMxY=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/aXCvJGFbxiqnabb12A1pxjp8cblgnMz80PBtLiqwl5tBGXnYkFN4zQKpr8XTNkQfjznsvpwajMxY=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/aXCvJGFbxiqnabb12A1pxjp8cblgnMz80PBtLiqwl5tBGXnYkFN4zQKpr8XTNkQfjznsvpwajMxY=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "COwBEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "COsBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLo0s1FJFHCu-sY-YtHOMSuAh1Wvan2_WF",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "COsBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 80s: 100 Hits Remixes"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 80s: 100 Hits Remixes"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "80s: 100 Hits Remixes"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Carlo Sartori",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CN4BENafBxgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UCgYljU0DmNx65SCMyua_Z9A",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "101 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "COoBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLo0s1FJFHCu-sY-YtHOMSuAh1Wvan2_WF",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "COoBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "COkBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLo0s1FJFHCu-sY-YtHOMSuAh1Wvan2_WF",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "COkBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "COcBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLo0s1FJFHCu-sY-YtHOMSuAh1Wvan2_WF"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "COcBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "COgBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "COcBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "COUBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLo0s1FJFHCu-sY-YtHOMSuAh1Wvan2_WF"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "COUBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "COYBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "COUBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "COMBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "COQBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "COQBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "COMBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLo0s1FJFHCu-sY-YtHOMSuAh1Wvan2_WF"
                          }
                        }
                      },
                      "trackingParams": "COMBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "COEBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "COIBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "COIBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "COEBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "COABEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTG8wczFGSkZIQ3Utc1ktWXRIT01TdUFoMVd2YW4yX1dG",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "COABEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CN8BEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CN4BENafBxgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLo0s1FJFHCu-sY-YtHOMSuAh1Wvan2_WF",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CM8BENafBxgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/anyAo10-RzgkE8L0ICMTx3-rlcQtrmfgg279l86AhAND6YUCAEslZHPHIkP1mF7n6kX5QQTy_Q=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/anyAo10-RzgkE8L0ICMTx3-rlcQtrmfgg279l86AhAND6YUCAEslZHPHIkP1mF7n6kX5QQTy_Q=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/anyAo10-RzgkE8L0ICMTx3-rlcQtrmfgg279l86AhAND6YUCAEslZHPHIkP1mF7n6kX5QQTy_Q=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CN0BEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CNwBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLHURdI-JX-O9o9JMM4g4h7f3jxFaY3WED",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CNwBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play ladies of the 80s"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause ladies of the 80s"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "ladies of the 80s"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "amarcus79",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CM8BENafBxgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UC8hWAt7oHlMDrjmi6BqKZcA",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "50 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CNsBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLHURdI-JX-O9o9JMM4g4h7f3jxFaY3WED",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CNsBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CNoBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLHURdI-JX-O9o9JMM4g4h7f3jxFaY3WED",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CNoBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CNgBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLHURdI-JX-O9o9JMM4g4h7f3jxFaY3WED"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CNgBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CNkBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CNgBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CNYBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLHURdI-JX-O9o9JMM4g4h7f3jxFaY3WED"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CNYBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CNcBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CNYBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CNQBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CNUBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CNUBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CNQBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLHURdI-JX-O9o9JMM4g4h7f3jxFaY3WED"
                          }
                        }
                      },
                      "trackingParams": "CNQBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CNIBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CNMBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CNMBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CNIBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CNEBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTEhVUmRJLUpYLU85bzlKTU00ZzRoN2YzanhGYVkzV0VE",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CNEBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CNABEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CM8BENafBxgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLHURdI-JX-O9o9JMM4g4h7f3jxFaY3WED",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CMABENafBxgHIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/FG1NrQYXjLU/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3nheL-CRL1bcUlczVbYoiz0Z16XBQ",
                      "width": 400,
                      "height": 225
                    },
                    {
                      "url": "https://i.ytimg.com/vi/FG1NrQYXjLU/hq720.jpg?sqp=-oaymwEXCKAGEMIDIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3khz6uu4dj9DTZDYo4BzUK0TWa-Qw",
                      "width": 800,
                      "height": 450
                    },
                    {
                      "url": "https://i.ytimg.com/vi/FG1NrQYXjLU/hq720.jpg?sqp=-oaymwEXCNUGEOADIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3lTQqJ-3_duXXzj69gLfQbVVfhuqg",
                      "width": 853,
                      "height": 480
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CM4BEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CM0BEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLcc1n6c7DMMcvSGi2PBL1AgOK8obl2BVz",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CM0BEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 80's Party Music"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 80's Party Music"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "80's Party Music"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "M Short",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CMABENafBxgHIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UC-11quLUlvRUFILeSPFMlPQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "132 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CMwBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLcc1n6c7DMMcvSGi2PBL1AgOK8obl2BVz",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CMwBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CMsBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLcc1n6c7DMMcvSGi2PBL1AgOK8obl2BVz",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CMsBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CMkBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLcc1n6c7DMMcvSGi2PBL1AgOK8obl2BVz"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CMkBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CMoBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CMkBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CMcBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLcc1n6c7DMMcvSGi2PBL1AgOK8obl2BVz"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CMcBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CMgBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CMcBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CMUBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CMYBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CMYBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CMUBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLcc1n6c7DMMcvSGi2PBL1AgOK8obl2BVz"
                          }
                        }
                      },
                      "trackingParams": "CMUBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CMMBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CMQBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CMQBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CMMBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CMIBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTGNjMW42YzdETU1jdlNHaTJQQkwxQWdPSzhvYmwyQlZ6",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CMIBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CMEBEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CMABENafBxgHIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLcc1n6c7DMMcvSGi2PBL1AgOK8obl2BVz",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CLEBENafBxgIIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/fFnOfpIJL0M/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3n_VNCsjED8ILjiIPSVnkDtA7Za3A",
                      "width": 400,
                      "height": 225
                    },
                    {
                      "url": "https://i.ytimg.com/vi/fFnOfpIJL0M/hq720.jpg?sqp=-oaymwEXCKAGEMIDIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3mhLqWSxCEY3a_g3UGN6-mfFnFEjg",
                      "width": 800,
                      "height": 450
                    },
                    {
                      "url": "https://i.ytimg.com/vi/fFnOfpIJL0M/hq720.jpg?sqp=-oaymwEXCNUGEOADIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3lf3JKw6gAKwURf2sDTTWRUQgtc5g",
                      "width": 853,
                      "height": 480
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CL8BEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CL4BEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLzN6P01kvao6UrESj-c15E4LsZeNUCM20",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CL4BEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Sirius XM Big 80s on 8 1000 Countdown"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Sirius XM Big 80s on 8 1000 Countdown"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Sirius XM Big 80s on 8 1000 Countdown"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "bethannejohnson1969",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CLEBENafBxgIIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UCqUggtQE54jDHAYBM9n5Krg",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "100 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CL0BEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLzN6P01kvao6UrESj-c15E4LsZeNUCM20",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CL0BEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLwBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLzN6P01kvao6UrESj-c15E4LsZeNUCM20",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CLwBEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CLoBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLzN6P01kvao6UrESj-c15E4LsZeNUCM20"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CLoBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CLsBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CLoBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CLgBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLzN6P01kvao6UrESj-c15E4LsZeNUCM20"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CLgBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CLkBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CLgBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CLYBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CLcBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CLcBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CLYBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLzN6P01kvao6UrESj-c15E4LsZeNUCM20"
                          }
                        }
                      },
                      "trackingParams": "CLYBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLQBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CLUBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CLUBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CLQBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CLMBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTHpONlAwMWt2YW82VXJFU2otYzE1RTRMc1plTlVDTTIw",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CLMBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CLIBEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CLEBENafBxgIIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLzN6P01kvao6UrESj-c15E4LsZeNUCM20",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CKIBENafBxgJIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/o6FiVdwkgPkrdqfx50rCA4waBchqnniWzyKrxf5YkR_RPMfNd3EOMQ8c9C_IW9eRCBEuBSKMR6U=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/o6FiVdwkgPkrdqfx50rCA4waBchqnniWzyKrxf5YkR_RPMfNd3EOMQ8c9C_IW9eRCBEuBSKMR6U=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/o6FiVdwkgPkrdqfx50rCA4waBchqnniWzyKrxf5YkR_RPMfNd3EOMQ8c9C_IW9eRCBEuBSKMR6U=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CLABEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CK8BEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PL7sq1kx5RgKhc2nO-5svY9eHoMB8Axw1I",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CK8BEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 230 Greatest 80's Freestyle Songs"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 230 Greatest 80's Freestyle Songs"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "230 Greatest 80's Freestyle Songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Anthony's Channel",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CKIBENafBxgJIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UC8fE3Sd7b9Gp5sTITX16uCg",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "229 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CK4BEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PL7sq1kx5RgKhc2nO-5svY9eHoMB8Axw1I",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CK4BEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CK0BEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPL7sq1kx5RgKhc2nO-5svY9eHoMB8Axw1I",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CK0BEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CKsBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PL7sq1kx5RgKhc2nO-5svY9eHoMB8Axw1I"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CKsBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CKwBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CKsBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CKkBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PL7sq1kx5RgKhc2nO-5svY9eHoMB8Axw1I"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CKkBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CKoBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CKkBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CKcBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CKgBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CKgBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CKcBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PL7sq1kx5RgKhc2nO-5svY9eHoMB8Axw1I"
                          }
                        }
                      },
                      "trackingParams": "CKcBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKUBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CKYBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CKYBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CKUBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CKQBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTDdzcTFreDVSZ0toYzJuTy01c3ZZOWVIb01COEF4dzFJ",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CKQBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CKMBEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CKIBENafBxgJIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPL7sq1kx5RgKhc2nO-5svY9eHoMB8Axw1I",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CJMBENafBxgKIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/qaRNxHQiB-oa1ZdI8g8-ZKYamT2GCU97Ko5nyM10xOtfvU7UbXYNmqsCYxMnc8LA8xzvWve96wj-=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/qaRNxHQiB-oa1ZdI8g8-ZKYamT2GCU97Ko5nyM10xOtfvU7UbXYNmqsCYxMnc8LA8xzvWve96wj-=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/qaRNxHQiB-oa1ZdI8g8-ZKYamT2GCU97Ko5nyM10xOtfvU7UbXYNmqsCYxMnc8LA8xzvWve96wj-=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CKEBEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CKABEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PL3BLUCBp1H2R0_xFFdVAx9ZfPvr3FtjgU",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CKABEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 80s and Early 90's Easy listening and Lover Songs"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 80s and Early 90's Easy listening and Lover Songs"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "80s and Early 90's Easy listening and Lover Songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "joshlanglo",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CJMBENafBxgKIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UCg1btbnHVMef6WNS9n3mT1Q",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "45 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJ8BEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PL3BLUCBp1H2R0_xFFdVAx9ZfPvr3FtjgU",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CJ8BEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJ4BEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPL3BLUCBp1H2R0_xFFdVAx9ZfPvr3FtjgU",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CJ4BEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJwBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PL3BLUCBp1H2R0_xFFdVAx9ZfPvr3FtjgU"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CJwBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CJ0BEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJwBEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CJoBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PL3BLUCBp1H2R0_xFFdVAx9ZfPvr3FtjgU"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CJoBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CJsBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CJoBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CJgBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJkBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJkBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CJgBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PL3BLUCBp1H2R0_xFFdVAx9ZfPvr3FtjgU"
                          }
                        }
                      },
                      "trackingParams": "CJgBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJYBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CJcBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CJcBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CJYBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJUBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTDNCTFVDQnAxSDJSMF94RkZkVkF4OVpmUHZyM0Z0amdV",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CJUBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CJQBEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CJMBENafBxgKIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPL3BLUCBp1H2R0_xFFdVAx9ZfPvr3FtjgU",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CIQBENafBxgLIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/Q-s1r0DrHcabQvpo6DJ1LHVUI_mQz0EA8eIURC8Dwbr8-2mWMwZ8ileg-FCy4qKvJ7bidHN98s0=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/Q-s1r0DrHcabQvpo6DJ1LHVUI_mQz0EA8eIURC8Dwbr8-2mWMwZ8ileg-FCy4qKvJ7bidHN98s0=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/Q-s1r0DrHcabQvpo6DJ1LHVUI_mQz0EA8eIURC8Dwbr8-2mWMwZ8ileg-FCy4qKvJ7bidHN98s0=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CJIBEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CJEBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLAQ7nLSEnhWRxZ_BN6B85RF9rh4uFwsp8",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CJEBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Happy 80s Songs, 80s Playlist, Best 80s songs, Top 80s songs, songs that make you happy, smile, dance, sing-along."
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Happy 80s Songs, 80s Playlist, Best 80s songs, Top 80s songs, songs that make you happy, smile, dance, sing-along."
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Happy 80s Songs, 80s Playlist, Best 80s songs, Top 80s songs, songs that make you happy, smile, dance, sing-along."
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Jackie C",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CIQBENafBxgLIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                          "browseEndpoint": {
                            "browseId": "UCj-W8uYSxr7r8TgpsLMOZjQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "736 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CJABEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLAQ7nLSEnhWRxZ_BN6B85RF9rh4uFwsp8",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CJABEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CI8BEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLAQ7nLSEnhWRxZ_BN6B85RF9rh4uFwsp8",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CI8BEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CI0BEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLAQ7nLSEnhWRxZ_BN6B85RF9rh4uFwsp8"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CI0BEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CI4BEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CI0BEL7uBRgCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CIsBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLAQ7nLSEnhWRxZ_BN6B85RF9rh4uFwsp8"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CIsBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CIwBEMrHAyITCL_wy_nUl_4CFebXEQgd8kEFkw=="
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CIsBEPvvBRgDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CIkBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CIoBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CIoBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CIkBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLAQ7nLSEnhWRxZ_BN6B85RF9rh4uFwsp8"
                          }
                        }
                      },
                      "trackingParams": "CIkBEIT_BRgEIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIcBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CIgBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CIgBEPBbIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CIcBEMOUBhgFIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIYBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTEFRN25MU0VuaFdSeFpfQk42Qjg1UkY5cmg0dUZ3c3A4",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CIYBEJH7BRgGIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  }
                ],
                "trackingParams": "CIUBEKc7IhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CIQBENafBxgLIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
              "browseEndpoint": {
                "browseId": "VLPLAQ7nLSEnhWRxZ_BN6B85RF9rh4uFwsp8",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CHUQ1p8HGAwiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/A1yL7krF3LfOtCVYq5ti8KgIBhxe87g3RIc4s0dGwD0HGcqcDZSFfAl6d3uRotMO0tecH3-74tXK=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/A1yL7krF3LfOtCVYq5ti8KgIBhxe87g3RIc4s0dGwD0HGcqcDZSFfAl6d3uRotMO0tecH3-74tXK=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/A1yL7krF3LfOtCVYq5ti8KgIBhxe87g3RIc4s0dGwD0HGcqcDZSFfAl6d3uRotMO0tecH3-74tXK=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CIMBEIS_AiITCL_wy_nUl_4CFebXEQgd8kEFkw=="
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CIIBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PL-Ib9oOPR7OGCgGVl9BlM8xKIAM5jQWyy",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CIIBEMjeAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play My 80's & 90's Rock Playlist"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause My 80's & 90's Rock Playlist"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "My 80's & 90's Rock Playlist"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Alen's Toys& Games",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CHUQ1p8HGAwiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                          "browseEndpoint": {
                            "browseId": "UCgVIiFuRvKzEX1IeGdPPFug",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "169 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIEBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PL-Ib9oOPR7OGCgGVl9BlM8xKIAM5jQWyy",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CIEBEJrzBRgAIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CIABEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPL-Ib9oOPR7OGCgGVl9BlM8xKIAM5jQWyy",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CIABEJvzBRgBIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CH4Qvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PL-Ib9oOPR7OGCgGVl9BlM8xKIAM5jQWyy"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CH4Qvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CH8QyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CH4Qvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CHwQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PL-Ib9oOPR7OGCgGVl9BlM8xKIAM5jQWyy"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CHwQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CH0QyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CHwQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CHoQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CHsQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CHsQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CHoQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PL-Ib9oOPR7OGCgGVl9BlM8xKIAM5jQWyy"
                          }
                        }
                      },
                      "trackingParams": "CHoQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CHgQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CHkQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CHkQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CHgQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CHcQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTC1JYjlvT1BSN09HQ2dHVmw5QmxNOHhLSUFNNWpRV3l5",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CHcQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  }
                ],
                "trackingParams": "CHYQpzsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CHUQ1p8HGAwiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
              "browseEndpoint": {
                "browseId": "VLPL-Ib9oOPR7OGCgGVl9BlM8xKIAM5jQWyy",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CGYQ1p8HGA0iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/FNAQFUQh-OqbYYdlPpgvTivmyd--GgcMadppdTiS6AN9UMNaTjy_K7YQT0IYYRc5QJdVE3GEtTnD=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/FNAQFUQh-OqbYYdlPpgvTivmyd--GgcMadppdTiS6AN9UMNaTjy_K7YQT0IYYRc5QJdVE3GEtTnD=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/FNAQFUQh-OqbYYdlPpgvTivmyd--GgcMadppdTiS6AN9UMNaTjy_K7YQT0IYYRc5QJdVE3GEtTnD=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CHQQhL8CIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CHMQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLkqz3S84Tw-QUOKFOA7wn_eMHwE1Fsq9a",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CHMQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Alt 80s Hits"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Alt 80s Hits"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Alt 80s Hits"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Vevo Playlists",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CGYQ1p8HGA0iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                          "browseEndpoint": {
                            "browseId": "UCPVhZsC2od1xjGhgEc2NEPQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "28 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CHIQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLkqz3S84Tw-QUOKFOA7wn_eMHwE1Fsq9a",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CHIQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CHEQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLkqz3S84Tw-QUOKFOA7wn_eMHwE1Fsq9a",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CHEQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CG8Qvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLkqz3S84Tw-QUOKFOA7wn_eMHwE1Fsq9a"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CG8Qvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CHAQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CG8Qvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CG0Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLkqz3S84Tw-QUOKFOA7wn_eMHwE1Fsq9a"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CG0Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CG4QyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CG0Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CGsQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CGwQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CGwQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CGsQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLkqz3S84Tw-QUOKFOA7wn_eMHwE1Fsq9a"
                          }
                        }
                      },
                      "trackingParams": "CGsQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CGkQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CGoQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CGoQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CGkQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CGgQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTGtxejNTODRUdy1RVU9LRk9BN3duX2VNSHdFMUZzcTlh",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CGgQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  }
                ],
                "trackingParams": "CGcQpzsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CGYQ1p8HGA0iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
              "browseEndpoint": {
                "browseId": "VLPLkqz3S84Tw-QUOKFOA7wn_eMHwE1Fsq9a",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CFcQ1p8HGA4iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.googleusercontent.com/ri7J4Dexsdb4TILprEkvViKzm4Jho7sRwRGQi5wxbQyOhUaKAlRSldFjJB1T2PIcbi-rCBCjX4Y=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.googleusercontent.com/ri7J4Dexsdb4TILprEkvViKzm4Jho7sRwRGQi5wxbQyOhUaKAlRSldFjJB1T2PIcbi-rCBCjX4Y=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.googleusercontent.com/ri7J4Dexsdb4TILprEkvViKzm4Jho7sRwRGQi5wxbQyOhUaKAlRSldFjJB1T2PIcbi-rCBCjX4Y=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CGUQhL8CIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CGQQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLR6iLyPrwbYO0xGzpVUDTJrD4lTs3r7lU",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CGQQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 80s remix of modern songs! 🎶 🎧"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 80s remix of modern songs! 🎶 🎧"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "80s remix of modern songs! 🎶 🎧"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Dr. Andy",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CFcQ1p8HGA4iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                          "browseEndpoint": {
                            "browseId": "UCRVSqucXWejMNTb3jrKqh3g",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "160 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CGMQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLR6iLyPrwbYO0xGzpVUDTJrD4lTs3r7lU",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CGMQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CGIQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLR6iLyPrwbYO0xGzpVUDTJrD4lTs3r7lU",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CGIQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CGAQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLR6iLyPrwbYO0xGzpVUDTJrD4lTs3r7lU"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CGAQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CGEQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CGAQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CF4Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLR6iLyPrwbYO0xGzpVUDTJrD4lTs3r7lU"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CF4Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CF8QyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CF4Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CFwQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CF0Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CF0Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CFwQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLR6iLyPrwbYO0xGzpVUDTJrD4lTs3r7lU"
                          }
                        }
                      },
                      "trackingParams": "CFwQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CFoQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CFsQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CFsQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CFoQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CFkQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTFI2aUx5UHJ3YllPMHhHenBWVURUSnJENGxUczNyN2xV",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CFkQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  }
                ],
                "trackingParams": "CFgQpzsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CFcQ1p8HGA4iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
              "browseEndpoint": {
                "browseId": "VLPLR6iLyPrwbYO0xGzpVUDTJrD4lTs3r7lU",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CEgQ1p8HGA8iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.googleusercontent.com/YcAx5KEIwjWuTiA5-nlux9ucZAeAEG7U1fAoQsUjtSTMPZizT88WFjpOvUYO1qlXIf0LqgLLww=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.googleusercontent.com/YcAx5KEIwjWuTiA5-nlux9ucZAeAEG7U1fAoQsUjtSTMPZizT88WFjpOvUYO1qlXIf0LqgLLww=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.googleusercontent.com/YcAx5KEIwjWuTiA5-nlux9ucZAeAEG7U1fAoQsUjtSTMPZizT88WFjpOvUYO1qlXIf0LqgLLww=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CFYQhL8CIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CFUQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLN-dGC8QHW18_BWM6oFBzSduud1SRDgIV",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CFUQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play The Best of \"My\" 80's Live"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause The Best of \"My\" 80's Live"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "The Best of \"My\" 80's Live"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Marcelo Imperatore",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CEgQ1p8HGA8iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                          "browseEndpoint": {
                            "browseId": "UCFYQCuh9gD2oLVXQ_Ny8VUA",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "213 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CFQQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLN-dGC8QHW18_BWM6oFBzSduud1SRDgIV",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CFQQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CFMQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLN-dGC8QHW18_BWM6oFBzSduud1SRDgIV",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CFMQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CFEQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLN-dGC8QHW18_BWM6oFBzSduud1SRDgIV"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CFEQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CFIQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CFEQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CE8Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLN-dGC8QHW18_BWM6oFBzSduud1SRDgIV"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CE8Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CFAQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CE8Q--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CE0QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CE4Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CE4Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CE0QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLN-dGC8QHW18_BWM6oFBzSduud1SRDgIV"
                          }
                        }
                      },
                      "trackingParams": "CE0QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CEsQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CEwQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CEwQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CEsQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CEoQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTE4tZEdDOFFIVzE4X0JXTTZvRkJ6U2R1dWQxU1JEZ0lW",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CEoQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  }
                ],
                "trackingParams": "CEkQpzsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CEgQ1p8HGA8iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
              "browseEndpoint": {
                "browseId": "VLPLN-dGC8QHW18_BWM6oFBzSduud1SRDgIV",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CDkQ1p8HGBAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://yt3.ggpht.com/wWg2uZqMTFQVyH0PG3fqsoSfr437J6-K8RfqMcxXCsPfe_BqUd4PRS3awvreJSITI7oEDI7vZfI=s192",
                      "width": 192,
                      "height": 192
                    },
                    {
                      "url": "https://yt3.ggpht.com/wWg2uZqMTFQVyH0PG3fqsoSfr437J6-K8RfqMcxXCsPfe_BqUd4PRS3awvreJSITI7oEDI7vZfI=s576",
                      "width": 576,
                      "height": 576
                    },
                    {
                      "url": "https://yt3.ggpht.com/wWg2uZqMTFQVyH0PG3fqsoSfr437J6-K8RfqMcxXCsPfe_BqUd4PRS3awvreJSITI7oEDI7vZfI=s1200",
                      "width": 1200,
                      "height": 1200
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CEcQhL8CIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CEYQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLxUOvzjgORDV3f90KmI5XOrwdao8smgbP",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CEYQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play IHeartRADIO 80s"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause IHeartRADIO 80s"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "IHeartRADIO 80s"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Mark Bloom",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CDkQ1p8HGBAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                          "browseEndpoint": {
                            "browseId": "UCUY8R_eI6wHlYbcpYON6AwQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "116 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CEUQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLxUOvzjgORDV3f90KmI5XOrwdao8smgbP",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CEUQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CEQQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLxUOvzjgORDV3f90KmI5XOrwdao8smgbP",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CEQQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CEIQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLxUOvzjgORDV3f90KmI5XOrwdao8smgbP"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CEIQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CEMQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CEIQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CEAQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLxUOvzjgORDV3f90KmI5XOrwdao8smgbP"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CEAQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CEEQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CEAQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CD4QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CD8Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CD8Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CD4QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLxUOvzjgORDV3f90KmI5XOrwdao8smgbP"
                          }
                        }
                      },
                      "trackingParams": "CD4QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CDwQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CD0Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CD0Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CDwQw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CDsQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTHhVT3Z6amdPUkRWM2Y5MEttSTVYT3J3ZGFvOHNtZ2JQ",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CDsQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  }
                ],
                "trackingParams": "CDoQpzsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CDkQ1p8HGBAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
              "browseEndpoint": {
                "browseId": "VLPLxUOvzjgORDV3f90KmI5XOrwdao8smgbP",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CCoQ1p8HGBEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/qsMz9vIaLwQ/hqdefault.jpg?sqp=-oaymwEWCMACELQBIAQqCghQEJADGFogjgJIWg&rs=AMzJL3nIh2VrXw4thsYWc6qj-k5ZW8liVQ",
                      "width": 320,
                      "height": 180
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CDgQhL8CIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CDcQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLkF8z4_rEiHg8yvtOrmPAp5mRq9HtfdQz",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CDcQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play 80's New Wave Music Videos Greatest Hits Collection"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause 80's New Wave Music Videos Greatest Hits Collection"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "80's New Wave Music Videos Greatest Hits Collection"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "amazontracy",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CCoQ1p8HGBEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                          "browseEndpoint": {
                            "browseId": "UCqAQGuvzmjgjGQOlVuWIzrA",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "957 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CDYQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLkF8z4_rEiHg8yvtOrmPAp5mRq9HtfdQz",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CDYQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CDUQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLkF8z4_rEiHg8yvtOrmPAp5mRq9HtfdQz",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CDUQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CDMQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLkF8z4_rEiHg8yvtOrmPAp5mRq9HtfdQz"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CDMQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CDQQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CDMQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CDEQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLkF8z4_rEiHg8yvtOrmPAp5mRq9HtfdQz"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CDEQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CDIQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CDEQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CC8QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CDAQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CDAQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CC8QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLkF8z4_rEiHg8yvtOrmPAp5mRq9HtfdQz"
                          }
                        }
                      },
                      "trackingParams": "CC8QhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CC0Qw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CC4Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CC4Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CC0Qw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CCwQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTGtGOHo0X3JFaUhnOHl2dE9ybVBBcDVtUnE5SHRmZFF6",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CCwQkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  }
                ],
                "trackingParams": "CCsQpzsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CCoQ1p8HGBEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
              "browseEndpoint": {
                "browseId": "VLPLkF8z4_rEiHg8yvtOrmPAp5mRq9HtfdQz",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CBsQ1p8HGBIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/e9sHxOeYwew/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3lgxABORJK4ZkdTTR07v6HYGEdVDg",
                      "width": 400,
                      "height": 225
                    },
                    {
                      "url": "https://i.ytimg.com/vi/e9sHxOeYwew/hq720.jpg?sqp=-oaymwEXCKAGEMIDIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3lsn3ibTC0HVDG8SvfoSEJenCG77g",
                      "width": 800,
                      "height": 450
                    },
                    {
                      "url": "https://i.ytimg.com/vi/e9sHxOeYwew/hq720.jpg?sqp=-oaymwEXCNUGEOADIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3kOr5KEQifiyDKu1O6hrbrNblaMQQ",
                      "width": 853,
                      "height": 480
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CCkQhL8CIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CCgQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLojwiR75XWC4dNnOz4gEH4RsVEtjSpQrW",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CCgQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play Instrumental Covers 80s"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause Instrumental Covers 80s"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Instrumental Covers 80s"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Jason Kitza",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CBsQ1p8HGBIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                          "browseEndpoint": {
                            "browseId": "UCEB6fPBAPwqvheD_asKZ1eA",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "37 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CCcQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLojwiR75XWC4dNnOz4gEH4RsVEtjSpQrW",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CCcQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CCYQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLojwiR75XWC4dNnOz4gEH4RsVEtjSpQrW",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CCYQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CCQQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLojwiR75XWC4dNnOz4gEH4RsVEtjSpQrW"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CCQQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CCUQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CCQQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CCIQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLojwiR75XWC4dNnOz4gEH4RsVEtjSpQrW"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CCIQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CCMQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CCIQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CCAQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CCEQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CCEQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CCAQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLojwiR75XWC4dNnOz4gEH4RsVEtjSpQrW"
                          }
                        }
                      },
                      "trackingParams": "CCAQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CB4Qw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CB8Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CB8Q8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CB4Qw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CB0QkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTG9qd2lSNzVYV0M0ZE5uT3o0Z0VINFJzVkV0alNwUXJX",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CB0QkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  }
                ],
                "trackingParams": "CBwQpzsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CBsQ1p8HGBIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
              "browseEndpoint": {
                "browseId": "VLPLojwiR75XWC4dNnOz4gEH4RsVEtjSpQrW",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        },
        {
          "musicResponsiveListItemRenderer": {
            "trackingParams": "CAwQ1p8HGBMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
            "thumbnail": {
              "musicThumbnailRenderer": {
                "thumbnail": {
                  "thumbnails": [
                    {
                      "url": "https://i.ytimg.com/vi/y3Cy7B9x0qk/sddefault.jpg?sqp=-oaymwEWCJADEOEBIAQqCghqEJQEGHgg6AJIWg&rs=AMzJL3morWin7GXMPE4dwwqM5yoYqZdEOg",
                      "width": 400,
                      "height": 225
                    },
                    {
                      "url": "https://i.ytimg.com/vi/y3Cy7B9x0qk/hq720.jpg?sqp=-oaymwEXCKAGEMIDIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3kbLf3DpFsD5R6ZbSefsKieELmSnw",
                      "width": 800,
                      "height": 450
                    },
                    {
                      "url": "https://i.ytimg.com/vi/y3Cy7B9x0qk/hq720.jpg?sqp=-oaymwEXCNUGEOADIAQqCwjVARCqCBh4INgESFo&rs=AMzJL3mRg3aK-zFKV9rfGLLfr_wDXUTorw",
                      "width": 853,
                      "height": 480
                    }
                  ]
                },
                "thumbnailCrop": "MUSIC_THUMBNAIL_CROP_UNSPECIFIED",
                "thumbnailScale": "MUSIC_THUMBNAIL_SCALE_ASPECT_FIT",
                "trackingParams": "CBoQhL8CIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
              }
            },
            "overlay": {
              "musicItemThumbnailOverlayRenderer": {
                "background": {
                  "verticalGradient": {
                    "gradientLayerColors": [
                      "3422552064",
                      "3422552064"
                    ]
                  }
                },
                "content": {
                  "musicPlayButtonRenderer": {
                    "playNavigationEndpoint": {
                      "clickTrackingParams": "CBkQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                      "watchPlaylistEndpoint": {
                        "playlistId": "PLR0EAULbNDxZz9xxPotH8nWCKXVRb3VHz",
                        "params": "wAEB8gECKAE%3D"
                      }
                    },
                    "trackingParams": "CBkQyN4CIhMIv_DL-dSX_gIV5tcRCB3yQQWT",
                    "playIcon": {
                      "iconType": "PLAY_ARROW"
                    },
                    "pauseIcon": {
                      "iconType": "PAUSE"
                    },
                    "iconColor": 4294967295,
                    "backgroundColor": 0,
                    "activeBackgroundColor": 0,
                    "loadingIndicatorColor": 4294901760,
                    "playingIcon": {
                      "iconType": "VOLUME_UP"
                    },
                    "iconLoadingColor": 0,
                    "activeScaleFactor": 1,
                    "buttonSize": "MUSIC_PLAY_BUTTON_SIZE_SMALL",
                    "rippleTarget": "MUSIC_PLAY_BUTTON_RIPPLE_TARGET_SELF",
                    "accessibilityPlayData": {
                      "accessibilityData": {
                        "label": "Play dark side of the 80s - dark wave, Dark 80s, new wave, neo-romantic"
                      }
                    },
                    "accessibilityPauseData": {
                      "accessibilityData": {
                        "label": "Pause dark side of the 80s - dark wave, Dark 80s, new wave, neo-romantic"
                      }
                    }
                  }
                },
                "contentPosition": "MUSIC_ITEM_THUMBNAIL_OVERLAY_CONTENT_POSITION_CENTERED",
                "displayStyle": "MUSIC_ITEM_THUMBNAIL_OVERLAY_DISPLAY_STYLE_PERSISTENT"
              }
            },
            "flexColumns": [
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "dark side of the 80s - dark wave, Dark 80s, new wave, neo-romantic"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              },
              {
                "musicResponsiveListItemFlexColumnRenderer": {
                  "text": {
                    "runs": [
                      {
                        "text": "Sarina M.",
                        "navigationEndpoint": {
                          "clickTrackingParams": "CAwQ1p8HGBMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                          "browseEndpoint": {
                            "browseId": "UCFCxzlnkSiyd4CDiQ5H-jqQ",
                            "browseEndpointContextSupportedConfigs": {
                              "browseEndpointContextMusicConfig": {
                                "pageType": "MUSIC_PAGE_TYPE_USER_CHANNEL"
                              }
                            }
                          }
                        }
                      },
                      {
                        "text": " • "
                      },
                      {
                        "text": "368 songs"
                      }
                    ]
                  },
                  "displayPriority": "MUSIC_RESPONSIVE_LIST_ITEM_COLUMN_DISPLAY_PRIORITY_HIGH"
                }
              }
            ],
            "menu": {
              "menuRenderer": {
                "items": [
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Shuffle play"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MUSIC_SHUFFLE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CBgQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "PLR0EAULbNDxZz9xxPotH8nWCKXVRb3VHz",
                          "params": "wAEB8gECKAE%3D"
                        }
                      },
                      "trackingParams": "CBgQmvMFGAAiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Start radio"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "MIX"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CBcQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "watchPlaylistEndpoint": {
                          "playlistId": "RDAMPLPLR0EAULbNDxZz9xxPotH8nWCKXVRb3VHz",
                          "params": "wAEB"
                        }
                      },
                      "trackingParams": "CBcQm_MFGAEiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Play next"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "QUEUE_PLAY_NEXT"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CBUQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLR0EAULbNDxZz9xxPotH8nWCKXVRb3VHz"
                          },
                          "queueInsertPosition": "INSERT_AFTER_CURRENT_VIDEO",
                          "commands": [
                            {
                              "clickTrackingParams": "CBUQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist will play next"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CBYQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CBUQvu4FGAIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuServiceItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to queue"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_REMOTE_QUEUE"
                      },
                      "serviceEndpoint": {
                        "clickTrackingParams": "CBMQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "queueAddEndpoint": {
                          "queueTarget": {
                            "playlistId": "PLR0EAULbNDxZz9xxPotH8nWCKXVRb3VHz"
                          },
                          "queueInsertPosition": "INSERT_AT_END",
                          "commands": [
                            {
                              "clickTrackingParams": "CBMQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                              "addToToastAction": {
                                "item": {
                                  "notificationTextRenderer": {
                                    "successResponseText": {
                                      "runs": [
                                        {
                                          "text": "Playlist added to queue"
                                        }
                                      ]
                                    },
                                    "trackingParams": "CBQQyscDIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "trackingParams": "CBMQ--8FGAMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "toggleMenuServiceItemRenderer": {
                      "defaultText": {
                        "runs": [
                          {
                            "text": "Add playlist to library"
                          }
                        ]
                      },
                      "defaultIcon": {
                        "iconType": "LIBRARY_ADD"
                      },
                      "defaultServiceEndpoint": {
                        "clickTrackingParams": "CBEQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Add favorites to your library after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CBIQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CBIQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "toggledText": {
                        "runs": [
                          {
                            "text": "Remove playlist from library"
                          }
                        ]
                      },
                      "toggledIcon": {
                        "iconType": "LIBRARY_SAVED"
                      },
                      "toggledServiceEndpoint": {
                        "clickTrackingParams": "CBEQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "likeEndpoint": {
                          "status": "INDIFFERENT",
                          "target": {
                            "playlistId": "PLR0EAULbNDxZz9xxPotH8nWCKXVRb3VHz"
                          }
                        }
                      },
                      "trackingParams": "CBEQhP8FGAQiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Add to playlist"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "ADD_TO_PLAYLIST"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CA8Qw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "modalEndpoint": {
                          "modal": {
                            "modalWithTitleAndButtonRenderer": {
                              "title": {
                                "runs": [
                                  {
                                    "text": "Save this for later"
                                  }
                                ]
                              },
                              "content": {
                                "runs": [
                                  {
                                    "text": "Make playlists and share them after signing in"
                                  }
                                ]
                              },
                              "button": {
                                "buttonRenderer": {
                                  "style": "STYLE_BLUE_TEXT",
                                  "isDisabled": false,
                                  "text": {
                                    "runs": [
                                      {
                                        "text": "Sign in"
                                      }
                                    ]
                                  },
                                  "navigationEndpoint": {
                                    "clickTrackingParams": "CBAQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                                    "signInEndpoint": {
                                      "hack": true
                                    }
                                  },
                                  "trackingParams": "CBAQ8FsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                                }
                              }
                            }
                          }
                        }
                      },
                      "trackingParams": "CA8Qw5QGGAUiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  },
                  {
                    "menuNavigationItemRenderer": {
                      "text": {
                        "runs": [
                          {
                            "text": "Share"
                          }
                        ]
                      },
                      "icon": {
                        "iconType": "SHARE"
                      },
                      "navigationEndpoint": {
                        "clickTrackingParams": "CA4QkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                        "shareEntityEndpoint": {
                          "serializedShareEntity": "EiJQTFIwRUFVTGJORHhaejl4eFBvdEg4bldDS1hWUmIzVkh6",
                          "sharePanelType": "SHARE_PANEL_TYPE_UNIFIED_SHARE_PANEL"
                        }
                      },
                      "trackingParams": "CA4QkfsFGAYiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
                    }
                  }
                ],
                "trackingParams": "CA0QpzsiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
                "accessibility": {
                  "accessibilityData": {
                    "label": "Action menu"
                  }
                }
              }
            },
            "flexColumnDisplayStyle": "MUSIC_RESPONSIVE_LIST_ITEM_FLEX_COLUMN_DISPLAY_STYLE_TWO_LINE_STACK",
            "navigationEndpoint": {
              "clickTrackingParams": "CAwQ1p8HGBMiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
              "browseEndpoint": {
                "browseId": "VLPLR0EAULbNDxZz9xxPotH8nWCKXVRb3VHz",
                "browseEndpointContextSupportedConfigs": {
                  "browseEndpointContextMusicConfig": {
                    "pageType": "MUSIC_PAGE_TYPE_PLAYLIST"
                  }
                }
              }
            },
            "itemHeight": "MUSIC_RESPONSIVE_LIST_ITEM_HEIGHT_TALL"
          }
        }
      ],
      "trackingParams": "CAoQ-V4iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
      "continuations": [
        {
          "nextContinuationData": {
            "continuation": "EoQIEgM4MHMa_AdFZ2VLQVFRb0FFQUJTQ2hxREJBT0VBb1FBeEFFRUFrUUJZSUJJbEJNVG5SV1NuYzJOR2wxZHpOTFVrdHNha2x1Tm1RMWVHb3hSRXBDUlVkaGIyLUNBU0pRVEZGcWJVaG9WM0F4ZFRCUGVrZFZXVGxvUzNWclJVbFliMUp5Y1RKNFN6aENnZ0VpVUV4dFdIaHhVMHBLY1MxNVdGRjBUblpPUTJWVmMxQkpjVzVsTURBeFpGaHZkb0lCSWxCTUxYSkdXWEp1ZWtsaGJGZHpXVFpuYTFRM1ZrUnZXWEZ3YXpoSFRESXhZM0NDQVNKUVRIZDJOV1UyV2tkUkxVRktjMmhWT0dSb1ZIZEJMWE5XYWsxTmFUQjBlVU5qZ2dFaVVFeHZNSE14UmtwR1NFTjFMWE5aTFZsMFNFOU5VM1ZCYURGWGRtRnVNbDlYUm9JQklsQk1TRlZTWkVrdFNsZ3RUemx2T1VwTlRUUm5OR2czWmpOcWVFWmhXVE5YUlVTQ0FTSlFUR05qTVc0Mll6ZEVUVTFqZGxOSGFUSlFRa3d4UVdkUFN6aHZZbXd5UWxaNmdnRWlVRXg2VGpaUU1ERnJkbUZ2TmxWeVJWTnFMV014TlVVMFRITmFaVTVWUTAweU1JSUJJbEJNTjNOeE1XdDROVkpuUzJoak1tNVBMVFZ6ZGxrNVpVaHZUVUk0UVhoM01VbUNBU0pRVEROQ1RGVkRRbkF4U0RKU01GOTRSa1prVmtGNE9WcG1VSFp5TTBaMGFtZFZnZ0VpVUV4QlVUZHVURk5GYm1oWFVuaGFYMEpPTmtJNE5WSkdPWEpvTkhWR2QzTndPSUlCSWxCTUxVbGlPVzlQVUZJM1QwZERaMGRXYkRsQ2JFMDRlRXRKUVUwMWFsRlhlWG1DQVNKUVRHdHhlak5UT0RSVWR5MVJWVTlMUms5Qk4zZHVYMlZOU0hkRk1VWnpjVGxoZ2dFaVVFeFNObWxNZVZCeWQySlpUekI0UjNwd1ZsVkVWRXB5UkRSc1ZITXpjamRzVllJQklsQk1UaTFrUjBNNFVVaFhNVGhmUWxkTk5tOUdRbnBUWkhWMVpERlRVa1JuU1ZhQ0FTSlFUSGhWVDNaNmFtZFBVa1JXTTJZNU1FdHRTVFZZVDNKM1pHRnZPSE50WjJKUWdnRWlVRXhyUmpoNk5GOXlSV2xJWnpoNWRuUlBjbTFRUVhBMWJWSnhPVWgwWm1SUmVvSUJJbEJNYjJwM2FWSTNOVmhYUXpSa1RtNVBlalJuUlVnMFVuTldSWFJxVTNCUmNsZUNBU0pRVEZJd1JVRlZUR0pPUkhoYWVqbDRlRkJ2ZEVnNGJsZERTMWhXVW1JelZraDYY8erQLg%3D%3D",
            "clickTrackingParams": "CAsQybcCIhMIv_DL-dSX_gIV5tcRCB3yQQWT"
          }
        }
      ],
      "shelfDivider": {
        "musicShelfDividerRenderer": {
          "hidden": true
        }
      },
      "autoReloadWhenEmpty": false
    }
  },
  "trackingParams": "CAAQvGkiEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
  "header": {
    "musicHeaderRenderer": {
      "header": {
        "chipCloudRenderer": {
          "chips": [
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_SECONDARY"
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAkQ_V0YACITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                  "searchEndpoint": {
                    "query": "80s"
                  }
                },
                "trackingParams": "CAkQ_V0YACITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                "icon": {
                  "iconType": "CLOSE"
                },
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Clear filters"
                  }
                },
                "isSelected": false
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Featured playlists"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAgQ_V0YASITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                  "searchEndpoint": {
                    "query": "80s",
                    "params": "EgeKAQQoADgBagwQDhAKEAMQBBAJEAU%3D"
                  }
                },
                "trackingParams": "CAgQ_V0YASITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show featured playlist results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Featured playlists"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_PRIMARY"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Community playlists"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAcQ_V0YAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                  "searchEndpoint": {
                    "query": "80s",
                    "params": "EgeKAQQoAEABagwQDhAKEAMQBBAJEAU%3D"
                  }
                },
                "trackingParams": "CAcQ_V0YAiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show community playlist results selected"
                  }
                },
                "isSelected": true,
                "uniqueId": "Community playlists"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Songs"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAYQ_V0YAyITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                  "searchEndpoint": {
                    "query": "80s",
                    "params": "EgWKAQIIAWoMEA4QChADEAQQCRAF"
                  }
                },
                "trackingParams": "CAYQ_V0YAyITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show song results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Songs"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Videos"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAUQ_V0YBCITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                  "searchEndpoint": {
                    "query": "80s",
                    "params": "EgWKAQIQAWoMEA4QChADEAQQCRAF"
                  }
                },
                "trackingParams": "CAUQ_V0YBCITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show video results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Videos"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Albums"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAQQ_V0YBSITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                  "searchEndpoint": {
                    "query": "80s",
                    "params": "EgWKAQIYAWoMEA4QChADEAQQCRAF"
                  }
                },
                "trackingParams": "CAQQ_V0YBSITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show album results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Albums"
              }
            },
            {
              "chipCloudChipRenderer": {
                "style": {
                  "styleType": "STYLE_DEFAULT"
                },
                "text": {
                  "runs": [
                    {
                      "text": "Artists"
                    }
                  ]
                },
                "navigationEndpoint": {
                  "clickTrackingParams": "CAMQ_V0YBiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                  "searchEndpoint": {
                    "query": "80s",
                    "params": "EgWKAQIgAWoMEA4QChADEAQQCRAF"
                  }
                },
                "trackingParams": "CAMQ_V0YBiITCL_wy_nUl_4CFebXEQgd8kEFkw==",
                "accessibilityData": {
                  "accessibilityData": {
                    "label": "Show artist results"
                  }
                },
                "isSelected": false,
                "uniqueId": "Artists"
              }
            }
          ],
          "collapsedRowCount": 1,
          "trackingParams": "CAIQ_F0iEwi_8Mv51Jf-AhXm1xEIHfJBBZM=",
          "horizontalScrollable": true
        }
      },
      "trackingParams": "CAEQ4HIiEwi_8Mv51Jf-AhXm1xEIHfJBBZM="
    }
  }
}

  recorded_at: Fri, 07 Apr 2023 11:27:25 GMT
recorded_with: VCR 6.1.0

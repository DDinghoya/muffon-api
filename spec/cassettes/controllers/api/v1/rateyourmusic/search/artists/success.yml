---
http_interactions:
- request:
    method: get
    uri: https://rateyourmusic.com/search?page=1&searchterm=a&searchtype=a
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.0.1p64
      Cookie:
      - sec_bs=<RATEYOURMUSIC_SEC_BS>; sec_id=<RATEYOURMUSIC_SEC_ID>; sec_ts=<RATEYOURMUSIC_SEC_TS>;
        ulv=fB/B8JcwZPMGZXIXFDHsoktqP8HROq4c6gMvUJe8zG0E3RnjFP8T/NMdi23miMPH1620222166070929
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - rateyourmusic.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Mon, 14 Jun 2021 05:11:44 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Keep-Alive:
      - timeout=60
      Set-Cookie:
      - is_logged_in=1; Expires=Tue, 01-Jan-2030 01:00:00 GMT; Path=/; HttpOnly;
      - sec_bs=776ec28e90aec368fc226f4660539dd5; Expires=Mon, 14-Jun-2021 12:34:04
        GMT; Path=/; secure; HttpOnly;
      - sec_id=91fd498769babe6af4fca87e9e64752e; Expires=Mon, 14-Jun-2021 12:34:04
        GMT; Path=/; secure; HttpOnly;
      - sec_ts=1623672544; Expires=Mon, 14-Jun-2021 12:34:04 GMT; Path=/; secure;
        HttpOnly;
      Mime-Version:
      - '1.0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 14 Jun 2021 12:09:04 GMT
recorded_with: VCR 6.0.0

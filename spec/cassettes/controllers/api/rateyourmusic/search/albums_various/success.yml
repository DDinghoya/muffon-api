---
http_interactions:
- request:
    method: get
    uri: https://rateyourmusic.com/search?page=1&searchterm=a&searchtype=y
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.0.1p64
      Cookie:
      - sec_bs=<RATEYOURMUSIC_SEC_BS>; sec_id=<RATEYOURMUSIC_SEC_ID>; sec_ts=<RATEYOURMUSIC_SEC_TS>;
        ulv=fB/B8JcwZPMGZXIXFDHsoktqP8HROq4c6gMvUJe8zG0E3RnjFP8T/NMdi23miMPH1620222166070929
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - rateyourmusic.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Mon, 14 Jun 2021 05:11:56 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Keep-Alive:
      - timeout=60
      Set-Cookie:
      - is_logged_in=1; Expires=Tue, 01-Jan-2030 01:00:00 GMT; Path=/; HttpOnly;
      - sec_bs=5957130398fcc450d65128245f401362; Expires=Mon, 14-Jun-2021 12:34:15
        GMT; Path=/; secure; HttpOnly;
      - sec_id=4194fed423d0c2c20a3fac2f8a3f1274; Expires=Mon, 14-Jun-2021 12:34:15
        GMT; Path=/; secure; HttpOnly;
      - sec_ts=1623672555; Expires=Mon, 14-Jun-2021 12:34:15 GMT; Path=/; secure;
        HttpOnly;
      Mime-Version:
      - '1.0'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIiBpZD0icGFnZV9zZWFyY2giIGNsYXNzPSJyeW0gcGFnZV9zZWFyY2ggc2NvcGVfbXVzaWMiPgo8aGVhZD4KCiAgICAgIAo8bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Ii8vZS5zbm1jLmlvIiAvPgo8bGluayByZWw9InByZWNvbm5lY3QiIGhyZWY9Ii8vd3d3Lmdvb2dsZS1hbmFseXRpY3MuY29tIiAvPgo8bGluayByZWw9ImRucy1wcmVmZXRjaCIgaHJlZj0iLy9pYi5hZG54cy5jb20iIC8+CjxsaW5rIHJlbD0iZG5zLXByZWZldGNoIiBocmVmPSIvL3NlY3VyZXB1YmFkcy5nLmRvdWJsZWNsaWNrLm5ldCIgLz4KPGxpbmsgcmVsPSJkbnMtcHJlZmV0Y2giIGhyZWY9Ii8vdHBjLmdvb2dsZXN5bmRpY2F0aW9uLmNvbSIgLz4KPGxpbmsgcmVsPSJkbnMtcHJlZmV0Y2giIGhyZWY9Ii8vcGFnZWFkMi5nb29nbGVzeW5kaWNhdGlvbi5jb20iIC8+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wLCB1c2VyLXNjYWxhYmxlPXllcyIgLz4KPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiIC8+CjxsaW5rIHJlbD0iaWNvbiIgaHJlZj0iLy9lLnNubWMuaW8vMi41L2ltZy9zb25lbWljLnBuZyIgdHlwZT0iaW1hZ2UvcG5nIiAvPgo8dGl0bGU+U2VhcmNoIC0gUmF0ZSBZb3VyIE11c2ljPC90aXRsZT4KICAgICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlJhdGUgWW91ciBNdXNpYyBpcyBhbiBvbmxpbmUgY29tbXVuaXR5IG9mIHBlb3BsZSB3aG8gbG92ZSBtdXNpYy4gQ2F0YWxvZywgcmF0ZSwgdGFnLCBhbmQgcmV2aWV3IHlvdXIgbXVzaWMuIExpc3QgYW5kIHJldmlldyB0aGUgY29uY2VydHMgeW91J3ZlIGF0dGVuZGVkLCBhbmQgdHJhY2sgdXBjb21pbmcgc2hvd3MuICAgV2hlbiB5b3UgcmF0ZSB5b3VyIG11c2ljLCB0aGUgc2l0ZSdzIG11c2ljL3NvY2lhbCByZWNvbW1lbmRlciBjYW4gcmVjb21tZW5kIHNpbWlsYXIgbXVzaWMgYW5kIHVzZXJzIHdpdGggc2ltaWxhciBtdXNpYyB0YXN0ZS4iIC8+CiAgICAgIDxtZXRhIG5hbWU9ImtleXdvcmRzIiBjb250ZW50PSJyYXRlIHlvdXIgbXVzaWMsIHNvbmVtaWMsIHJhdGUgbXVzaWMsIHJhdGUgYWxidW1zLCBtdXNpYyBjYXRhbG9nLCBtdXNpYyBjYXRhbG9ndWUsIHNvY2lhbCBzb2Z0d2FyZSwgYWxidW0gcmV2aWV3cywgbXVzaWMgbGlzdHMsIGNvbW11bml0eSwgbXVzaWMgcmVjb21tZW5kYXRpb25zLCBjb25jZXJ0IGxpc3RpbmdzLCByZWNvcmQgbGFiZWxzLCB2ZW51ZXMsIHNob3dzIiAvPgogICAgICAgICA8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9Im1heC1pbWFnZS1wcmV2aWV3OmxhcmdlIiAvPgogICAgICA8c2NyaXB0PiB3aW5kb3cucnltX2Rpc3RfdmVyc2lvbiA9ICc3MGRlNjdlZi1kMzUwLTQyZDAtOTg1YS00MWVlZjRhMWNjZDgnOzwvc2NyaXB0PiAKICAgICAgPHNjcmlwdD4KICAgICAgICAgcnltaW5pdCA9IHdpbmRvdy5yeW1pbml0IHx8IFtdOwoKICAgICAgICAgZnVuY3Rpb24gcnltUSggYSApIHsKICAgICAgICAgICAgaWYgKCAhcnltaW5pdCApIHsKICAgICAgICAgICAgICAgYSgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICByeW1pbml0LnB1c2goYSk7CiAgICAgICAgICAgIH0KICAgICAgICAgfQogICAgICAgIGlmICggJ29udG91Y2hzdGFydCcgaW4gd2luZG93ICkgewogICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZSArPSAnIHRvdWNoJzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZSArPSAnIG5vVG91Y2gnOwogICAgICAgIH0KCiAgICAgIDwvc2NyaXB0PgogICAgICA8c3R5bGUgaWQ9ImJhc2UiPiosKjo6YmVmb3JlLCo6OmFmdGVye21hcmdpbjowO3BhZGRpbmc6MDtib3gtc2l6aW5nOmJvcmRlci1ib3h9aHRtbHtmb250LXNpemU6NjIuNSV9Ym9keXtmb250LWZhbWlseToiUHJveGltYU5vdmEiLEhlbHZldGljYSxWZXJkYW5hLEFyaWFsLFNhbnMtU2VyaWY7Zm9udC1zaXplOjEycHh9aDEsaDIsaDMsaDQsaDV7Zm9udC13ZWlnaHQ6bm9ybWFsO21hcmdpbjowO21hcmdpbi1ib3R0b206LjI1ZW19aDF7Zm9udC1zaXplOjIuNWVtO2ZvbnQtd2VpZ2h0OmJvbGR9aDJ7Zm9udC1zaXplOjIuMmVtfWgze2ZvbnQtc2l6ZToxLjllbX1oNHtmb250LXNpemU6MS42ZW19aDV7Zm9udC1zaXplOjEuNWVtfUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo0OGVtKXtoMXtmb250LXNpemU6MmVtO2ZvbnQtd2VpZ2h0OmJvbGR9aDJ7Zm9udC1zaXplOjEuOWVtfWgze2ZvbnQtc2l6ZToxLjhlbX1oNHtmb250LXNpemU6MS43ZW19aDV7Zm9udC1zaXplOjEuNWVtfX1we2xpbmUtaGVpZ2h0OjEuNmVtO21hcmdpbi1ib3R0b206MWVtfWJsb2NrcXVvdGV7bWFyZ2luOjAgMS41ZW19dGFibGV7d2lkdGg6MTAwJTtib3JkZXItY29sbGFwc2U6Y29sbGFwc2V9dGR7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO3BhZGRpbmc6NXB4fXRye2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZX0uYW5jaG9ye3Njcm9sbC1tYXJnaW4tdG9wOjNlbX1hLmFydGlzdCxhLmdhbWUsYS53b3JrLm1ham9yLGEudXNlcixhLmZpbG0sYS5maWxtX2FydGlzdHtmb250LXdlaWdodDpib2xkfWltZy5sYXp5bG9hZDpub3QoW3NyY10pe3Zpc2liaWxpdHk6aGlkZGVufWltZy5jb3Zlcnt3aWR0aDoyLjhlbTtoZWlnaHQ6Mi44ZW07ZmxvYXQ6bGVmdDtvYmplY3QtZml0OmNvdmVyO2JvcmRlci1yYWRpdXM6NHB4O21hcmdpbi1yaWdodDouNzVlbX1pbWcuc2l6ZV8ye3dpZHRoOjJlbTtoZWlnaHQ6MmVtfWltZy5pbWFnZV9yZWxlYXNle3dpZHRoOjIuOGVtO2hlaWdodDoyLjhlbTtmbG9hdDpsZWZ0O29iamVjdC1maXQ6Y292ZXI7Ym9yZGVyLXJhZGl1czo0cHg7bWFyZ2luLXJpZ2h0Oi43NWVtO292ZXJmbG93OmhpZGRlbn1pbnB1dCxzZWxlY3QsdGV4dGFyZWEsLmlucHV0X2F1dG9fcmVzaXplX2ZyYW1lLC5pbnB1dF9hdXRvX3Jlc2l6ZV9mcmFtZTo6YWZ0ZXJ7Zm9udC1zaXplOjE2cHg7Zm9udC13ZWlnaHQ6bm9ybWFsO3BhZGRpbmc6LjE1ZW07Ym9yZGVyLXJhZGl1czozcHg7YmFja2dyb3VuZDp2YXIoLS1tb25vLWYpO2NvbG9yOnZhcigtLW1vbm8tMyk7Ym9yZGVyOjFweCBzb2xpZCB2YXIoLS1tb25vLWEpO2ZvbnQtZmFtaWx5OiJQcm94aW1hIE5vdmEiLFZlcmRhbmEsQXJpYWwsc2Fucy1zZXJpZn10ZXh0YXJlYXt3aWR0aDoxMDAlfWlucHV0OmRpc2FibGVkLHNlbGVjdDpkaXNhYmxlZCx0ZXh0YXJlYTpkaXNhYmxlZHtjb2xvcjp2YXIoLS1tb25vLTgpO2JhY2tncm91bmQ6dmFyKC0tbW9uby1lKX1zZWxlY3R7bWluLXdpZHRoOjhlbX1sYWJlbHtmb250LXdlaWdodDpib2xkfS5vdmVybGF5X2ludmlzaWJsZXtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjEpO3otaW5kZXg6NDU7cG9zaXRpb246Zml4ZWQ7dG9wOjA7bGVmdDowO3JpZ2h0OjA7Ym90dG9tOjA7ZGlzcGxheTpub25lfS5jb250ZW50X3dyYXBwZXJfb3V0ZXJ7eGJhY2tncm91bmQ6dmFyKC0tbW9uby1mMik7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZTpjb3ZlciFpbXBvcnRhbnQ7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgY2VudGVyIWltcG9ydGFudH0ucHJlY29udGVudHstd2Via2l0LXRyYW5zZm9ybTpzY2FsZTNkKDEsMSwxKTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTEwMHZoO2xlZnQ6MDtoZWlnaHQ6MTAwdmg7YmFja2dyb3VuZC1zaXplOmNvdmVyIWltcG9ydGFudDt3aWR0aDoxMDAlO3otaW5kZXg6LTF9I2NvbnRlbnRfY292ZXJ7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDo3MDAwO2JhY2tncm91bmQ6cmdiYSgwLDAsMTUsLjYpO2Rpc3BsYXk6bm9uZX0jY29udGVudF90b3RhbF9jb3Zlcntwb3NpdGlvbjpmaXhlZDogdG9wOjA7bGVmdDowO3JpZ2h0OjA7Ym90dG9tOjA7ei1pbmRleDo1MDtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjEpfWJvZHkuaGFzX2JhY2tncm91bmRfaW1hZ2UgI2NvbnRlbnRfd3JhcHBlcntiYWNrZ3JvdW5kOnJnYmEoNDksNDksNDksLjIpO21hcmdpbjowIGF1dG87bWF4LXdpZHRoOjEzMi41ZW07cGFkZGluZy1sZWZ0OjJweDtwYWRkaW5nLXJpZ2h0OjJweH0jY29udGVudF9jb3Zlcnt6LWluZGV4OjkwMH0jY29udGVudHtwYWRkaW5nOjNlbTtmb250LXNpemU6MS4yNWVtO2xpbmUtaGVpZ2h0OjEuMztiYWNrZ3JvdW5kOnZhcigtLW1vbm8tZik7bWluLWhlaWdodDpjYWxjKDEwMHZoKTttYXgtd2lkdGg6MTA2ZW07bWFyZ2luOjAgYXV0bzttYXJnaW4tdG9wOjRyZW19aHRtbC5zaXplX21vZGVfc21hbGxlciAjY29udGVudHtmb250LXNpemU6MS4xNWVtO2xpbmUtaGVpZ2h0OjEuMjU7bWF4LXdpZHRoOjExNWVtfUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo0OGVtKXsjY29udGVudHttYXJnaW4tdG9wOjA7cGFkZGluZzouNWVtfX0uc21hbGxncmF5LGEuc21hbGxncmF5e2ZvbnQtc2l6ZTouOWVtfS5lcnJvcntwYWRkaW5nOi41ZW0gMS41ZW07bWFyZ2luLWJvdHRvbToxZW19LmNvZGV7Zm9udC1mYW1pbHk6IkNvdXJpZXIgbmV3Iixtb25vc3BhY2U7Ym9yZGVyLWxlZnQ6NXB4IHNvbGlkO3BhZGRpbmc6MWVtfS5ub3Rle2JvcmRlcjoxcHggc29saWQ7cGFkZGluZzoxZW0gMmVtfS53YXJuaW5ne3BhZGRpbmc6MWVtIDJlbTttYXJnaW4tYm90dG9tOjFlbX0ud2FybmluZyBwe21hcmdpbjowfS5ub3RpY2V7cGFkZGluZzoxZW0gMmVtO2NvbG9yOnZhcigtLW1vbm8tOCk7Zm9udC1zaXplOi45ZW07bWFyZ2luLWJvdHRvbToxZW19Lm5vdGljZSBwe21hcmdpbjowfS5jbGVhciwuY2xlYXJmaXh7Y2xlYXI6Ym90aH0uY29tbWFfc2VwYXJhdGVkOmFmdGVye2NvbnRlbnQ6IiwgIn0uY29tbWFfc2VwYXJhdGVkOmxhc3QtY2hpbGQ6YWZ0ZXJ7Y29udGVudDoiIn0uc2hvdy1mb3Itc21hbGwtdGFibGUtcm93e2Rpc3BsYXk6bm9uZX0uc2hvdy1mb3Itc21hbGwtaW5saW5le2Rpc3BsYXk6bm9uZX0uaGlkZS1mb3Itc21hbGwtYmxvY2t7ZGlzcGxheTpub25lfS5oaWRlLWZvci1zbWFsbC1pbmxpbmV7ZGlzcGxheTpub25lfS5zaG93LWZvci1zbWFsbHtkaXNwbGF5Om5vbmV9LmhpZGUtZm9yLXNtYWxse2Rpc3BsYXk6bm9uZX1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4LjA2M2VtKXsuaGlkZS1mb3Itc21hbGwtYmxvY2t7ZGlzcGxheTpibG9ja30uaGlkZS1mb3Itc21hbGx7ZGlzcGxheTppbmhlcml0fS5oaWRlLWZvci1zbWFsbC1pbmxpbmV7ZGlzcGxheTppbmxpbmV9dHIuaGlkZS1mb3Itc21hbGx7ZGlzcGxheTp0YWJsZS1yb3d9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDhlbSl7LnNob3ctZm9yLXNtYWxse2Rpc3BsYXk6aW5oZXJpdCFpbXBvcnRhbnR9LnNob3ctZm9yLXNtYWxsLWlubGluZXtkaXNwbGF5OmlubGluZSFpbXBvcnRhbnR9LnNob3ctZm9yLXNtYWxsLXRhYmxlLXJvd3tkaXNwbGF5OnRhYmxlLXJvd319CkBmb250LWZhY2V7Zm9udC1mYW1pbHk6IlByb3hpbWFOb3ZhIjtzcmM6dXJsKGh0dHBzOi8vZS5zbm1jLmlvLzMuMC9mb250L1Byb3hpbWEtTm92YS9SZWd1bGFyLndvZmYyP2QpIGZvcm1hdCgid29mZjIiKSx1cmwoaHR0cHM6Ly9lLnNubWMuaW8vMy4wL2ZvbnQvUHJveGltYS1Ob3ZhL1JlZ3VsYXIud29mZj9kKSBmb3JtYXQoIndvZmYiKTtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC1kaXNwbGF5OnN3YXB9QGZvbnQtZmFjZXtmb250LWZhbWlseToiUHJveGltYU5vdmEiO3NyYzp1cmwoaHR0cHM6Ly9lLnNubWMuaW8vMy4wL2ZvbnQvUHJveGltYS1Ob3ZhL0JvbGQud29mZjI/ZCkgZm9ybWF0KCJ3b2ZmMiIpLHVybChodHRwczovL2Uuc25tYy5pby8zLjAvZm9udC9Qcm94aW1hLU5vdmEvQm9sZC53b2ZmP2QpIGZvcm1hdCgid29mZiIpO2ZvbnQtd2VpZ2h0OjcwMDtmb250LWRpc3BsYXk6c3dhcDtmb250LXN0eWxlOm5vcm1hbH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OiJGb250IEF3ZXNvbWUgNSBGcmVlIjtmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDo0MDA7Zm9udC1kaXNwbGF5OnN3YXA7c3JjOnVybChodHRwczovL2Uuc25tYy5pby8zLjAvZm9udC9mYS0yMDIxLTAzLTAyL2ZhLXJlZ3VsYXItNDAwLndvZmYyP2IpIGZvcm1hdCgid29mZjIiKSx1cmwoaHR0cHM6Ly9lLnNubWMuaW8vMy4wL2ZvbnQvZmEtMjAyMS0wMy0wMi9mYS1yZWd1bGFyLTQwMC53b2ZmP2IpIGZvcm1hdCgid29mZiIpfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6IkZvbnQgQXdlc29tZSA1IEJyYW5kcyI7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6NDAwO2ZvbnQtZGlzcGxheTpzd2FwO3NyYzp1cmwoaHR0cHM6Ly9lLnNubWMuaW8vMy4wL2ZvbnQvZmEtMjAyMS0wMy0wMi9mYS1icmFuZHMtNDAwLndvZmYyP2IpIGZvcm1hdCgid29mZjIiKSx1cmwoaHR0cHM6Ly9lLnNubWMuaW8vMy4wL2ZvbnQvZmEtMjAyMS0wMy0wMi9mYS1icmFuZHMtNDAwLndvZmY/YikgZm9ybWF0KCJ3b2ZmIil9QGZvbnQtZmFjZXtmb250LWZhbWlseToiRm9udCBBd2Vzb21lIDUgRnJlZSI7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6OTAwO2ZvbnQtZGlzcGxheTpzd2FwO3NyYzp1cmwoaHR0cHM6Ly9lLnNubWMuaW8vMy4wL2ZvbnQvZmEtMjAyMS0wMy0wMi9mYS1zb2xpZC05MDAud29mZjI/YikgZm9ybWF0KCJ3b2ZmMiIpLHVybChodHRwczovL2Uuc25tYy5pby8zLjAvZm9udC9mYS0yMDIxLTAzLTAyL2ZhLXNvbGlkLTkwMC53b2ZmP2IpIGZvcm1hdCgid29mZiIpfQo8L3N0eWxlPjxzY3JpcHQgaWQ9ImJhc2Vfc2NyaXB0Ij53aW5kb3cucnltX2Rpc3QgPSAnLy9lLnNubWMuaW8nOwp2YXIgbj0oZSx0LHMpPT5uZXcgUHJvbWlzZSgoZCxyKT0+e3ZhciBsPW89Pnt0cnl7YShzLm5leHQobykpfWNhdGNoKGkpe3IoaSl9fSxjPW89Pnt0cnl7YShzLnRocm93KG8pKX1jYXRjaChpKXtyKGkpfX0sYT1vPT5vLmRvbmU/ZChvLnZhbHVlKTpQcm9taXNlLnJlc29sdmUoby52YWx1ZSkudGhlbihsLGMpO2EoKHM9cy5hcHBseShlLHQpKS5uZXh0KCkpfSk7d2luZG93LlJZTXRlbXBsYXRlPXdpbmRvdy5SWU10ZW1wbGF0ZXx8e307ZnVuY3Rpb24gZW5zdXJlVGVtcGxhdGVMb2FkZWQoZSl7cmV0dXJuIG4odGhpcyxudWxsLGZ1bmN0aW9uKigpe2lmKGNvbnNvbGUubG9nKCJlbnN1cmVUZW1wbGF0ZUxvYWRlZDogIitlKSxSWU10ZW1wbGF0ZVtlXSlyZXR1cm47bGV0IHQ9W107cmV0dXJuIHlpZWxkIGltcG9ydCgod2luZG93LnJ5bV9kaXN0fHwiLy9lLnNubWMuaW8iKSsiL2Rpc3QvdGVtcGxhdGUvIitlKyIuanM/dj0iK3dpbmRvdy5yeW1fZGlzdF92ZXJzaW9uKS50aGVuKGQ9Pntjb25zb2xlLmxvZygiZGVwZW5kZW5jaWVzOiAiK2QuY29tcGlsZWRUZW1wbGF0ZS5kZXBlbmRlbmNpZXMpLHQ9ZC5jb21waWxlZFRlbXBsYXRlLmRlcGVuZGVuY2llcy5tYXAocj0+ZW5zdXJlVGVtcGxhdGVMb2FkZWQocikpLHdpbmRvdy5SWU10ZW1wbGF0ZVtlXT1kLmNvbXBpbGVkVGVtcGxhdGUudGVtcGxhdGV9KSxjb25zb2xlLmxvZygicHJvbWlzZSBhcnJheSBoYXMgIit0Lmxlbmd0aCksUHJvbWlzZS5hbGwodCl9KX1mdW5jdGlvbiByZW5kZXJUZW1wbGF0ZShlLHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBuKHRoaXMsbnVsbCxmdW5jdGlvbiooKXtyZXR1cm4gd2luZG93LlJZTXRlbXBsYXRlPXdpbmRvdy5SWU10ZW1wbGF0ZXx8e30sUllNdGVtcGxhdGVbZV18fChjb25zb2xlLmxvZygiY2FsbGluZyBlbnN1cmVUZW1wbGF0ZUxvYWRlZDogIitlKSx5aWVsZCBlbnN1cmVUZW1wbGF0ZUxvYWRlZChlKSxjb25zb2xlLmxvZygiY2FsbGluZyByZW5kZXI6ICIrZSkpLFJZTXRlbXBsYXRlW2VdLnJlbmRlcih0LFJZTXRlbXBsYXRlKX0pfSgpfWZ1bmN0aW9uIGFwcGx5TGF6eUxvYWRCZWhhdmlvcihlLHQpe2UuY2xhc3NMaXN0LnJlbW92ZSgibGF6eWxvYWQiKSxlLmNsYXNzTGlzdC5hZGQoImxhenlsb2FkLWNvbXBsZXRlIiksZS5kYXRhc2V0LnNyY3NldCYmKGUuc3Jjc2V0PWUuZGF0YXNldC5zcmNzZXQsZGVsZXRlIGUuZGF0YXNldC5zcmNzZXQpLHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvPjEmJmUuZGF0YXNldC5ia2cyeD8oZS5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2U9YHVybCgnJHtlLmRhdGFzZXQuYmtnMnh9JylgLGRlbGV0ZSBlLmRhdGFzZXQuYmtnMngsZGVsZXRlIGUuZGF0YXNldC5ia2cpOmUuZGF0YXNldC5ia2cmJihlLnN0eWxlLmJhY2tncm91bmRJbWFnZT1gdXJsKCcke2UuZGF0YXNldC5ia2d9JylgLGRlbGV0ZSBlLmRhdGFzZXQuYmtnKSxlLmRhdGFzZXQuc3JjJiYoZS5zcmM9ZS5kYXRhc2V0LnNyYyxkZWxldGUgZS5kYXRhc2V0LnNyYyksZS5kYXRhc2V0LnN1Z2dlc3Rpb25zJiYoY29uc29sZS5sb2coImxvYWRpbmcgc3VnZ2VzdGlvbnMiKSxSWU1zdWdnZXN0aW9ucy5sb2FkKCQoZSkpKSwhdCYmZS5kYXRhc2V0LmFkY29kZSYmYWRWaXNpYmlsaXR5Q2hhbmdlZChlLmRhdGFzZXQuYWRjb2RlKX13aW5kb3cucmVmcmVzaExhenlMb2FkTGlzdD1mdW5jdGlvbigpe2NvbnN0IGU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLmxhenlsb2FkIik7Zm9yKGxldCBzPTA7czxlLmxlbmd0aDtzKyspdHlwZW9mIHdpbmRvdy5sYXp5bG9hZE9ic2VydmVyIT0idW5kZWZpbmVkIj93aW5kb3cubGF6eWxvYWRPYnNlcnZlci5vYnNlcnZlKGVbc10pOmFwcGx5TGF6eUxvYWRCZWhhdmlvcihlW3NdLCEwKTtjb25zdCB0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5sYXp5bG9hZC1hZCIpO2ZvcihsZXQgcz0wO3M8dC5sZW5ndGg7cysrKXR5cGVvZiB3aW5kb3cubGF6eWxvYWRPYnNlcnZlckFkcyE9InVuZGVmaW5lZCI/d2luZG93Lmxhenlsb2FkT2JzZXJ2ZXJBZHMub2JzZXJ2ZSh0W3NdKTphcHBseUxhenlMb2FkQmVoYXZpb3IodFtzXSwhMCl9LHJ5bVEoZnVuY3Rpb24oKXt0eXBlb2YgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIhPSJ1bmRlZmluZWQiJiYod2luZG93Lmxhenlsb2FkT2JzZXJ2ZXI9bmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGU9Pntmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKylpZihlW3RdLmlzSW50ZXJzZWN0aW5nKXtjb25zdCBzPWVbdF0udGFyZ2V0O2xhenlsb2FkT2JzZXJ2ZXIudW5vYnNlcnZlKHMpLGFwcGx5TGF6eUxvYWRCZWhhdmlvcihzLCExKX19LHtyb290TWFyZ2luOiIzMDBweCA1MHB4IDMwMHB4IDUwcHgifSksd2luZG93Lmxhenlsb2FkT2JzZXJ2ZXJBZHM9bmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGU9Pntmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKylpZihlW3RdLmlzSW50ZXJzZWN0aW5nKXtjb25zdCBzPWVbdF0udGFyZ2V0O2xhenlsb2FkT2JzZXJ2ZXJBZHMudW5vYnNlcnZlKHMpLGFwcGx5TGF6eUxvYWRCZWhhdmlvcihzLCExKX19LHtyb290TWFyZ2luOiIxMHB4IDBweCAxMHB4IDBweCJ9KSl9KSxyeW1RKGZ1bmN0aW9uKCl7cmVmcmVzaExhenlMb2FkTGlzdCgpfSk7Cjwvc2NyaXB0PjxsaW5rIGlkPSJjc3MtYnVuZGxlIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii8vZS5zbm1jLmlvL2Rpc3QvY3NzL2J1bmRsZS5jc3M/dj03MGRlNjdlZi1kMzUwLTQyZDAtOTg1YS00MWVlZjRhMWNjZDgiIHR5cGU9InRleHQvY3NzIiAvPjxsaW5rIGlkPSJjc3MtcGFnZS1zZWFyY2giIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLy9lLnNubWMuaW8vZGlzdC9jc3MvcGFnZS9zZWFyY2guY3NzP3Y9NzBkZTY3ZWYtZDM1MC00MmQwLTk4NWEtNDFlZWY0YTFjY2Q4IiB0eXBlPSJ0ZXh0L2NzcyIgLz4KCiAgICAgICAgICAgICAgIDxzdHlsZT4KCiAgICAgICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2xldHRlcl9kYXRlIHsKICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpyaWdodDsKICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbToxZW07CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2xldHRlciB7CiAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgdmFyKC0tbW9uby1mKSwgdmFyKC0tbW9uby1mOCkpOwogICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OjFweCAxcHggNXB4IHJnYmEoMCwwLDAsMC4yKTsKICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzoyZW0gNGVtOwogICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MS4xZW07CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2xldHRlcl9idXR0b25fc3VidGV4dCB7CiAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTowLjhlbTsKICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6bm9ybWFsOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAudWlfZnVuZHJhaXNlcl9sZXR0ZXJfYnV0dG9uIHsKICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjMuNWVtOwogICAgICAgICAgICAgICAgICAgICB3aWR0aDo0NSU7CiAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuMjsKICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OjIlOwogICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOjFlbTsKICAgICAgICAgICAgICAgICAgICAgZmxvYXQ6bGVmdDsKICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpmbGV4OwogICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47CiAgICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjsKICAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgLnVpX2Z1bmRyYWlzZXJfbGV0dGVyX2J1dHRvbl9zdWJzY3JpYmUsIC51aV9mdW5kcmFpc2VyX2xldHRlcl9idXR0b25fc3Vic2NyaWJlOmhvdmVyIHsKICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdmFyKC0tZ2VuLWJsdWUtZGFyayk7CiAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1tb25vLWFicy1mKTsKICAgICAgICAgICAgICAgICAgfQoKCiAgICAgICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2xldHRlcl9idXR0b25fZG9uYXRlIHsKCiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2Jhcl9vdXRsaW5lIHsKICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOjFweCBzb2xpZCB2YXIoLS1tb25vLWQ4KTsKICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjFlbTsKICAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJTsKICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czoxZW07CiAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjsKICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDp2YXIoLS1tb25vLWY4KTsKICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2Jhcl9mcmFtZSB7CiAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6NiU7CiAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206MmVtOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAudWlfZnVuZHJhaXNlcl9iYXJfaW5uZXIgewogICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTsKICAgICAgICAgICAgICAgICAgICAgdG9wOjA7CiAgICAgICAgICAgICAgICAgICAgIGxlZnQ6MDsKICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjFlbTsKICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDpjcmltc29uOwoKICAgICAgICAgICAgICAgICAgICAgd2lkdGg6NTAlCiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2Jhcl9sZWdlbmQgewogICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDAlOwogICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6M2VtOwogICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOjAuMmVtOwogICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MC44ZW07CiAgICAgICAgICAgICAgICAgICAgIGNvbG9yOnZhcigtLW1vbm8tNSk7CiAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAudWlfZnVuZHJhaXNlcl9iYXJfbGVnZW5kX2l0ZW0gewogICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTsKICAgICAgICAgICAgICAgICAgICAgdG9wOjA7CiAgICAgICAgICAgICAgICAgICAgIHotaW5kZXg6MTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgLnVpX2Z1bmRyYWlzZXJfYmFyX2xlZ2VuZF9zdGFydCB7CiAgICAgICAgICAgICAgICAgICAgIGxlZnQ6MDsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgLnVpX2Z1bmRyYWlzZXJfYmFyX2xlZ2VuZF9mdW5kcmFpc2VyX2dvYWwgewogICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6MzcuMzIlOwogICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpyaWdodDsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgLnVpX2Z1bmRyYWlzZXJfYmFyX2xlZ2VuZF9sb25ndGVybV9nb2FsIHsKICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6MDsKICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpyaWdodDsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgLnVpX2Z1bmRyYWlzZXJfYmFyX2dvYWxfZGl2aWRlciB7CiAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlOwogICAgICAgICAgICAgICAgICAgICB0b3A6MDsKICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OjM3LjMyJTsKICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDoxZW07CiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDoxcHg7CiAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOnZhcigtLW1vbm8tOCkgICAgICAgICAKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgLnVpX2Z1bmRyYWlzZXJfbGV0dGVyX2NvbnRlbnRzIHsKICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDozZW07CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2xldHRlcl9jb250ZW50cyBwIHsKICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS41OwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAudWlfZnVuZHJhaXNlcl9jdXJyZW50IHsKICAgICAgICAgICAgICAgICAgICAgeGZsb2F0OnJpZ2h0OwogICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MC44ZW07CiAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuMjsKICAgICAgICAgICAgICAgICAgICAgY29sb3I6dmFyKC0tbW9uby02KTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjQ4ZW0pIHsKCgogICAgICAgICAgICAgICAgICAgICAudWlfZnVuZHJhaXNlcl9sZXR0ZXIgewogICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjJlbSAxLjVlbTsKICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgLnVpX2Z1bmRyYWlzZXJfbGV0dGVyX2NvbnRlbnRzIHsKICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDowOwogICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIC51aV9mdW5kcmFpc2VyX2Jhcl9pbm5lciAgeyB3aWR0aDogMTQuOCU7IGJhY2tncm91bmQ6IGNyaW1zb247IH0gPC9zdHlsZT48c2NyaXB0PgogICAgICAgICAgdmFyIHRzID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7CgogICAgICAgICAgdmFyIGN4PSc2ZThhZmMwNGY1MTg0YWEwMDE3N2UyZGI3YjY5YjRhMSc7CiAgICAgICAgIHJ5bVEoZnVuY3Rpb24oKSB7ICQoImJvZHkiKS5vbigibW91c2Vtb3ZlIHRvdWNoZW5kIixmdW5jdGlvbihuKXskKCJib2R5Iikub2ZmKCJtb3VzZW1vdmUgdG91Y2hlbmQiKTt2YXIgbyx0PSEhd2luZG93Lm9wciYmISFvcHIuYWRkb25zfHwhIXdpbmRvdy5vcGVyYXx8bmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCIgT1BSLyIpPj0wLGU9InVuZGVmaW5lZCIhPXR5cGVvZiBJbnN0YWxsVHJpZ2dlcixpPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh3aW5kb3cuSFRNTEVsZW1lbnQpLmluZGV4T2YoIkNvbnN0cnVjdG9yIik+MCxyPSEhZG9jdW1lbnQuZG9jdW1lbnRNb2RlLGQ9IXImJiEhd2luZG93LlN0eWxlTWVkaWEsYT0hIXdpbmRvdy5jaHJvbWUmJiEhd2luZG93LmNocm9tZS53ZWJzdG9yZSxjPShhfHx0KSYmISF3aW5kb3cuQ1NTLHM9ITE7bmF2aWdhdG9yLndlYmRyaXZlcjthJiZ3aW5kb3cuY2hyb21lO3RyeXtuYXZpZ2F0b3IucGVybWlzc2lvbnMucXVlcnkoe25hbWU6Im5vdGlmaWNhdGlvbnMifSkudGhlbihmdW5jdGlvbihuKXsiZGVuaWVkIj09PU5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uJiYicHJvbXB0Ij09PW4uc3RhdGUmJiEwfSl9Y2F0Y2gobil7bz1ufXRyeXtudWxsWzBdKCl9Y2F0Y2gobil7bz1ufW8uc3RhY2suaW5kZXhPZigicGhhbnRvbWpzIik+LTEmJihzPSEwKTt2YXIgdT13aW5kb3cub3V0ZXJIZWlnaHQsdz13aW5kb3cuaW5uZXJIZWlnaHQsbT13aW5kb3cub3V0ZXJXaWR0aCxoPXdpbmRvdy5pbm5lcldpZHRoLHA9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lmhhc0F0dHJpYnV0ZSgid2ViZHJpdmVyIiksdj1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuaGFzQXR0cmlidXRlKCJob2xhX2V4dF9pbmplY3QiKSxsPSEhKCJvbnRvdWNoc3RhcnQiaW4gd2luZG93KXx8Im9udG91Y2hzdGFydCJpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsZj1uYXZpZ2F0b3IuaGFyZHdhcmVDb25jdXJyZW5jeSxnPW5hdmlnYXRvci5hcHBDb2RlTmFtZSx5PW5hdmlnYXRvci5wbHVnaW5zLGI9bmV3IEFycmF5O2Zvcih2YXIgeCBpbiB5KXt2YXIgaj15W3hdO2lmKGopZm9yKHZhciBDIGluIGope3ZhciBPPWpbQ107TyYmTy5kZXNjcmlwdGlvbiYmYi5wdXNoKE8uZGVzY3JpcHRpb24uc3Vic3RyKDAsMTIpKX19dmFyIFM9e2E6dCxiOmUsYzppLGQ6cixlOmQsZjphLGc6YyxoOnMsaTp1LGo6cCxsOmwsbTpmLG46ZyxvOmIuam9pbigiOiIpLHA6dyxxOm0scjpoLHM6dix0OnMsY3g6Y3gsdHM6dHN9O3J5bS5yZXF1ZXN0LnBvc3QoIlNlY0NoayIsUyxudWxsLCJzY3JpcHQiKX0pOyB9KTsKICAgICAgPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5yeW1RKGZ1bmN0aW9uKCkgeyByeW0uc2Vzc2lvbi5pbml0KDc3MDEyNCwgJ3N0YW5pZWwzNTknLCAnZkIvQjhKY3daUE1HWlhJWEZESHNva3RxUDhIUk9xNGM2Z012VUplOHpHMEUzUm5qRlA4VC9OTWRpMjNtaU1QSDE2MjAyMjIxNjYwNzA5MjknKTt9KTs8L3NjcmlwdD48c2NyaXB0PiByeW1RKGZ1bmN0aW9uKCkgeyAgd2luZG93LnJ5bS5wcmVzZXJ2ZVNlYXJjaFR5cGUgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICB2YXIgc2NvcGUgPSAkKCdodG1sLCBib2R5JykuaGFzQ2xhc3MoJ3Njb3BlX2ZpbG0nKSA/ICdmaWxtJyA6ICdtdXNpYyc7CgogICAgICAgICAgICAgICAgaWYgKCAgd2luZG93LnJ5bS5wcmVzZXJ2ZVNlYXJjaFR5cGUgJiYgd2luZG93LmxvY2FsU3RvcmFnZVsnbGFzdF9zZWFyY2h0eXBlXycgKyBzY29wZV0gKSB7CiAgICAgICAgICAgICAgICAgICAgcnltLm5leHRTZWFyY2hUeXBlID0gd2luZG93LmxvY2FsU3RvcmFnZVsnbGFzdF9zZWFyY2h0eXBlXycgKyBzY29wZV07CiAgICAgICAgICAgICAgICB9CgogICAgICAgICB9KTsgPC9zY3JpcHQ+PC9oZWFkPjxib2R5PgoKICAgICAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgICAgcnltUShmdW5jdGlvbigpIHsgCiAgICAgICAgICAgICAgICAgd2luZG93LnJ5bS50aGVtZXMgPSBbJ2RheScsICduaWdodCddOwogICAgICAgICAgICAgICAgIHdpbmRvdy5yeW0udGhlbWVzX2xhYmVsID0gWydMaWdodCcsICdEYXJrJ107CiAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgIDxzY3JpcHQ+CgogICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIChldmVudCkgPT4gewogICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgd2luZG93LmRvbV9sb2FkZWQgPSB0cnVlOwoKICAgICAgICAgICAgIHZhciBnYW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAnc2NyaXB0JyApOwogICAgICAgICAgICAgZ2FtLnNldEF0dHJpYnV0ZSggJ3NyYycsICdodHRwczovL3NlY3VyZXB1YmFkcy5nLmRvdWJsZWNsaWNrLm5ldC90YWcvanMvZ3B0LmpzJyApOwogICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCggZ2FtICk7CiAgICAgICAgICAgIAogICAgICAgICAgICAgY29uc29sZS5sb2coJ0RPTSBsb2FkZWQnKTsKICAgICAgICAgICAgIGlmICggdHlwZW9mIChfYWRqdXN0RmlsbGVyQ29sdW1ucykgIT09ICd1bmRlZmluZWQnICkgewogICAgICAgICAgICAgICAgX2FkanVzdEZpbGxlckNvbHVtbnMoKSAKICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgCiAgICAgICAgICAgICAgIGlmICggdHlwZW9mIChfY2xvc2VBbGxTdGlja3lBZHMpICE9PSAndW5kZWZpbmVkJyApIHsKICAgICAgICAgICAgICAgICAgX2Nsb3NlQWxsU3RpY2t5QWRzKCkgCiAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgIH0sIDUwMDApOwogICAgICAgICB9KTsKCiAgICAgICAgIGlmICggd2luZG93LmxvY2FsU3RvcmFnZVsnc2l6ZV9tb2RlJ10gKSB7CiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucGFyZW50RWxlbWVudC5jbGFzc05hbWUgKz0gJyBzaXplX21vZGVfJyArIHdpbmRvdy5sb2NhbFN0b3JhZ2VbJ3NpemVfbW9kZSddOwogICAgICAgICB9CgogICAgICAgICBpZiAoICF3aW5kb3cubG9jYWxTdG9yYWdlWyd0aGVtZSddICYmIHdpbmRvdy5tYXRjaE1lZGlhICYmIHdpbmRvdy5tYXRjaE1lZGlhKCcocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspJykubWF0Y2hlcyApIHsKICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5wYXJlbnRFbGVtZW50LmNsYXNzTmFtZSArPSAnIHRoZW1lX25pZ2h0JzsKICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5wYXJlbnRFbGVtZW50LmNsYXNzTmFtZSArPSAnIHRoZW1lXycgKyB3aW5kb3cubG9jYWxTdG9yYWdlWyd0aGVtZSddOwogICAgICAgICB9CgogICAgICAgICBpZiAoIHdpbmRvdy5tYXRjaE1lZGlhICkgewoKICAgICAgICAgICAgIHZhciBsaXN0ZW5lciA9IHdpbmRvdy5tYXRjaE1lZGlhKCcocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspJykuYWRkRXZlbnRMaXN0ZW5lcjsKCiAgICAgICAgICAgICBpZiAoIGxpc3RlbmVyICkgewogICAgICAgICAgICAgICAgbGlzdGVuZXIoJ2NoYW5nZScsIGUgPT4gewogICAgICAgICAgICAgICAgICB1cGRhdGVUaGVtZSgpOwogICAgICAgICAgICAgICAgfSk7ICAgICAgICAgICAgICAgCiAgICAgICAgICAgICB9CiAgICAgICAgIH0KCiAgICAgICAgIHJ5bVEoZnVuY3Rpb24oKSB7IHVwZGF0ZVN0eWxlVGhlbWVMYWJlbHMoKSB9KTsKCiAgICAgICAgIDwvc2NyaXB0PgogICAgICAKPGhlYWRlcj4KPGRpdiBjbGFzcz0iaGVhZGVyX2lubmVyIGxvZ2dlZF9pbiI+CgoKCiAgIDxkaXYgb25jbGljaz0iUllNaGVhZGVyLm9uQ2xpY2tCYXJzKCkiIGNsYXNzPSJoZWFkZXJfaWNvbl9saW5rIj4KICAgICAgPGkgY2xhc3M9ImZhIGZhLWJhcnMiPjwvaT4KICAgICAgPHNwYW4gY2xhc3M9InNob3ctZm9yLXNtYWxsIj4KICAgICAgPC9zcGFuPgogICA8ZGl2IGlkPSJoZWFkZXJfZXh0ZW5kZWRfc2VjdGlvbiIgY2xhc3M9ImhlYWRlcl9leHRlbmRlZF9zZWN0aW9uIGhlYWRlcl9leHRlbmRlZF9tb3JlX21lbnUiPgogICAgICAgICAgICA8YSBocmVmPSIvfnN0YW5pZWwzNTkiIGNsYXNzPSJoZWFkZXJfaXRlbSI+CiAgICAgICAgICAgICAgIFByb2ZpbGUKICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBocmVmPSIvY29sbGVjdGlvbi9zdGFuaWVsMzU5LyIgY2xhc3M9ImhlYWRlcl9pdGVtIj4KICAgICAgICAgICAgICBNdXNpYyBDb2xsZWN0aW9uCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgaHJlZj0iL2ZpbG1fY29sbGVjdGlvbi9zdGFuaWVsMzU5LyIgY2xhc3M9ImhlYWRlcl9pdGVtIj4KICAgICAgICAgICAgICBGaWxtIENvbGxlY3Rpb24KICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8YSBocmVmPSIvbGlzdC9zdGFuaWVsMzU5LyIgY2xhc3M9ImhlYWRlcl9pdGVtIj4KICAgICAgICAgICAgICBMaXN0cwogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgPGEgaHJlZj0iL21lc3NhZ2VzL2luYm94IiBjbGFzcz0iaGVhZGVyX2l0ZW0iPgogICAgICAgICAgICAgIE1lc3NhZ2luZwogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2NvdW50L21lbnRpb25zIiBjbGFzcz0iaGVhZGVyX2l0ZW0iPgogICAgICAgICAgICAgIE1lbnRpb25zCiAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgIDxhIGhyZWY9Ii9hY2NvdW50L3ByZWZlcmVuY2VzIiBjbGFzcz0iaGVhZGVyX2l0ZW0iPgogICAgICAgICAgICAgICBTZXR0aW5ncwogICAgICAgICAgICA8L2E+CgogICAgICAgICAgICA8YSBocmVmPSIvcXVldWVzLyIgY2xhc3M9ImhlYWRlcl9pdGVtIj4KICAgICAgICAgICAgICAgU3VibWlzc2lvbnMKICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyX2l0ZW1zX3NwaWxsb3ZlciI+CgoKCgoKCiAgICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyX3RoZW1lX2J1dHRvbnMiPgogICAgCiAgICAgICAgICAgICAgICAgPGRpdiBvbkNsaWNrPSJzd2l0Y2hTaXplTW9kZShldmVudCk7cmV0dXJuIGZhbHNlOyIgY2xhc3M9ImhlYWRlcl90aGVtZV9idXR0b24iPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhlYWRlcl90aGVtZV9idXR0b25fbGFiZWwiPlRleHQ8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXJfdGhlbWVfYnV0dG9uX21vZGUiIGlkPSJwYWdlX2ZyYW1lX3NpemVfbW9kZV9zd2l0Y2giPkFhPC9kaXY+CiAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgIDxkaXYgb25DbGljaz0ic3dpdGNoVGhlbWUoZXZlbnQpO3JldHVybiBmYWxzZTsiIGNsYXNzPSJoZWFkZXJfdGhlbWVfYnV0dG9uIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXJfdGhlbWVfYnV0dG9uX2xhYmVsIj5UaGVtZTwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhlYWRlcl90aGVtZV9idXR0b25fbW9kZSIgaWQ9InBhZ2VfZnJhbWVfdGhlbWVfc3dpdGNoIj5MaWdodDwvZGl2PgogICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+CgogICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgICAgIAogICAgICAgICAgIDxzcGFuIG9uY2xpY2s9ImlmICggY29uZmlybSgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGxvZyBvdXQ/JykgKSB7IHdpbmRvdy5sb2NhdGlvbiA9ICcvYWNjb3VudC9sb2dvdXQnOyB9IiBjbGFzcz0iaGVhZGVyX2l0ZW0iPgogICAgICAgICAgICAgIExvZyBvdXQKICAgICAgICAgICA8L3NwYW4+CgogICAgICAgIDwvZGl2PgogICAgIDwvZGl2PgoKCgoKCgoKCgoKCgoKCgo8ZGl2IGNsYXNzPSJoZWFkZXJfcHJvZmlsZSI+CiAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXJfcHJvZmlsZV9sb2dnZWRfaW4iPgogICAgICAgICAgIDxhIGhyZWY9Ii9+c3RhbmllbDM1OSIgdGl0bGU9IllvdXIgcHJvZmlsZSBwYWdlIiBjbGFzcz0iaGVhZGVyX3Byb2ZpbGVfbWFpbiI+CiAgICAgICAgICAgICAgPHNwYW4gaWQ9ImhlYWRlcl91c2VyX2ltZyIgY2xhc3M9ImhlYWRlcl91c2VyX2ltZyIgCiAgICAgICAgICAgICAgICA+PC9zcGFuPgogICAgICAgICAgICAgIDxzcGFuIGlkPSJoZWFkZXJfcHJvZmlsZV91c2VybmFtZSIgY2xhc3M9ImhlYWRlcl9wcm9maWxlX2xpbmsgdXNlciBoZWFkZXJfaXRlbSI+c3RhbmllbDM1OTwvc3Bhbj4KICAgICAgICAgICA8L2E+CiAgICAgICA8L2Rpdj4KCjwvZGl2PgoKCgo8ZGl2IGNsYXNzPSJoZWFkZXJfbG9nbyI+CiAgPGEgY2xhc3M9Im1haW4gaGVhZGVyX2l0ZW0gc29uZW1pYyIgaHJlZj0iLyI+CiAgICAgPGRpdiBjbGFzcz0ibG9nb19oZWFkZXIiPjwvZGl2PgogICAgIDxzcGFuIGNsYXNzPSJsb2dvX25hbWUiPlJZTTwvc3Bhbj4KICA8L2E+Cgo8L2Rpdj4KCjxkaXYgY2xhc3M9ImhlYWRlcl9saW5rcyI+CiAgPGRpdiBjbGFzcz0iaGVhZGVyX2xpbmtzX2lubmVyIj4KICAgICAgPGRpdiBjbGFzcz0iZGl2aWRlciI+PC9kaXY+CiAgICAgIDxhIGNsYXNzPSJoZWFkZXJfaXRlbSIgaHJlZj0iL25ldy1tdXNpYy8iPm5ldyBtdXNpYzwvYT4KICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyX2NoYXJ0cyI+CiAgICAgIDxhIGNsYXNzPSJoZWFkZXJfY2hhcnRzIGhlYWRlcl9pdGVtIiBocmVmPSIvY2hhcnRzLyI+Y2hhcnRzPC9hPgogICAgICA8L2Rpdj4KICAgICAgPGEgY2xhc3M9ImhlYWRlcl9pdGVtIiBocmVmPSIvbGlzdHMvIj5saXN0czwvYT4KICAgICAgPGEgY2xhc3M9ImhlYWRlcl9pdGVtIiBocmVmPSIvY29tbXVuaXR5LyI+Y29tbXVuaXR5PC9hPgoKCgoKCgogICAgICAgICA8YSBjbGFzcz0iaGVhZGVyX2l0ZW0iIHRpdGxlPSJTdXBwb3J0IFJZTSBieSBiZWNvbWluZyBhIHN1YnNjcmliZXIiICBocmVmPSIvc3Vic2NyaWJlLyIgc3R5bGU9ImxpbmUtaGVpZ2h0OjEuOSI+CiAgICAgICAgICAgIDxzcGFuICBkYXRhLW5vc25pcHBldCBjbGFzcz0ic3Vic2NyaWJlX2xhYmVsX2Z1bmRyYWlzZXIiIHN0eWxlPSJmb250LXNpemU6MC44ZW07Zm9udC13ZWlnaHQ6Ym9sZDsiPmZ1bmRyYWlzZXI8L3NwYW4+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InVpX2Z1bmRyYWlzZXJfYmFyX2ZyYW1lIiBzdHlsZT0iZm9udC1zaXplOiAwLjRlbTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMC45ZW07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDEuMmVtOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAiPgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1aV9mdW5kcmFpc2VyX2JhciI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVpX2Z1bmRyYWlzZXJfYmFyX291dGxpbmUiPgoKICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idWlfZnVuZHJhaXNlcl9iYXJfZ29hbF9kaXZpZGVyIj4KCiAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idWlfZnVuZHJhaXNlcl9iYXJfaW5uZXIiPgoKICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgIDwvYT4KCiAgICAgICAgIAoKICAgICAgCgogICAgICA8ZGl2IGNsYXNzPSJkaXZpZGVyIj48L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImhlYWRlcl9zZWFyY2giPgogIDxkaXYgaWQ9InVpX3NlYXJjaF9mcmFtZV9vdXRlcl9tYWluX3NlYXJjaCIgIGNsYXNzPSJ1aV9zZWFyY2hfZnJhbWVfb3V0ZXIiPiA8ZGl2IGlkPSJ1aV9zZWFyY2hfZnJhbWVfbWFpbl9zZWFyY2giIGNsYXNzPSJ1aV9zZWFyY2hfZnJhbWUiPiA8ZGl2IG9uY2xpY2s9InJ5bVEoZnVuY3Rpb24oKSB7UllNc2VhcmNoLm9uQ2xpY2tDbG9zZShldmVudCwgJ21haW5fc2VhcmNoJyk7fSkiIGNsYXNzPSJ1aV9zZWFyY2hfY2xvc2UiPiA8ZGl2IGNsYXNzPSJ1aV9zZWFyY2hfY2xvc2VfYmFyIj4gPGkgY2xhc3M9ImZhIGZhLXRpbWVzIj48L2k+IENsb3NlPC9kaXY+IDxkaXYgaWQ9InVpX3NlYXJjaF9jb250ZXh0X2luZGljYXRvcl9tYWluX3NlYXJjaCIgY2xhc3M9InVpX3NlYXJjaF9jb250ZXh0X2luZGljYXRvciI+IDxkaXYgaWQ9InVpX3NlYXJjaF9jb250ZXh0X2luZGljYXRvcl9pbm5lcl9tYWluX3NlYXJjaCIgY2xhc3M9InVpX3NlYXJjaF9jb250ZXh0X2luZGljYXRvcl9pbm5lciI+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz0idWlfc2VhcmNoX2NsZWFyIj48L2Rpdj4gPGRpdiBjbGFzcz0idWlfc2VhcmNoX2ZyYW1lX2lubmVyIj4gPGRpdiBpZD0idWlfc2VhcmNoX21haW5fc2VhcmNoIiBjbGFzcz0idWlfc2VhcmNoIiBkYXRhLWRlZmF1bHQtc2NvcGU9Im11c2ljIiBkYXRhLWNhbGxiYWNrPSIiIGRhdGEtY2FsbGJhY2staWQ9IiI+IDxpIHN0eWxlPSJjdXJzb3I6cG9pbnRlciIgb25DbGljaz0iUllNc2VhcmNoLnJlZGlyU2VhcmNoKCdtYWluX3NlYXJjaCcpOyIgaWQ9InVpX3NlYXJjaF9pY29uX21haW5fc2VhcmNoIiBjbGFzcz0iZmEgZmEtc2VhcmNoIHVpX3NlYXJjaF9pY29uIj48L2k+IDxpIGlkPSJ1aV9jbGVhcl9pY29uX21haW5fc2VhcmNoIiBvbmNsaWNrPSJyeW1RKGZ1bmN0aW9uKCkge1JZTXNlYXJjaC5vbkNsaWNrQ2xlYXJTZWFyY2goZXZlbnQsICdtYWluX3NlYXJjaCcpO30pIiBjbGFzcz0iZmEgZmEtdGltZXMtY2lyY2xlIHVpX2NsZWFyX2ljb24iPjwvaT4gPGlucHV0IGFyaWEtbGFiZWw9IlNlYXJjaCIgdmFsdWU9ImEiIGlkPSJ1aV9zZWFyY2hfaW5wdXRfbWFpbl9zZWFyY2giIHBsYWNlaG9sZGVyPSJTZWFyY2guLi4iIGNsYXNzPSJ1aV9zZWFyY2hfaW5wdXQiIG9uZm9jdXM9InJ5bVEoZnVuY3Rpb24oKSB7UllNc2VhcmNoLm9uRm9jdXMoZXZlbnQsICdtYWluX3NlYXJjaCcpfSkiIG9uYmx1cj0icnltUShmdW5jdGlvbigpIHtSWU1zZWFyY2gub25CbHVyKGV2ZW50LCAnbWFpbl9zZWFyY2gnKX0pIiBvbmtleWRvd249InJ5bVEoZnVuY3Rpb24oKSB7UllNc2VhcmNoLm9uS2V5RG93bihldmVudCwgJ21haW5fc2VhcmNoJyl9KSIgb25pbnB1dD0icnltUShmdW5jdGlvbigpIHtSWU1zZWFyY2gub25JbnB1dChldmVudCwgJ21haW5fc2VhcmNoJyl9KSI+IDwvZGl2PiA8ZGl2IGNsYXNzPSJ1aV9zZWFyY2hfcmVzdCI+IDxkaXYgY2xhc3M9InVpX3NlYXJjaF90eXBlIj4gPGRpdiBpZD0idWlfc2VhcmNoX2RlYnVnX21haW5fc2VhcmNoIiBjbGFzcz0idWlfc2VhcmNoX2RlYnVnIj48L2Rpdj4gPHNwYW4gY2xhc3M9InVpX3NlYXJjaF9vYmplY3RfbGFiZWwiPlNlYXJjaDo8L3NwYW4+IDxzcGFuIGlkPSJ1aV9zZWFyY2hfc2NvcGVfc2VsZWN0b3JfbWFpbl9zZWFyY2giIGNsYXNzPSJ1aV9zZWFyY2hfb2JqZWN0X3NlbGVjdG9yIj4gPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idWlfc2VhcmNoX3Njb3BlX21haW5fc2VhcmNoIiBpZD0idWlfc2VhcmNoX3Njb3BlX21haW5fc2VhcmNoIiB2YWx1ZT0ibXVzaWMiPiA8c3BhbiBpZD0idWlfc2VhcmNoX3Njb3BlX3NlbGVjdG9yX211c2ljX21haW5fc2VhcmNoIiBvbmNsaWNrPSJyeW1RKGZ1bmN0aW9uKCkge1JZTXNlYXJjaC5vbkNsaWNrU2VhcmNoU2NvcGUoZXZlbnQsICdtYWluX3NlYXJjaCcsICdtdXNpYycpO30pIiBjbGFzcz0idWlfc2VhcmNoX3Njb3BlX3NlbGVjdG9yX2l0ZW0gdWlfc2VhcmNoX3Njb3BlX3NlbGVjdG9yX2l0ZW1fbXVzaWMgc2VsZWN0ZWQiPiBNdXNpYwogIDwvc3Bhbj4gPHNwYW4gaWQ9InVpX3NlYXJjaF9zY29wZV9zZWxlY3Rvcl9maWxtX21haW5fc2VhcmNoIiBvbmNsaWNrPSJyeW1RKGZ1bmN0aW9uKCkge1JZTXNlYXJjaC5vbkNsaWNrU2VhcmNoU2NvcGUoZXZlbnQsICdtYWluX3NlYXJjaCcsICdmaWxtJyk7fSkiIGNsYXNzPSJ1aV9zZWFyY2hfc2NvcGVfc2VsZWN0b3JfaXRlbSB1aV9zZWFyY2hfc2NvcGVfc2VsZWN0b3JfaXRlbV9maWxtIj4gRmlsbQogIDwvc3Bhbj4gPHNwYW4gaWQ9InVpX3NlYXJjaF9zY29wZV9zZWxlY3Rvcl9nYW1lc19tYWluX3NlYXJjaCIgc3R5bGU9ImRpc3BsYXk6bm9uZSIgb25jbGljaz0icnltUShmdW5jdGlvbigpIHtSWU1zZWFyY2gub25DbGlja1NlYXJjaFNjb3BlKGV2ZW50LCAnbWFpbl9zZWFyY2gnLCAnZ2FtZXMnKTt9KSIgY2xhc3M9InVpX3NlYXJjaF9zY29wZV9zZWxlY3Rvcl9pdGVtIHVpX3NlYXJjaF9zY29wZV9zZWxlY3Rvcl9pdGVtX2dhbWVzIj4gR2FtZXMKICA8L3NwYW4+IDwvc3Bhbj4gPHNwYW4gY2xhc3M9InVpX3NlYXJjaF9vYmplY3RfbGFiZWwiPmZvcjo8L3NwYW4+IDxzcGFuIGlkPSJ1aV9zZWFyY2hfb2JqZWN0X3NlbGVjdF9mcmFtZV9tYWluX3NlYXJjaCIgY2xhc3M9InVpX3NlYXJjaF9vYmplY3Rfc2VsZWN0X2ZyYW1lIHNlbGVjdGVkIj4gPHNlbGVjdCBvbmNoYW5nZT0icnltUShmdW5jdGlvbigpIHtSWU1zZWFyY2gub25DaGFuZ2VPYmplY3QoZXZlbnQsICdtYWluX3NlYXJjaCcpfSkiIGlkPSJ1aV9zZWFyY2hfb2JqZWN0X3NlbGVjdF9tYWluX3NlYXJjaCIgY2xhc3M9InVpX3NlYXJjaF9vYmplY3Rfc2VsZWN0Ij4gPC9zZWxlY3Q+IDwvc3Bhbj4gIDwvZGl2PiA8ZGl2IGlkPSJ1aV9zZWFyY2hfaW5mb19mcmFtZV9tYWluX3NlYXJjaCIgY2xhc3M9InVpX3NlYXJjaF9pbmZvX2ZyYW1lIj4gPC9kaXY+IDxkaXYgaWQ9InVpX3NlYXJjaF9yZXN1bHRzX2ZyYW1lX21haW5fc2VhcmNoIiBjbGFzcz0idWlfc2VhcmNoX3Jlc3VsdHNfZnJhbWUiPiA8ZGl2IGlkPSJ1aV9zZWFyY2hfcmVzdWx0c19tYWluX3NlYXJjaCIgY2xhc3M9InVpX3NlYXJjaF9yZXN1bHRzIj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PgogIDwvZGl2PgoKPC9kaXY+ICAgCgoKCgo8L2Rpdj4KCjwvaGVhZGVyPgoKCjxkaXYgY2xhc3M9ImhlYWRlcl9lcnJvciIgb25DbGljaz0iJCh0aGlzKS5mYWRlT3V0KCk7IiBpZD0iaGVhZGVyX2Vycm9yIj4KICAgPGRpdiBjbGFzcz0iaGVhZGVyX2Vycm9yX2Nsb3NlIj48aSBjbGFzcz0iZmEgZmEtdGltZXMtY2lyY2xlIj48L2k+PC9kaXY+CiAgIDxkaXYgaWQ9ImhlYWRlcl9lcnJvcl90ZXh0Ij48L2Rpdj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSJoZWFkZXJfbWVzc2FnZSIgb25DbGljaz0iJCh0aGlzKS5mYWRlT3V0KCk7IiBpZD0iaGVhZGVyX21lc3NhZ2UiPgogICA8ZGl2IGNsYXNzPSJoZWFkZXJfbWVzc2FnZV9jbG9zZSI+PGkgY2xhc3M9ImZhIGZhLXRpbWVzLWNpcmNsZSI+PC9pPjwvZGl2PgogICA8ZGl2IGlkPSJoZWFkZXJfbWVzc2FnZV90ZXh0Ij48L2Rpdj4KPC9kaXY+Cgo8ZGl2IGlkPSJtb2JpbGVfaGVhZGVyX21lbnUiIGNsYXNzPSJtb2JpbGVfaGVhZGVyX21lbnUiPjxhIGhyZWY9Ii9uZXctbXVzaWMvIiBjbGFzcz0ibW9iaWxlX2hlYWRlcl9tZW51X2l0ZW0gbW9iaWxlX2hlYWRlcl9tZW51X2l0ZW1fY2hhcnRzIj4KICAgICAgTmV3IE11c2ljCjwvYT48YSBocmVmPSIvY2hhcnRzLyIgY2xhc3M9Im1vYmlsZV9oZWFkZXJfbWVudV9pdGVtIG1vYmlsZV9oZWFkZXJfbWVudV9pdGVtX2NoYXJ0cyI+CiAgICAgIENoYXJ0cwo8L2E+PGEgaHJlZj0iL2xpc3RzLyIgY2xhc3M9Im1vYmlsZV9oZWFkZXJfbWVudV9pdGVtIG1vYmlsZV9oZWFkZXJfbWVudV9pdGVtX2xpc3RzIj4KICAgTGlzdHMgCjwvYT48YSBocmVmPSIvY29tbXVuaXR5LyIgY2xhc3M9Im1vYmlsZV9oZWFkZXJfbWVudV9pdGVtIG1vYmlsZV9oZWFkZXJfbWVudV9pdGVtX2NvbW11bml0eSI+CiAgIENvbW11bml0eQo8L2E+PC9kaXY+CiAgICAgICAgCgogICAgICAgICAgICA8ZGl2IGlkPSJjb250ZW50X3dyYXBwZXJfb3V0ZXIiIGNsYXNzPSJjb250ZW50X3dyYXBwZXJfb3V0ZXIiPgogICAgICAgICAgICA8ZGl2IGlkPSJjb250ZW50X3dyYXBwZXIiIGNsYXNzPSJjb250ZW50X3dyYXBwZXIiPgogICAgICAgICAgICA8ZGl2IGlkPSJjb250ZW50Ij4KICAgICAgICAgICAgPGRpdiBpZD0icHJlY29udGVudCIgY2xhc3M9InByZWNvbnRlbnQiPjwvZGl2PgoKICAgICAgICAgCiAgICAgICAgIDxkaXYgaWQ9ImNvbnRlbnRfY292ZXIiPjwvZGl2PgogICAgICAgICA8ZGl2IGlkPSJ0b3RhbF9jb3ZlciI+PC9kaXY+CiAgICAgICAgIDxkaXYgaWQ9ImNvbnRlbnRfdG90YWxfY292ZXIiPjwvZGl2PiAgICAgICAgICAKICAgICAgCiAgICAgICAgIDxzdHlsZT4KICAgICAgICAgICAgI3N1YnNjcmlwdGlvbl91cGRhdGVfYmFubmVyIHsKICAgICAgICAgICAgICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudDsKICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbToxcHggc29saWQgdmFyKC0tbW9uby1kKTsKICAgICAgICAgICAgICAgYm9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tbW9uby1kKTsKICAgICAgICAgICAgICAgbWF4LXdpZHRoOjUwZW07CiAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG87CiAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206MmVtOwogICAgICAgICAgICAgICBwYWRkaW5nOjFlbSA3ZW0gMy41ZW0gM2VtOwogICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLnN1YnNjcmlwdGlvbl91cGRhdGVfdGl0bGUgewogICAgICAgICAgICAgICBmb250LXNpemU6MS41ZW07CiAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206MC41ZW07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo1MGVtKSB7CiAgICAgICAgICAgICAgICNzdWJzY3JpcHRpb25fdXBkYXRlX2Jhbm5lciB7CiAgICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOjFlbTsKICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjAuOWVtOwogICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgPC9zdHlsZT4KICAgICAgCiAgICAgICAgICAgICAgICAgPGRpdiBkYXRhLW5vc25pcHBldCBpZD0ic3Vic2NyaXB0aW9uX3VwZGF0ZV9iYW5uZXIiIGNsYXNzPSJwYWdlX2NoYXJ0X2Rlc2NyaXB0aW9uX2NvbnRhaW5lciI+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgIG9uQ2xpY2s9InJ5bS5yZXF1ZXN0LnBvc3QoJ0Rpc21pc3NTdWJzY3JpcHRpb25VcGRhdGVCYW5uZXInLCB7fSwgbnVsbCwgJ3NjcmlwdCcpOyIgIHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjI7dG9wOjA7cmlnaHQ6MDtwYWRkaW5nOjFlbTtjb2xvcjp2YXIoLS1tb25vLTUpO2ZvbnQtc2l6ZToxLjFlbTtjdXJzb3I6cG9pbnRlciIgY2xhc3M9InBhZ2VfZnVuZHJhaXNlcl9jbG9zZSI+PGkgY2xhc3M9ImZhIGZhLXRpbWVzLWNpcmNsZSI+PC9pPiBDbG9zZTwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYWdlX2NoYXJ0X2Rlc2NyaXB0aW9uX3RleHRhbmRidG5zIj4gCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1YnNjcmlwdGlvbl91cGRhdGVfdGl0bGUiPiBXZSdyZSBsYXVuY2hpbmcgYSBzdWJzY3JpcHRpb24gZHJpdmUgdG8gaGVscCBmdW5kIG91ciBvcGVyYXRpb25zIGluIDIwMjEuICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGFnZV9jaGFydF9kZXNjcmlwdGlvbl9idG5zIj4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaWQ9IiIgY2xhc3M9ImJ0biBmbGF0X2J0biBwYWdlX2NoYXJ0X2Rlc2NyaXB0aW9uX2J0biIgaHJlZj0iL3N1YnNjcmliZS8iPlN1YnNjcmliZSBvciBkb25hdGU8L2E+IAogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gCgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVpX2Z1bmRyYWlzZXJfYmFyX2ZyYW1lIiBzdHlsZT0iZm9udC1zaXplOiAwLjdlbTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMC45ZW07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAzZW07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWdodDogM2VtOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMCAxLjJlbTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1aV9mdW5kcmFpc2VyX2xhYmVsIiBzdHlsZT0iZm9udC1zaXplOjEuM2VtO2NvbG9yOnZhcigtLW1vbm8tNik7Zm9udC13ZWlnaHQ6Ym9sZDsiPlByb2dyZXNzPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVpX2Z1bmRyYWlzZXJfYmFyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idWlfZnVuZHJhaXNlcl9iYXJfb3V0bGluZSI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1aV9mdW5kcmFpc2VyX2Jhcl9nb2FsX2RpdmlkZXIiPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1aV9mdW5kcmFpc2VyX2Jhcl9pbm5lciI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IAogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+PGRpdiBjbGFzcz0icm93Ij48ZGl2IGlkPSJjb2x1bW5fY29udGFpbmVyX2xlZnQiIGNsYXNzPSJsYXJnZS04IGNvbHVtbnMiPjwhLS0gYmVnaW4gc2VhcmNoIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwYWdlX3NlYXJjaF9yZXN1bHRzIj4KICAgICAgICAgICAgICAgPHRhYmxlIHN0eWxlPSJ3aWR0aDoxMDAlO3BhZGRpbmc6MDttYXJnaW46MDsiPjx0cj48dGQgc3R5bGU9InBhZGRpbmc6MDttYXJnaW46MDt2ZXJ0aWNhbC1hbGlnbjp0b3A7Ij48ZGl2IHN0eWxlPSJwYWRkaW5nLWxlZnQ6MC44ZW07Zm9udC1zaXplOjEuM2VtO21hcmdpbi10b3A6MWVtO21hcmdpbi1ib3R0b206MWVtO2NvbG9yOnZhcigtLW1vbm8tOSk7Ij5TZWFyY2ggcmVzdWx0cyBmb3IgPGI+YTwvYj48L2Rpdj4KCjwhLS1hLS0+CjxkaXYgY2xhc3M9ImNsZWFyIj4gPC9kaXY+PGgzPlYvQSBSZWxlYXNlczwvaDM+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDEuMCk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZyBsYXp5bG9hZCIgZGF0YS1zcmM9Ii8vZS5zbm1jLmlvL2kvMTUwL3MvZWNhYzkzYmVjODAyMDJhMmQxMGFiZmNiMzY5NjhlNjgvMTU5ODIyOCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTU0ODg1OF0iIGhyZWY9Ii9yZWxlYXNlL2VwL3ZhcmlvdXMtYXJ0aXN0cy9hLWFuZC1hLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgJmFtcDsgQTwvYT48L2k+PGJyPjxkaXYgY2xhc3M9ImNsZWFyIj4gPC9kaXY+PHRhYmxlIGNsYXNzPSJtYmdlbiIgc3R5bGU9ImJvcmRlcjpub25lO3BhZGRpbmc6MDttYXJnaW4tbGVmdDotMC4yNWVtO21hcmdpbi10b3A6MC41ZW07Ym9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tbW9uby1lKSI+PHRyPgogICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij5TZXJpZXM6IDxhIHRpdGxlPSJbRGVzY3JpcHRvcjI0NDU3XSIgY2xhc3M9ImdlbnJlIiBocmVmPSIvY2xhc3NpZmllcnMvU29uZytGaWdodC8iPlNvbmcgRmlnaHQ8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4yMDA1PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPjwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjx0YWJsZT48dHIgY2xhc3M9ImluZm9ib3giPgogICAgICAgICAgICA8dGQgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZ19jZWxsIj48ZGl2IHN0eWxlPSJwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctYm90dG9tOmNhbGMoIDEwMCUgLyAxLjApOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzFkODUyZmM2ZDEwYjVjMjA3NmY2YmU4MjQ0M2RiNjllLzIxMzI5MzgiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0xMjM5ODU5XSIgaHJlZj0iL3JlbGVhc2UvY29tcC92YXJpb3VzLWFydGlzdHMvYV9sX3BfaF9hLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEuTC5QLkguQS48L2E+PC9pPjxicj48ZGl2IGNsYXNzPSJjbGVhciI+IDwvZGl2Pjx0YWJsZSBjbGFzcz0ibWJnZW4iIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luLWxlZnQ6LTAuMjVlbTttYXJnaW4tdG9wOjAuNWVtO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLW1vbm8tZSkiPjx0cj4KICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+TGFiZWw6IDxhIHRpdGxlPSJbTGFiZWw5ODEyXSIgaHJlZj0iL2xhYmVsL2dlc2thX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPkdlc2thIFJlY29yZHM8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4yMDA1PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLWNhIiBhbHQ9IkNhbmFkYSIgdGl0bGU9IkNhbmFkYSIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij5DRCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48YSB0aXRsZT0iW0xhYmVsOTgxMl0iIGhyZWY9Ii9sYWJlbC9nZXNrYV9yZWNvcmRzLyIgY2xhc3M9ImxhYmVsIj5HZXNrYSBSZWNvcmRzPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+R1NLMDQwMTwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiA8YnIgLz48dGFibGU+PHRyIGNsYXNzPSJpbmZvYm94Ij4KICAgICAgICAgICAgPHRkIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWdfY2VsbCI+PGRpdiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtwYWRkaW5nLWJvdHRvbTpjYWxjKCAxMDAlIC8gMS4wKTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGFnZV9zZWFyY2hfaW1nIGxhenlsb2FkIiBkYXRhLXNyYz0iLy9lLnNubWMuaW8vaS8xNTAvcy81M2M1MGU3ZjRiNjViNmE2ZThlNzhiMDVmMzE5OTIzMy84NDE0MjQ5IiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvdGQ+PHRkIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MThweDsiPjx0YWJsZSB3aWR0aD0iMTAwJSI+PHRyPjx0ZD48YSB0aXRsZT0iW0FydGlzdDVdIiAgaHJlZj0iL2FydGlzdC92YXJpb3VzLWFydGlzdHMiIGNsYXNzPSJhcnRpc3QiPlZhcmlvdXMgQXJ0aXN0czwvYT4gLSA8aT48YSB0aXRsZT0iW0FsYnVtMTE5NDA5MDJdIiBocmVmPSIvcmVsZWFzZS9lcC92YXJpb3VzLWFydGlzdHMvYS1zY29yZS10by1zZXR0bGUtdl9hLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgU2NvcmUgdG8gU2V0dGxlIFYvQTwvYT48L2k+PGJyPjxkaXYgY2xhc3M9ImNsZWFyIj4gPC9kaXY+PHRhYmxlIGNsYXNzPSJtYmdlbiIgc3R5bGU9ImJvcmRlcjpub25lO3BhZGRpbmc6MDttYXJnaW4tbGVmdDotMC4yNWVtO21hcmdpbi10b3A6MC41ZW07Ym9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tbW9uby1lKSI+PHRyPgogICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjRlbTsiPjIwMjA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+TG9zc2xlc3MgRGlnaXRhbCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPkJMUjAwNzwvdGQ+PHRyPjx0ZCBjb2xzcGFuPSI1Ij48Yj5UcmFja3M6PC9iPiA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMzk0MzA3XSIgIGhyZWY9Ii9hcnRpc3Qvbm9yYmVydG8tbHVzc28iIGNsYXNzPSJhcnRpc3QiPk5vcmJlcnRvIEx1c3NvPC9hPiAtIENlbHRpYyBFZng8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxNTE3OTk5XSIgIGhyZWY9Ii9hcnRpc3QvY3lhbi1pZCIgY2xhc3M9ImFydGlzdCI+xIZ5YW4gSUQ8L2E+IC0gRGlzdHJ1c3Q8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+SXNvbGF0ZWQgSW5jaWRlbnQgLSBMdWNrPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPk1ib2R2ZWxpIC0gRmlnaHQgQmVmb3JlIFJhdmU8L3NwYW4+IDwvdGQ+PC90cj48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjx0YWJsZT48dHIgY2xhc3M9ImluZm9ib3giPgogICAgICAgICAgICA8dGQgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZ19jZWxsIj48ZGl2IHN0eWxlPSJwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctYm90dG9tOmNhbGMoIDEwMCUgLyAwLjk4MjQ1NjE0MDM1MDg3NzEpOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zL2U2MDcyY2JiZjkwNjE3YjA0YjVjYWM3NzY0M2Q5MmJhLzEzMzAzMjQiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0zMjgwXSIgaHJlZj0iL3JlbGVhc2UvYWxidW0vdmFyaW91cy1hcnRpc3RzL2EtdHJpYnV0ZS10by10aGUtY3VyZS0xMDAtdGVhcnMvIiBjbGFzcz0ic2VhcmNocGFnZSI+QSBUcmlidXRlIHRvIFRoZSBDdXJlOiAxMDAgVGVhcnM8L2E+PC9pPjxicj48ZGl2IGNsYXNzPSJjbGVhciI+IDwvZGl2Pjx0YWJsZSBjbGFzcz0ibWJnZW4iIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luLWxlZnQ6LTAuMjVlbTttYXJnaW4tdG9wOjAuNWVtO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLW1vbm8tZSkiPjx0cj4KICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+VHJpYnV0ZTogPGEgdGl0bGU9IltBcnRpc3QxMTddIiAgaHJlZj0iL2FydGlzdC90aGUtY3VyZSIgY2xhc3M9ImFydGlzdCI+VGhlIEN1cmU8L2E+PGJyIC8+TGFiZWw6IDxhIHRpdGxlPSJbTGFiZWw0MjddIiBocmVmPSIvbGFiZWwvY2xlb3BhdHJhX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPkNsZW9wYXRyYSBSZWNvcmRzPC9hPjxiciAvPjwvdGQ+PC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NGVtOyI+MTk5NzwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+PGltZyBzcmM9Ii8vZS5zbm1jLmlvLzIuNS9pbWcvaW1hZ2VzL2JsYW5rLnBuZyIgY2xhc3M9ImZsYWcgZmxhZy11cyIgYWx0PSJVbml0ZWQgU3RhdGVzIiB0aXRsZT0iVW5pdGVkIFN0YXRlcyIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij5DRCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48YSB0aXRsZT0iW0xhYmVsNDI3XSIgaHJlZj0iL2xhYmVsL2NsZW9wYXRyYV9yZWNvcmRzLyIgY2xhc3M9ImxhYmVsIj5DbGVvcGF0cmEgUmVjb3JkczwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPkNMUCAwMDAxLTI8L3RkPjx0cj48dGQgY29sc3Bhbj0iNSI+PGI+VHJhY2tzOjwvYj4gPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjYwODNdIiAgaHJlZj0iL2FydGlzdC9ub3NmZXJhdHUiIGNsYXNzPSJhcnRpc3QiPk5vc2ZlcmF0dTwvYT4gLSAxMDAgWWVhcnM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMzQ0NF0iICBocmVmPSIvYXJ0aXN0L3RoZV9lbGVjdHJpY19oZWxsZmlyZV9jbHViIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgRWxlY3RyaWMgSGVsbGZpcmUgQ2x1YjwvYT4gLSBLaWxsaW5nIGFuIEFyYWI8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q1NzU0XSIgIGhyZWY9Ii9hcnRpc3QvbGVhZXRoZXItc3RyaXAiIGNsYXNzPSJhcnRpc3QiPkxlw6Z0aGVyIFN0cmlwPC9hPiAtIEx1bGxhYnk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q4NjMyM10iICBocmVmPSIvYXJ0aXN0L2tpbGwtc3dpdGNoX2tsaWNrIiBjbGFzcz0iYXJ0aXN0Ij5LaWxsIFN3aXRjaC4uLktsaWNrPC9hPiAtIEp1bXBpbmcgU29tZW9uZSBFbHNlJiMzOTtzIFRyYWluPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NTEyNV0iICBocmVmPSIvYXJ0aXN0L3RoZV9zaHJvdWQiIGNsYXNzPSJhcnRpc3QiPlRoZSBTaHJvdWQ8L2E+IC0gU2lua2luZzwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDczOTIyXSIgIGhyZWY9Ii9hcnRpc3QvZmFocmVuaGVpdF80NTEiIGNsYXNzPSJhcnRpc3QiPkZhaHJlbmhlaXQgNDUxPC9hPiAtIFRoZSBCbG9vZDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEwNzYxMl0iICBocmVmPSIvYXJ0aXN0L2Nyb2NvZGlsZV9zaG9wIiBjbGFzcz0iYXJ0aXN0Ij5Dcm9jb2RpbGUgU2hvcDwvYT4gLSBMZXQmIzM5O3MgR28gdG8gQmVkPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTI2OTczXSIgIGhyZWY9Ii9hcnRpc3QvZXhfdm90byIgY2xhc3M9ImFydGlzdCI+RXgtVm90bzwvYT4gLSBTaGFrZSBEb2cgU2hha2U8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxOTIxOTFdIiAgaHJlZj0iL2FydGlzdC93cmVja2FnZSIgY2xhc3M9ImFydGlzdCI+V3JlY2thZ2U8L2E+IC0gUG9ybm9ncmFwaHk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMzQ1M10iICBocmVmPSIvYXJ0aXN0L3JhemVkLWluLWJsYWNrIiBjbGFzcz0iYXJ0aXN0Ij5SYXplZCBpbiBCbGFjazwvYT4gLSBEaXNpbnRlZ3JhdGlvbjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDIzMjE3OV0iICBocmVmPSIvYXJ0aXN0L3Rlc3RfaW5mZWN0aW9uIiBjbGFzcz0iYXJ0aXN0Ij5UZXN0IEluZmVjdGlvbjwvYT4gLSBBIE5pZ2h0IExpa2UgVGhpczwvc3Bhbj4gLi4uPC90ZD48L3RyPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT4gPGJyIC8+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDAuOTk2Mzg5ODkxNjk2NzUwOSk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZyBsYXp5bG9hZCIgZGF0YS1zcmM9Ii8vZS5zbm1jLmlvL2kvMTUwL3MvODZkZGQ4NWI2OTBiMGFmYjI4YmY0MWE0MmFlZWRhNjIvMTI1MzQ5OSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTM2NTRdIiBocmVmPSIvcmVsZWFzZS9jb21wL3ZhcmlvdXMtYXJ0aXN0cy9hLXNpZGVzLXBhcnQtb25lLTE5NzktMTk4Mi8iIGNsYXNzPSJzZWFyY2hwYWdlIj5BIFNpZGVzIChQYXJ0IE9uZS4gMTk3OSAvIDE5ODIpPC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPkxhYmVsOiA8YSB0aXRsZT0iW0xhYmVsMjkwNl0iIGhyZWY9Ii9sYWJlbC9jcmFzc19yZWNvcmRzLyIgY2xhc3M9ImxhYmVsIj5DcmFzcyBSZWNvcmRzPC9hPjxiciAvPjwvdGQ+PC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NGVtOyI+MTk5MjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+PGltZyBzcmM9Ii8vZS5zbm1jLmlvLzIuNS9pbWcvaW1hZ2VzL2JsYW5rLnBuZyIgY2xhc3M9ImZsYWcgZmxhZy1nYiIgYWx0PSJVbml0ZWQgS2luZ2RvbSIgdGl0bGU9IlVuaXRlZCBLaW5nZG9tIiAvPiA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPkNEIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWwyOTA2XSIgaHJlZj0iL2xhYmVsL2NyYXNzX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPkNyYXNzIFJlY29yZHM8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo2ZW07Ij5DQVROTzg8L3RkPjx0cj48dGQgY29sc3Bhbj0iNSI+PGI+VHJhY2tzOjwvYj4gPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzAxMDldIiAgaHJlZj0iL2FydGlzdC9ob25leS1iYW5lIiBjbGFzcz0iYXJ0aXN0Ij5Ib25leSBCYW5lPC9hPiAtIEdpcmwgb24gdGhlIFJ1bjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDIyMjQyXSIgIGhyZWY9Ii9hcnRpc3Qvem91bmRzIiBjbGFzcz0iYXJ0aXN0Ij5ab3VuZHM8L2E+IC0gQ2FuJiMzOTt0IENoZWF0IEthcm1hPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTgyNDddIiAgaHJlZj0iL2FydGlzdC9wb2lzb24tZ2lybHMiIGNsYXNzPSJhcnRpc3QiPlBvaXNvbiBHaXJsczwvYT4gLSBQcm9tZW5hZGUgSW1tb3J0ZWxsZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDIyNDIzXSIgIGhyZWY9Ii9hcnRpc3QvZmx1eC1vZi1waW5rLWluZGlhbnMiIGNsYXNzPSJhcnRpc3QiPkZsdXggb2YgUGluayBJbmRpYW5zPC9hPiAtIE5ldSBTbWVsbCAvIFR1YmUgRGlzYXN0ZXJzIC8gUG9lbTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDMwOTZdIiAgaHJlZj0iL2FydGlzdC9saXR0bGUtYW5uaWUiIGNsYXNzPSJhcnRpc3QiPkFubmllIEFueGlldHk8L2E+IC0gSGVsbG8gSG9ycm9yPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTg2NDUxXSIgIGhyZWY9Ii9hcnRpc3QvdGhlX3NuaXBlcnMiIGNsYXNzPSJhcnRpc3QiPlRoZSBTbmlwZXJzPC9hPiAtIFRoZSBQYXJlbnRzIG9mIEdvZDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDQ1NzBdIiAgaHJlZj0iL2FydGlzdC9jYXB0YWluLXNlbnNpYmxlIiBjbGFzcz0iYXJ0aXN0Ij5DYXB0YWluIFNlbnNpYmxlPC9hPiAtIChXaGF0IEQmIzM5O1lhIEdpdmUpIFRoZSBNYW4gV2hvJiMzOTtzIEdvdHRlbiBFdmVyeXRoaW5nPyAvIE91ciBTb3VscyB0byBZb3U8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QyNDY2Nl0iICBocmVmPSIvYXJ0aXN0L2RpcnQiIGNsYXNzPSJhcnRpc3QiPkRJUlQ8L2E+IC0gSGlyb3NoaW1hIC8gVW5lbXBsb3ltZW50PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzMxNTZdIiAgaHJlZj0iL2FydGlzdC90aGVfbW9iIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgTW9iPC9hPiAtIE5vIERvdmVzIEZseSBIZXJlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NDkwOV0iICBocmVmPSIvYXJ0aXN0L2NvbmZsaWN0IiBjbGFzcz0iYXJ0aXN0Ij5Db25mbGljdDwvYT4gLSBDb25mbGljdCAvIFdhcmdhbWVzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjEzNzhdIiAgaHJlZj0iL2FydGlzdC9ydWRpbWVudGFyeS1wZW5pIiBjbGFzcz0iYXJ0aXN0Ij5SdWRpbWVudGFyeSBQZW5pPC9hPiAtIFNhY3JpZmljZSAvIENvc21ldGljIFBsYWd1ZSAvIFN1YmR1ZWQgVmlvbGVuY2UgLyBPbmx5IEh1bWFuIC8gVGhlIEJpbGUgQmFsbCAvIEZhcmNlPC9zcGFuPiAuLi48L3RkPjwvdHI+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiA8YnIgLz48dGFibGU+PHRyIGNsYXNzPSJpbmZvYm94Ij4KICAgICAgICAgICAgPHRkIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWdfY2VsbCI+PGRpdiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtwYWRkaW5nLWJvdHRvbTpjYWxjKCAxMDAlIC8gMS4wKTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGFnZV9zZWFyY2hfaW1nIGxhenlsb2FkIiBkYXRhLXNyYz0iLy9lLnNubWMuaW8vaS8xNTAvcy9hZWMzYWIzMzMyZGMxN2YyNDE4YjU5MDA1YjM1OTIxZC8yNTEyMzA4IiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvdGQ+PHRkIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MThweDsiPjx0YWJsZSB3aWR0aD0iMTAwJSI+PHRyPjx0ZD48YSB0aXRsZT0iW0FydGlzdDVdIiAgaHJlZj0iL2FydGlzdC92YXJpb3VzLWFydGlzdHMiIGNsYXNzPSJhcnRpc3QiPlZhcmlvdXMgQXJ0aXN0czwvYT4gLSA8aT48YSB0aXRsZT0iW0FsYnVtNDc2OV0iIGhyZWY9Ii9yZWxlYXNlL2NvbXAvdmFyaW91cy1hcnRpc3RzL2EtbGlmZS1sZXNzLW9yZGluYXJ5LyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgTGlmZSBMZXNzIE9yZGluYXJ5PC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPlNlcmllczogPGEgdGl0bGU9IltEZXNjcmlwdG9yMjQ5MDFdIiBjbGFzcz0iZ2VucmUiIGhyZWY9Ii9jbGFzc2lmaWVycy9GaWxtK1NvdW5kdHJhY2tzKzE5OTUlMmQ5OS8iPkZpbG0gU291bmR0cmFja3MgMTk5NS05OTwvYT48YnIgLz5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDExM10iIGhyZWY9Ii9sYWJlbC9hYW5kbV9yZWNvcmRzLyIgY2xhc3M9ImxhYmVsIj5BJmFtcDtNIFJlY29yZHM8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4xOTk3PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLXVzIiBhbHQ9IlVuaXRlZCBTdGF0ZXMiIHRpdGxlPSJVbml0ZWQgU3RhdGVzIiAvPiA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPkNEIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWwxMTNdIiBocmVmPSIvbGFiZWwvYWFuZG1fcmVjb3Jkcy8iIGNsYXNzPSJsYWJlbCI+QSZhbXA7TSBSZWNvcmRzPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+NTQwODM3LTI8L3RkPjx0cj48dGQgY29sc3Bhbj0iNSI+PGI+VHJhY2tzOjwvYj4gPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTldIiAgaHJlZj0iL2FydGlzdC9iZWNrIiBjbGFzcz0iYXJ0aXN0Ij5CZWNrPC9hPiAtIERlYWR3ZWlnaHQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QzM10iICBocmVmPSIvYXJ0aXN0L2x1c2Npb3VzX2phY2tzb24iIGNsYXNzPSJhcnRpc3QiPkx1c2Npb3VzIEphY2tzb248L2E+IC0gTG92ZSBJcyBIZXJlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTUzXSIgIGhyZWY9Ii9hcnRpc3QvYXNoIiBjbGFzcz0iYXJ0aXN0Ij5Bc2g8L2E+IC0gQSBMaWZlIExlc3MgT3JkaW5hcnk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q1OTVdIiAgaHJlZj0iL2FydGlzdC9zbmVha2VyX3BpbXBzIiBjbGFzcz0iYXJ0aXN0Ij5TbmVha2VyIFBpbXBzPC9hPiAtIFZlbHZldCBEaXZvcmNlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0ODA1XSIgIGhyZWY9Ii9hcnRpc3QvdGhlLWZvbGstaW1wbG9zaW9uIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgRm9sayBJbXBsb3Npb248L2E+IC0gS2luZ2RvbSBvZiBMaWVzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NDFdIiAgaHJlZj0iL2FydGlzdC9yX2VfbV8iIGNsYXNzPSJhcnRpc3QiPlIuRS5NLjwvYT4gLSBMZWF2ZSAoTmV3IFZlcnNpb24pPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjI2Nl0iICBocmVmPSIvYXJ0aXN0L2ZhaXRobGVzcyIgY2xhc3M9ImFydGlzdCI+RmFpdGhsZXNzPC9hPiAtIERvbiYjMzk7dCBMZWF2ZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDExOTBdIiAgaHJlZj0iL2FydGlzdC91bmRlcndvcmxkIiBjbGFzcz0iYXJ0aXN0Ij5VbmRlcndvcmxkPC9hPiAtIE9oPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NzldIiAgaHJlZj0iL2FydGlzdC90aGUtY2FyZGlnYW5zIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgQ2FyZGlnYW5zPC9hPiAtIFdhcjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEyMV0iICBocmVmPSIvYXJ0aXN0L2VsdmlzLXByZXNsZXkiIGNsYXNzPSJhcnRpc3QiPkVsdmlzIFByZXNsZXk8L2E+IC0gQWx3YXlzIG9uIE15IE1pbmQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMzY3XSIgIGhyZWY9Ii9hcnRpc3QvYWxhYmFtYS0zIiBjbGFzcz0iYXJ0aXN0Ij5BbGFiYW1hIDM8L2E+IC0gUGVhY2UgaW4gdGhlIFZhbGxleTwvc3Bhbj4gLi4uPC90ZD48L3RyPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT4gPGJyIC8+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDEuMCk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZyBsYXp5bG9hZCIgZGF0YS1zcmM9Ii8vZS5zbm1jLmlvL2kvMTUwL3MvYWRlN2YxMDNjNjY2MmUzNzUwMTk3YjJkOTAyODliODQvNDM3NDI4MyIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTIxMjg0XSIgaHJlZj0iL3JlbGVhc2UvY29tcC92YXJpb3VzLWFydGlzdHMvYS1wZXJmZWN0LWNvdXBsZS8iIGNsYXNzPSJzZWFyY2hwYWdlIj5BIFBlcmZlY3QgQ291cGxlPC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPlNlcmllczogPGEgdGl0bGU9IltEZXNjcmlwdG9yMjQ4OTddIiBjbGFzcz0iZ2VucmUiIGhyZWY9Ii9jbGFzc2lmaWVycy9GaWxtK1NvdW5kdHJhY2tzKzE5NzUlMmQ3OS8iPkZpbG0gU291bmR0cmFja3MgMTk3NS03OTwvYT48YnIgLz5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDI3NTY1XSIgaHJlZj0iL2xhYmVsL2xpb25zX2dhdGVfcmVjb3Jkcy8iIGNsYXNzPSJsYWJlbCI+TGlvbnMgR2F0ZSBSZWNvcmRzPC9hPjxiciAvPjwvdGQ+PC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NGVtOyI+MTk3OTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij5WaW55bCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48YSB0aXRsZT0iW0xhYmVsMjc1NjVdIiBocmVmPSIvbGFiZWwvbGlvbnNfZ2F0ZV9yZWNvcmRzLyIgY2xhc3M9ImxhYmVsIj5MaW9ucyBHYXRlIFJlY29yZHM8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo2ZW07Ij5BUVIgNTI0PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjx0YWJsZT48dHIgY2xhc3M9ImluZm9ib3giPgogICAgICAgICAgICA8dGQgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZ19jZWxsIj48ZGl2IHN0eWxlPSJwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctYm90dG9tOmNhbGMoIDEwMCUgLyAxLjApOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzBlMTlhNjRmOWU3NGZhZjFiOWIzOThhMTU2MTA5NTM5LzI0MDY5OTMiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0yNTM0Ml0iIGhyZWY9Ii9yZWxlYXNlL2FsYnVtL3ZhcmlvdXMtYXJ0aXN0cy9hLXN0ZXZlLXRheWxvci10cmlidXRlLWktcHJlZGljdC1hLWNsb25lLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgU3RldmUgVGF5bG9yIFRyaWJ1dGU6IEkgUHJlZGljdCBhIENsb25lPC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPlRyaWJ1dGU6IDxhIHRpdGxlPSJbQXJ0aXN0Mjg4NV0iICBocmVmPSIvYXJ0aXN0L3N0ZXZlX3RheWxvciIgY2xhc3M9ImFydGlzdCI+U3RldmUgVGF5bG9yPC9hPjxiciAvPkxhYmVsOiA8YSB0aXRsZT0iW0xhYmVsMTM3MjBdIiBocmVmPSIvbGFiZWwvcl9lX3hfX211c2ljLyIgY2xhc3M9ImxhYmVsIj5SLkUuWC4gTXVzaWM8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4xOTk0PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPkNEIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWwxMzcyMF0iIGhyZWY9Ii9sYWJlbC9yX2VfeF9fbXVzaWMvIiBjbGFzcz0ibGFiZWwiPlIuRS5YLiBNdXNpYzwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPlJFWCA0MTAwNC0yPC90ZD48dHI+PHRkIGNvbHNwYW49IjUiPjxiPlRyYWNrczo8L2I+IDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDc4MjNdIiAgaHJlZj0iL2FydGlzdC9jaXJjbGUtb2YtZHVzdCIgY2xhc3M9ImFydGlzdCI+Q2lyY2xlIG9mIER1c3Q8L2E+IC0gQW0gSSBpbiBTeW5jPzwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDM1NDU3MF0iICBocmVmPSIvYXJ0aXN0L2hvdF9waW5rX3R1cnRsZSIgY2xhc3M9ImFydGlzdCI+SG90IFBpbmsgVHVydGxlPC9hPiAtIEEgUHJpbmNpcGxlZCBNYW48L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QyNTA0XSIgIGhyZWY9Ii9hcnRpc3Qvc3RhcmZseWVyLTU5IiBjbGFzcz0iYXJ0aXN0Ij5TdGFyZmx5ZXIgNTk8L2E+IC0gU2luIGZvciBhIFNlYXNvbjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDI4NDJdIiAgaHJlZj0iL2FydGlzdC9zaXhwZW5jZS1ub25lLXRoZS1yaWNoZXIiIGNsYXNzPSJhcnRpc3QiPlNpeHBlbmNlIE5vbmUgdGhlIFJpY2hlcjwvYT4gLSBCb3VxdWV0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0ODczNjBdIiAgaHJlZj0iL2FydGlzdC9kaWdoYXl6b29zZSIgY2xhc3M9ImFydGlzdCI+RGlnaGF5em9vc2U8L2E+IC0gU3RlZXBsZWNoYXNlIC8gSSBXYW50IHRvIEJlIGEgQ2xvbmUgTWVkbGV5IChJbnN0YW50IENha2UgTWl4KTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDUwN10iICBocmVmPSIvYXJ0aXN0L2ZsZW1pbmdfYW5kX2pvaG4iIGNsYXNzPSJhcnRpc3QiPkZsZW1pbmcgJmFtcDsgSm9objwvYT4gLSBIYXJkZXIgdG8gQmVsaWV2ZSBUaGFuIE5vdCBUbzwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDI3NDYwXSIgIGhyZWY9Ii9hcnRpc3QvYXJneWxlLXBhcmsiIGNsYXNzPSJhcnRpc3QiPkFyZ3lsZSBQYXJrPC9hPiAtIERyaXZlLCBIZSBTYWlkIChELVdlZSBEdWIpPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjY4OF0iICBocmVmPSIvYXJ0aXN0L2RlbGl2ZXJhbmNlIiBjbGFzcz0iYXJ0aXN0Ij5EZWxpdmVyYW5jZTwvYT4gLSBPbiB0aGUgRnJpdHo8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QyNjU0NDFdIiAgaHJlZj0iL2FydGlzdC90aGVfd2F5c2lkZSIgY2xhc3M9ImFydGlzdCI+VGhlIFdheXNpZGU8L2E+IC0gVG8gRm9yZ2l2ZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDUyMTRdIiAgaHJlZj0iL2FydGlzdC9icmlkZSIgY2xhc3M9ImFydGlzdCI+QnJpZGU8L2E+IC0gV2UgRG9uJiMzOTt0IE5lZWQgTm8gQ29sb3VyIENvZGU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q1NDY0XSIgIGhyZWY9Ii9hcnRpc3Qvc2FuY3RpZmllZF9nbG9yeV9tb3VudGFpbl9yZXZpdmFsX2ZhbWlseSIgY2xhc3M9ImFydGlzdCI+U2FuY3RpZmllZCBHbG9yeSBNb3VudGFpbiBSZXZpdmFsIEZhbWlseTwvYT4gLSBHdWlsdHkgYnkgQXNzb2NpYXRpb248L3NwYW4+IC4uLjwvdGQ+PC90cj48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjx0YWJsZT48dHIgY2xhc3M9ImluZm9ib3giPgogICAgICAgICAgICA8dGQgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZ19jZWxsIj48ZGl2IHN0eWxlPSJwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctYm90dG9tOmNhbGMoIDEwMCUgLyAxLjAwNzE5NDI0NDYwNDMxNjUpOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzIwN2Q4MjdjNDcxYzAxZDNmZTk3NDk5MjA5MzU3NTc3LzE3MTEyNzIiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0yNTU3Nl0iIGhyZWY9Ii9yZWxlYXNlL2NvbXAvdmFyaW91cy1hcnRpc3RzL2EtY2hhbmNlLW9wZXJhdGlvbi10aGUtam9obi1jYWdlLXRyaWJ1dGUvIiBjbGFzcz0ic2VhcmNocGFnZSI+QSBDaGFuY2UgT3BlcmF0aW9uOiBUaGUgSm9obiBDYWdlIFRyaWJ1dGU8L2E+PC9pPjxicj48ZGl2IGNsYXNzPSJjbGVhciI+IDwvZGl2Pjx0YWJsZSBjbGFzcz0ibWJnZW4iIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luLWxlZnQ6LTAuMjVlbTttYXJnaW4tdG9wOjAuNWVtO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLW1vbm8tZSkiPjx0cj4KICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+VHJpYnV0ZTogPGEgdGl0bGU9IltBcnRpc3QzNDQ5XSIgIGhyZWY9Ii9hcnRpc3Qvam9obi1jYWdlIiBjbGFzcz0iYXJ0aXN0Ij5Kb2huIENhZ2U8L2E+PGJyIC8+TGFiZWw6IDxhIHRpdGxlPSJbTGFiZWw0Njc4XSIgaHJlZj0iL2xhYmVsL2tvY2hfaW50ZXJuYXRpb25hbF9jbGFzc2ljcy8iIGNsYXNzPSJsYWJlbCI+S29jaCBJbnRlcm5hdGlvbmFsIENsYXNzaWNzPC9hPjxiciAvPjwvdGQ+PC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NGVtOyI+MTk5MzwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+PGltZyBzcmM9Ii8vZS5zbm1jLmlvLzIuNS9pbWcvaW1hZ2VzL2JsYW5rLnBuZyIgY2xhc3M9ImZsYWcgZmxhZy11cyIgYWx0PSJVbml0ZWQgU3RhdGVzIiB0aXRsZT0iVW5pdGVkIFN0YXRlcyIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij5DRCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48YSB0aXRsZT0iW0xhYmVsNDY3OF0iIGhyZWY9Ii9sYWJlbC9rb2NoX2ludGVybmF0aW9uYWxfY2xhc3NpY3MvIiBjbGFzcz0ibGFiZWwiPktvY2ggSW50ZXJuYXRpb25hbCBDbGFzc2ljczwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPjMtNzIzOC0yIFk2eDI8L3RkPjx0cj48dGQgY29sc3Bhbj0iNSI+PGI+VHJhY2tzOjwvYj4gPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbV29yazI2OTg1XSIgaHJlZj0iL3dvcmsvcGllY2VzX2Zvcl9zdHJpbmdfcXVhcnRldCIgY2xhc3M9IndvcmsgbWFqb3IgIj5FeGNlcnB0IEZyb20gVGhpcnR5IFBpZWNlcyBmb3IgU3RyaW5nIFF1YXJ0ZXQ8L2E+PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxiPjxhIHRpdGxlPSJbV29yazQ3NjE5XSIgaHJlZj0iL3dvcmsvbm9fXzFfZjIzIiBjbGFzcz0id29yayAgIj5UaHJlZSBEYW5jZXMgZm9yIFR3byBQcmVwYXJlZCBQaWFub3MsIERhbmNlICMxPC9hPjwvYj48L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QyMDg2NDhdIiAgaHJlZj0iL2FydGlzdC9qYWNrc29uLW1hYy1sb3ciIGNsYXNzPSJhcnRpc3QiPkphY2tzb24gTWFjIExvdzwvYT4gJmFtcDsgPGEgdGl0bGU9IltBcnRpc3QxMjY0MDM0XSIgIGhyZWY9Ii9hcnRpc3QvYW5uZS10YXJkb3MiIGNsYXNzPSJhcnRpc3QiPkFubmUgVGFyZG9zPC9hPiAtIEZpcnN0IEZvdXItTGFuZ3VhZ2UgV29yZCBFdmVudDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW1dvcms1MDc5NF0iIGhyZWY9Ii93b3JrL3NpeF9tZWxvZGllc192YXJpYXRpb24iIGNsYXNzPSJ3b3JrIG1ham9yICI+U2l4IE1lbG9kaWVzIFZhcmlhdGlvbiBmb3IgU29sbyBWaW9saW48L2E+PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzAxMF0iICBocmVmPSIvYXJ0aXN0L2tlbi1ub3JkaW5lIiBjbGFzcz0iYXJ0aXN0Ij5LZW4gTm9yZGluZTwvYT4gLSBBIENhZ2UgV2VudCBpbiBTZWFyY2ggb2YgYSBCaXJkPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbV29yazUwNzE1XSIgaHJlZj0iL3dvcmsvY29uY2VydF9mb3JfcGlhbm9fYW5kX29yY2hlc3RyYSIgY2xhc3M9IndvcmsgbWFqb3IgIj5UaHJlZSBTb2xvcyBmb3IgVHJ1bXBldCBGcm9tIHRoZSBDb25jZXJ0IGZvciBQaWFubyBhbmQgT3JjaGVzdHJhPC9hPjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDE4MzVdIiAgaHJlZj0iL2FydGlzdC9sYXVyaWUtYW5kZXJzb24iIGNsYXNzPSJhcnRpc3QiPkxhdXJpZSBBbmRlcnNvbjwvYT4gLSBDdW5uaW5naGFtIFN0b3JpZXMgKEF0IHRoZSBBZ2Ugb2YgVHdlbHZlLi4uKTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDI5MTldIiAgaHJlZj0iL2FydGlzdC9yeXVpY2hpLXNha2Ftb3RvIiBjbGFzcz0iYXJ0aXN0Ij5SeXVpY2hpIFNha2Ftb3RvPC9hPiAtIEhhaWt1IEZNPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbV29yazIwNDkzNF0iIGhyZWY9Ii93b3JrL2FydF9pc19zZWxmLWFsdGVyYXRpb25faXNfY2FnZV9pc19fXyIgY2xhc3M9IndvcmsgbWFqb3IgIj5BcnQgSXMgU2VsZi1BbHRlcmF0aW9uIElzIENhZ2UgSXMuLi48L2E+PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbV29yazcyOTY3XSIgaHJlZj0iL3dvcmsvd2Vid29yayIgY2xhc3M9IndvcmsgbWFqb3IgIj5XZWJ3b3JrPC9hPjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW1dvcmsyMDQ5MzVdIiBocmVmPSIvd29yay9nZW9yZ2lhX3N0b25lIiBjbGFzcz0id29yayBtYWpvciAiPkdlb3JnaWEgU3RvbmU8L2E+PC9zcGFuPiAuLi48L3RkPjwvdHI+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiA8YnIgLz48dGFibGU+PHRyIGNsYXNzPSJpbmZvYm94Ij4KICAgICAgICAgICAgPHRkIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWdfY2VsbCI+PGRpdiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtwYWRkaW5nLWJvdHRvbTpjYWxjKCAxMDAlIC8gMS4wMTgxODE4MTgxODE4MTgpOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzk2OGE4MGRhMDA4ZjhjNGFlNDIyMzg1OWQ4YTZhNDRjLzE0NjQ5NzEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0yNjM3MF0iIGhyZWY9Ii9yZWxlYXNlL2FsYnVtL3ZhcmlvdXMtYXJ0aXN0cy9hLWRpYW1vbmQtaGlkZGVuLWluLXRoZS1tb3V0aC1vZi1hLWNvcnBzZS8iIGNsYXNzPSJzZWFyY2hwYWdlIj5BIERpYW1vbmQgSGlkZGVuIGluIHRoZSBNb3V0aCBvZiBhIENvcnBzZTwvYT48L2k+PGJyPjxkaXYgY2xhc3M9ImNsZWFyIj4gPC9kaXY+PHRhYmxlIGNsYXNzPSJtYmdlbiIgc3R5bGU9ImJvcmRlcjpub25lO3BhZGRpbmc6MDttYXJnaW4tbGVmdDotMC4yNWVtO21hcmdpbi10b3A6MC41ZW07Ym9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tbW9uby1lKSI+PHRyPgogICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDMzMzRdIiBocmVmPSIvbGFiZWwvZ2lvcm5vX3BvZXRyeV9zeXN0ZW1zLyIgY2xhc3M9ImxhYmVsIj5HaW9ybm8gUG9ldHJ5IFN5c3RlbXM8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4xOTg1PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLXVzIiBhbHQ9IlVuaXRlZCBTdGF0ZXMiIHRpdGxlPSJVbml0ZWQgU3RhdGVzIiAvPiA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPlZpbnlsIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWwzMzM0XSIgaHJlZj0iL2xhYmVsL2dpb3Jub19wb2V0cnlfc3lzdGVtcy8iIGNsYXNzPSJsYWJlbCI+R2lvcm5vIFBvZXRyeSBTeXN0ZW1zPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+R1BTIDAzNTwvdGQ+PHRyPjx0ZCBjb2xzcGFuPSI1Ij48Yj5UcmFja3M6PC9iPiA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q3MF0iICBocmVmPSIvYXJ0aXN0L2h1c2tlci1kdSIgY2xhc3M9ImFydGlzdCI+SMO8c2tlciBEw7w8L2E+IC0gV29uJiMzOTt0IENoYW5nZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDU4NjhdIiAgaHJlZj0iL2FydGlzdC9kYXZpZF9qb2hhbnNlbiIgY2xhc3M9ImFydGlzdCI+RGF2aWQgSm9oYW5zZW48L2E+IC0gSm9obnNvbml1czwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDk0NTk4Ml0iICBocmVmPSIvYXJ0aXN0L2pvaG5fZ2lvcm5vX2JhbmQiIGNsYXNzPSJhcnRpc3QiPkpvaG4gR2lvcm5vIEJhbmQ8L2E+IC0gU2N1bSAmYW1wOyBTbGltZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDMwMjddIiAgaHJlZj0iL2FydGlzdC93aWxsaWFtX3NfX2J1cnJvdWdocyIgY2xhc3M9ImFydGlzdCI+V2lsbGlhbSBTLiBCdXJyb3VnaHM8L2E+IC0gRXhjZXJwdHMgRnJvbSB0aGUgV2VzdGVybiBMYW5kczogVGhlIFByZXNpZGVudCwgQ29sb25lbCBCcmFkZm9yZCwgRXZlcnltYW4gYSBHb2Q8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QzMjFdIiAgaHJlZj0iL2FydGlzdC9zb25pYy15b3V0aCIgY2xhc3M9ImFydGlzdCI+U29uaWMgWW91dGg8L2E+IC0gSGFsbG93ZWVuPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzM4NF0iICBocmVmPSIvYXJ0aXN0L2NhYmFyZXRfdm9sdGFpcmUiIGNsYXNzPSJhcnRpc3QiPkNhYmFyZXQgVm9sdGFpcmU8L2E+IC0gRGVhZCBNYW4mIzM5O3MgU2hvZXM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QzMzM1XSIgIGhyZWY9Ii9hcnRpc3QvZGlhbWFuZGFfZ2FsYXMiIGNsYXNzPSJhcnRpc3QiPkRpYW1hbmRhIEdhbMOhczwvYT4gLSBFeGNlcnB0IEZyb20gRXllcyBXaXRob3V0IEJsb29kPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTMxNF0iICBocmVmPSIvYXJ0aXN0L2NvaWwiIGNsYXNzPSJhcnRpc3QiPkNvaWw8L2E+IC0gTmVpdGhlciBIaXMgTm9yIFlvdXJzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTQ3MzFdIiAgaHJlZj0iL2FydGlzdC9taWNoYWVsLWdpcmEiIGNsYXNzPSJhcnRpc3QiPk1pY2hhZWwgR2lyYTwvYT4gLSBHYW1lPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzI2OTldIiAgaHJlZj0iL2FydGlzdC9kYXZpZC12YW4tdGllZ2hlbSIgY2xhc3M9ImFydGlzdCI+RGF2aWQgVmFuIFRpZWdoZW08L2E+IC0gT3V0IG9mIHRoZSBGcnlpbmcgUGFuPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0OTQ1OTgwXSIgIGhyZWY9Ii9hcnRpc3QvamVzc2ljYV9oYWdlZG9ybl9hbmRfdGhlX2dhbmdzdGVyX2Nob2lyIiBjbGFzcz0iYXJ0aXN0Ij5KZXNzaWNhIEhhZ2Vkb3JuICZhbXA7IHRoZSBHYW5nc3RlciBDaG9pcjwvYT4gLSBUZW5lbWVudCBMb3Zlcjwvc3Bhbj4gLi4uPC90ZD48L3RyPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT4gPGJyIC8+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDEuMCk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZyBsYXp5bG9hZCIgZGF0YS1zcmM9Ii8vZS5zbm1jLmlvL2kvMTUwL3MvOGZjMzM4NDFkMmI3NmYyMWFjNWM5MzBjYmE0ZjU5MGUvMjMzODg2MCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTI2NDAzXSIgaHJlZj0iL3JlbGVhc2UvYWxidW0vdmFyaW91cy1hcnRpc3RzL2EtdGVzdGltb25pYWwtZGlubmVyLXRoZS1zb25ncy1vZi14dGMvIiBjbGFzcz0ic2VhcmNocGFnZSI+QSBUZXN0aW1vbmlhbCBEaW5uZXI6IFRoZSBTb25ncyBvZiBYVEM8L2E+PC9pPjxicj48ZGl2IGNsYXNzPSJjbGVhciI+IDwvZGl2Pjx0YWJsZSBjbGFzcz0ibWJnZW4iIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luLWxlZnQ6LTAuMjVlbTttYXJnaW4tdG9wOjAuNWVtO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLW1vbm8tZSkiPjx0cj4KICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+VHJpYnV0ZTogPGEgdGl0bGU9IltBcnRpc3Q2M10iICBocmVmPSIvYXJ0aXN0L3h0YyIgY2xhc3M9ImFydGlzdCI+WFRDPC9hPjxiciAvPkxhYmVsOiA8YSB0aXRsZT0iW0xhYmVsNDkwXSIgaHJlZj0iL2xhYmVsL3RoaXJzdHlfZWFyX3JlY29yZGluZ3MvIiBjbGFzcz0ibGFiZWwiPlRoaXJzdHkgRWFyIFJlY29yZGluZ3M8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4xOTk1PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLXVzIiBhbHQ9IlVuaXRlZCBTdGF0ZXMiIHRpdGxlPSJVbml0ZWQgU3RhdGVzIiAvPiA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPkNEIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWw0OTBdIiBocmVmPSIvbGFiZWwvdGhpcnN0eV9lYXJfcmVjb3JkaW5ncy8iIGNsYXNzPSJsYWJlbCI+VGhpcnN0eSBFYXIgUmVjb3JkaW5nczwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPlRISSA1NzAxOS4yPC90ZD48dHI+PHRkIGNvbHNwYW49IjUiPjxiPlRyYWNrczo8L2I+IDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDc5Nl0iICBocmVmPSIvYXJ0aXN0L2ZyZWVkeS1qb2huc3RvbiIgY2xhc3M9ImFydGlzdCI+RnJlZWR5IEpvaG5zdG9uPC9hPiAtIEVhcm4gRW5vdWdoIGZvciBVczwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEwNjldIiAgaHJlZj0iL2FydGlzdC9zcGFjZWhvZyIgY2xhc3M9ImFydGlzdCI+U3BhY2Vob2c8L2E+IC0gU2Vuc2VzIFdvcmtpbmcgT3ZlcnRpbWU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMTE5XSIgIGhyZWY9Ii9hcnRpc3QvY3Jhc2hfdGVzdF9kdW1taWVzIiBjbGFzcz0iYXJ0aXN0Ij5DcmFzaCBUZXN0IER1bW1pZXM8L2E+IC0gQWxsIFlvdSBQcmV0dHkgR2lybHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q0MTRdIiAgaHJlZj0iL2FydGlzdC90aGVfdmVydmVfcGlwZSIgY2xhc3M9ImFydGlzdCI+VGhlIFZlcnZlIFBpcGU8L2E+IC0gV2FrZSBVcDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEyMTBdIiAgaHJlZj0iL2FydGlzdC90aGUtcmVtYnJhbmR0cyIgY2xhc3M9ImFydGlzdCI+VGhlIFJlbWJyYW5kdHM8L2E+IC0gTWFraW5nIFBsYW5zIGZvciBOaWdlbDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDQ2XSIgIGhyZWY9Ii9hcnRpc3Qvc2FyYWhfbWNsYWNobGFuIiBjbGFzcz0iYXJ0aXN0Ij5TYXJhaCBNY0xhY2hsYW48L2E+IC0gRGVhciBHb2Q8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMDk3M10iICBocmVmPSIvYXJ0aXN0L3J1YmVuLWJsYWRlcyIgY2xhc3M9ImFydGlzdCI+UnViw6luIEJsYWRlczwvYT4gLSBUaGUgTWFuIFdobyBTYWlsZWQgQXJvdW5kIEhpcyBTb3VsPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPlAuIEh1eCAtIEFub3RoZXIgU2F0ZWxsaXRlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzQ1XSIgIGhyZWY9Ii9hcnRpc3QvdGhleS1taWdodC1iZS1naWFudHMiIGNsYXNzPSJhcnRpc3QiPlRoZXkgTWlnaHQgQmUgR2lhbnRzPC9hPiAtIDI1IE8mIzM5O0Nsb2NrPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPlRlcnJ5ICZhbXA7IFRoZSBMb3ZlbWVuIFtha2EgPGEgdGl0bGU9IltBcnRpc3Q2M10iICBocmVmPSIvYXJ0aXN0L3h0YyIgY2xhc3M9ImFydGlzdCI+WFRDPC9hPl0gLSBUaGUgR29vZCBUaGluZ3M8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QzMzJdIiAgaHJlZj0iL2FydGlzdC9qb2UtamFja3NvbiIgY2xhc3M9ImFydGlzdCI+Sm9lIEphY2tzb248L2E+IC0gU3RhdHVlIG9mIExpYmVydHk8L3NwYW4+IC4uLjwvdGQ+PC90cj48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjx0YWJsZT48dHIgY2xhc3M9ImluZm9ib3giPgogICAgICAgICAgICA8dGQgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZ19jZWxsIj48ZGl2IHN0eWxlPSJwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctYm90dG9tOmNhbGMoIDEwMCUgLyAxLjApOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzcyNGFmMTdmYjM2MzViNDZjY2U3NGNkMzk5NTRlYWFkLzM0OTAzNTYiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0yNjQxOV0iIGhyZWY9Ii9yZWxlYXNlL2NvbXAvdmFyaW91cy1hcnRpc3RzL2EtbWVhbnMtdG8tYW4tZW5kLXRoZS1tdXNpYy1vZi1qb3ktZGl2aXNpb24vIiBjbGFzcz0ic2VhcmNocGFnZSI+QSBNZWFucyB0byBhbiBFbmQ6IFRoZSBNdXNpYyBvZiBKb3kgRGl2aXNpb248L2E+PC9pPjxicj48ZGl2IGNsYXNzPSJjbGVhciI+IDwvZGl2Pjx0YWJsZSBjbGFzcz0ibWJnZW4iIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luLWxlZnQ6LTAuMjVlbTttYXJnaW4tdG9wOjAuNWVtO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLW1vbm8tZSkiPjx0cj4KICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+VHJpYnV0ZTogPGEgdGl0bGU9IltBcnRpc3QyMTJdIiAgaHJlZj0iL2FydGlzdC9qb3ktZGl2aXNpb24iIGNsYXNzPSJhcnRpc3QiPkpveSBEaXZpc2lvbjwvYT48YnIgLz5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDE0OV0iIGhyZWY9Ii9sYWJlbC92aXJnaW5fcmVjb3Jkcy8iIGNsYXNzPSJsYWJlbCI+VmlyZ2luIFJlY29yZHM8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4xOTk1PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLXVzIiBhbHQ9IlVuaXRlZCBTdGF0ZXMiIHRpdGxlPSJVbml0ZWQgU3RhdGVzIiAvPiA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPkNEIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWwxNDldIiBocmVmPSIvbGFiZWwvdmlyZ2luX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPlZpcmdpbiBSZWNvcmRzPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+NzI0MyA4IDQwNjYwIDIgNDwvdGQ+PHRyPjx0ZCBjb2xzcGFuPSI1Ij48Yj5UcmFja3M6PC9iPiA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QyMzA0XSIgIGhyZWY9Ii9hcnRpc3QvZ2lybHNfYWdhaW5zdF9ib3lzIiBjbGFzcz0iYXJ0aXN0Ij5HaXJscyBBZ2FpbnN0IEJveXM8L2E+IC0gU2hlJiMzOTtzIExvc3QgQ29udHJvbDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDIyNjA1MV0iICBocmVmPSIvYXJ0aXN0L2hvbmV5bW9vbl9zdGl0Y2giIGNsYXNzPSJhcnRpc3QiPkhvbmV5bW9vbiBTdGl0Y2g8L2E+IC0gRGF5IG9mIHRoZSBMb3Jkczwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDIxOV0iICBocmVmPSIvYXJ0aXN0L21vYnkiIGNsYXNzPSJhcnRpc3QiPk1vYnk8L2E+IC0gTmV3IERhd24gRmFkZXM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxNjMzXSIgIGhyZWY9Ii9hcnRpc3QvbG93IiBjbGFzcz0iYXJ0aXN0Ij5Mb3c8L2E+IC0gVHJhbnNtaXNzaW9uPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NTE5Nl0iICBocmVmPSIvYXJ0aXN0L2NvZGVpbmUiIGNsYXNzPSJhcnRpc3QiPkNvZGVpbmU8L2E+IC0gQXRtb3NwaGVyZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDI2OTVdIiAgaHJlZj0iL2FydGlzdC9mdXJ0aGVyIiBjbGFzcz0iYXJ0aXN0Ij5GdXJ0aGVyPC9hPiAtIEluc2lnaHQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q2Mzg1Ml0iICBocmVmPSIvYXJ0aXN0L3N0YW50b25fbWlyYW5kYSIgY2xhc3M9ImFydGlzdCI+U3RhbnRvbiBNaXJhbmRhPC9hPiAtIExvdmUgV2lsbCBUZWFyIFVzIEFwYXJ0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjM0MzY3XSIgIGhyZWY9Ii9hcnRpc3Qvc3RhcmNoaWxkcmVuIiBjbGFzcz0iYXJ0aXN0Ij5TdGFyY2hpbGRyZW48L2E+IC0gSXNvbGF0aW9uPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0OTQzM10iICBocmVmPSIvYXJ0aXN0L2tlbmRyYV9zbWl0aCIgY2xhc3M9ImFydGlzdCI+S2VuZHJhIFNtaXRoPC9hPiAtIEhlYXJ0IGFuZCBTb3VsPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjQzMl0iICBocmVmPSIvYXJ0aXN0L3ZlcnN1cyIgY2xhc3M9ImFydGlzdCI+VmVyc3VzPC9hPiAtIFR3ZW50eSBGb3VyIEhvdXJzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjM0MzY4XSIgIGhyZWY9Ii9hcnRpc3QvZGVzZXJ0X3N0b3JtX2YxIiBjbGFzcz0iYXJ0aXN0Ij5EZXNlcnQgU3Rvcm08L2E+IC0gV2Fyc2F3PC9zcGFuPiAuLi48L3RkPjwvdHI+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiA8YnIgLz48dGFibGU+PHRyIGNsYXNzPSJpbmZvYm94Ij4KICAgICAgICAgICAgPHRkIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWdfY2VsbCI+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTI3Njk4XSIgaHJlZj0iL3JlbGVhc2UvY29tcC92YXJpb3VzLWFydGlzdHMvYS13b21hbnMtdm9pY2UvIiBjbGFzcz0ic2VhcmNocGFnZSI+QSBXb21hbiYjMzk7cyBWb2ljZTwvYT48L2k+PGJyPjxkaXYgY2xhc3M9ImNsZWFyIj4gPC9kaXY+PHRhYmxlIGNsYXNzPSJtYmdlbiIgc3R5bGU9ImJvcmRlcjpub25lO3BhZGRpbmc6MDttYXJnaW4tbGVmdDotMC4yNWVtO21hcmdpbi10b3A6MC41ZW07Ym9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tbW9uby1lKSI+PHRyPgogICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDIwOTM1XSIgaHJlZj0iL2xhYmVsL3V0dl9yZWNvcmRzLyIgY2xhc3M9ImxhYmVsIj5VVFYgUmVjb3JkczwvYT48YnIgLz48L3RkPjwvdHI+PHRyPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjRlbTsiPjIwMDA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPjxpbWcgc3JjPSIvL2Uuc25tYy5pby8yLjUvaW1nL2ltYWdlcy9ibGFuay5wbmciIGNsYXNzPSJmbGFnIGZsYWctdXMiIGFsdD0iVW5pdGVkIFN0YXRlcyIgdGl0bGU9IlVuaXRlZCBTdGF0ZXMiIC8+IDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+Q0QgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6OWVtOyI+PGEgdGl0bGU9IltMYWJlbDIwOTM1XSIgaHJlZj0iL2xhYmVsL3V0dl9yZWNvcmRzLyIgY2xhc3M9ImxhYmVsIj5VVFYgUmVjb3JkczwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPjMxNCA1NDUgMTI3LTI8L3RkPjx0cj48dGQgY29sc3Bhbj0iNSI+PGI+VHJhY2tzOjwvYj4gPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTQ5NF0iICBocmVmPSIvYXJ0aXN0L2FyZXRoYS1mcmFua2xpbiIgY2xhc3M9ImFydGlzdCI+QXJldGhhIEZyYW5rbGluPC9hPiAtIFJlc3BlY3Q8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q5MjgyXSIgIGhyZWY9Ii9hcnRpc3QvdGhlX3N0YXBsZV9zaW5nZXJzIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgU3RhcGxlIFNpbmdlcnM8L2E+IC0gSSYjMzk7bGwgVGFrZSBZb3UgVGhlcmU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q5NDQ4XSIgIGhyZWY9Ii9hcnRpc3QvZ2xhZHlzX2tuaWdodF9hbmRfdGhlX3BpcHMiIGNsYXNzPSJhcnRpc3QiPkdsYWR5cyBLbmlnaHQgJmFtcDsgVGhlIFBpcHM8L2E+IC0gSWYgSSBXZXJlIFlvdXIgV29tYW48L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q4Mzc5XSIgIGhyZWY9Ii9hcnRpc3QvcnVmdXMiIGNsYXNzPSJhcnRpc3QiPlJ1ZnVzICZhbXA7IENoYWthIEtoYW48L2E+IC0gU3dlZXQgVGhpbmc8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMzAzMV0iICBocmVmPSIvYXJ0aXN0L3N0ZXBoYW5pZV9taWxscyIgY2xhc3M9ImFydGlzdCI+U3RlcGhhbmllIE1pbGxzPC9hPiAtIE5ldmVyIEtuZXcgTG92ZSBMaWtlIFRoaXMgQmVmb3JlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0OTIyOV0iICBocmVmPSIvYXJ0aXN0L2dsb3JpYV9nYXlub3IiIGNsYXNzPSJhcnRpc3QiPkdsb3JpYSBHYXlub3I8L2E+IC0gSSBXaWxsIFN1cnZpdmU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxNjNdIiAgaHJlZj0iL2FydGlzdC9ibG9uZGllIiBjbGFzcz0iYXJ0aXN0Ij5CbG9uZGllPC9hPiAtIEhlYXJ0IG9mIEdsYXNzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTc1N10iICBocmVmPSIvYXJ0aXN0L2Nhcmx5LXNpbW9uIiBjbGFzcz0iYXJ0aXN0Ij5DYXJseSBTaW1vbjwvYT4gLSBZb3UmIzM5O3JlIFNvIFZhaW48L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxNTQ0XSIgIGhyZWY9Ii9hcnRpc3Qvam9hbi1vc2Jvcm5lIiBjbGFzcz0iYXJ0aXN0Ij5Kb2FuIE9zYm9ybmU8L2E+IC0gU3QuIFRoZXJlc2E8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q4MjJdIiAgaHJlZj0iL2FydGlzdC9wYXR0aS1zbWl0aCIgY2xhc3M9ImFydGlzdCI+UGF0dGkgU21pdGggR3JvdXA8L2E+IC0gQmVjYXVzZSB0aGUgTmlnaHQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q0NDNdIiAgaHJlZj0iL2FydGlzdC9wYXRfYmVuYXRhciIgY2xhc3M9ImFydGlzdCI+UGF0IEJlbmF0YXI8L2E+IC0gV2UgQmVsb25nPC9zcGFuPiAuLi48L3RkPjwvdHI+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiA8YnIgLz48dGFibGU+PHRyIGNsYXNzPSJpbmZvYm94Ij4KICAgICAgICAgICAgPHRkIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWdfY2VsbCI+PGRpdiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtwYWRkaW5nLWJvdHRvbTpjYWxjKCAxMDAlIC8gMC45ODAzOTIxNTY4NjI3NDUxKTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGFnZV9zZWFyY2hfaW1nIGxhenlsb2FkIiBkYXRhLXNyYz0iLy9lLnNubWMuaW8vaS8xNTAvcy84OTlkMThlZGRkZWZhMGJiMDQwMTQ5NzBkMDQ5YWJhOC8xMzI2ODUyIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvdGQ+PHRkIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MThweDsiPjx0YWJsZSB3aWR0aD0iMTAwJSI+PHRyPjx0ZD48YSB0aXRsZT0iW0FydGlzdDVdIiAgaHJlZj0iL2FydGlzdC92YXJpb3VzLWFydGlzdHMiIGNsYXNzPSJhcnRpc3QiPlZhcmlvdXMgQXJ0aXN0czwvYT4gLSA8aT48YSB0aXRsZT0iW0FsYnVtMjgxMTRdIiBocmVmPSIvcmVsZWFzZS9jb21wL3ZhcmlvdXMtYXJ0aXN0cy9hLXJlYWwtY29vbC10aW1lLWRpc3RvcnRlZC1zb3VuZHMtZnJvbS10aGUtbm9ydGgvIiBjbGFzcz0ic2VhcmNocGFnZSI+QSBSZWFsIENvb2wgVGltZSAtIERpc3RvcnRlZCBTb3VuZHMgRnJvbSB0aGUgTm9ydGg8L2E+PC9pPjxicj48ZGl2IGNsYXNzPSJjbGVhciI+IDwvZGl2Pjx0YWJsZSBjbGFzcz0ibWJnZW4iIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luLWxlZnQ6LTAuMjVlbTttYXJnaW4tdG9wOjAuNWVtO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLW1vbm8tZSkiPjx0cj4KICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+TGFiZWw6IDxhIHRpdGxlPSJbTGFiZWw3NTk2XSIgaHJlZj0iL2xhYmVsL2FtaWdvX211c2lrLyIgY2xhc3M9ImxhYmVsIj5BbWlnbyBNdXNpazwvYT48YnIgLz48L3RkPjwvdHI+PHRyPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjRlbTsiPjE5ODU8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+VmlueWwgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6OWVtOyI+PGEgdGl0bGU9IltMYWJlbDc1OTZdIiBocmVmPSIvbGFiZWwvYW1pZ29fbXVzaWsvIiBjbGFzcz0ibGFiZWwiPkFtaWdvIE11c2lrPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+QU1MUCAyMDA3PC90ZD48dHI+PHRkIGNvbHNwYW49IjUiPjxiPlRyYWNrczo8L2I+IDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDIzODhdIiAgaHJlZj0iL2FydGlzdC90aGUtbm9tYWRzLTQiIGNsYXNzPSJhcnRpc3QiPlRoZSBOb21hZHM8L2E+IC0gQSBSZWFsIENvb2wgVGltZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDY4ODRdIiAgaHJlZj0iL2FydGlzdC93aWxtZXJfeCIgY2xhc3M9ImFydGlzdCI+V2lsbWVyIFg8L2E+IC0gTW90b3JiaWtlIERyaXZpbiYjMzk7PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTMyMDM4XSIgIGhyZWY9Ii9hcnRpc3QvZHJfX3lvZ2FtaSIgY2xhc3M9ImFydGlzdCI+RHIuIFlvZ2FtaTwvYT4gLSBOaWdodG1hcmUgQmlyZHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q5NDg0XSIgIGhyZWY9Ii9hcnRpc3QvdGhlX2NyZWVwcyIgY2xhc3M9ImFydGlzdCI+VGhlIENyZWVwczwvYT4gLSBZb3UmIzM5O3JlIEdvbm5hIE5lZWQgTXkgTG92aW4mIzM5Ozwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDM2NTY5XSIgIGhyZWY9Ii9hcnRpc3QvaGlkZGVuX2NoYXJtcyIgY2xhc3M9ImFydGlzdCI+SGlkZGVuIENoYXJtczwvYT4gLSBQbGVhc2UgR2l2ZSBNZSBTb21ldGhpbmc8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QzMjY2MV0iICBocmVmPSIvYXJ0aXN0L3RoZV93YXl3YXJkX3NvdWxzIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgV2F5d2FyZCBTb3VsczwvYT4gLSBJbnNpZGUgWW91ciBNaW5kPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjAyOTc2XSIgIGhyZWY9Ii9hcnRpc3Qvb2NjYXNpb25hbF9kZWFkX2ZseXMiIGNsYXNzPSJhcnRpc3QiPk9jY2FzaW9uYWwgRGVhZCBGbHlzPC9hPiDigJMgRGlydDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDk1OTQ0XSIgIGhyZWY9Ii9hcnRpc3QvdGhlX2JvdHRsZV91cHMiIGNsYXNzPSJhcnRpc3QiPlRoZSBCb3R0bGUgVXBzPC9hPiAtIEJvdHRsZSBCZWF0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTA1MzIxXSIgIGhyZWY9Ii9hcnRpc3Qvd2F0ZXJtZWxvbl9tZW4iIGNsYXNzPSJhcnRpc3QiPldhdGVybWVsb24gTWVuPC9hPiAtIEJhY2sgaW4gTXkgRHJlYW1zPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTMyMDQzXSIgIGhyZWY9Ii9hcnRpc3Qvc2xvYnN0ZXIiIGNsYXNzPSJhcnRpc3QiPlNsb2JzdGVyPC9hPiAtIFN1ZGRlbiBEZWF0aDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDIwNzI5XSIgIGhyZWY9Ii9hcnRpc3QvcHJvYmxlbSIgY2xhc3M9ImFydGlzdCI+UHJvYmxlbTwvYT4gLSBIaWdoZXIgR3JvdW5kPC9zcGFuPiAuLi48L3RkPjwvdHI+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiA8YnIgLz48dGFibGU+PHRyIGNsYXNzPSJpbmZvYm94Ij4KICAgICAgICAgICAgPHRkIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWdfY2VsbCI+PGRpdiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtwYWRkaW5nLWJvdHRvbTpjYWxjKCAxMDAlIC8gMS4wNDg2ODkxMzg1NzY3NzkpOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzUxNjAwMmEyYWZlMzJkODNiMmQwZDllZTBiOWE0ZTVmLzEyNTczNzQiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0yOTYzNV0iIGhyZWY9Ii9yZWxlYXNlL2FsYnVtL3ZhcmlvdXMtYXJ0aXN0cy9hLXRyaWJ1dGUtdG8tYWFsaXlhaC8iIGNsYXNzPSJzZWFyY2hwYWdlIj5BIFRyaWJ1dGUgdG8gQWFsaXlhaDwvYT48L2k+PGJyPjxkaXYgY2xhc3M9ImNsZWFyIj4gPC9kaXY+PHRhYmxlIGNsYXNzPSJtYmdlbiIgc3R5bGU9ImJvcmRlcjpub25lO3BhZGRpbmc6MDttYXJnaW4tbGVmdDotMC4yNWVtO21hcmdpbi10b3A6MC41ZW07Ym9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tbW9uby1lKSI+PHRyPgogICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij5UcmlidXRlOiA8YSB0aXRsZT0iW0FydGlzdDE1NzBdIiAgaHJlZj0iL2FydGlzdC9hYWxpeWFoIiBjbGFzcz0iYXJ0aXN0Ij5BYWxpeWFoPC9hPjxiciAvPkxhYmVsOiA8YSB0aXRsZT0iW0xhYmVsMTE1NzddIiBocmVmPSIvbGFiZWwvYmlnX2V5ZV9tdXNpYy8iIGNsYXNzPSJsYWJlbCI+QmlnIEV5ZSBNdXNpYzwvYT48YnIgLz48L3RkPjwvdHI+PHRyPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjRlbTsiPjIwMDI8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+Q0QgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6OWVtOyI+PGEgdGl0bGU9IltMYWJlbDExNTc3XSIgaHJlZj0iL2xhYmVsL2JpZ19leWVfbXVzaWMvIiBjbGFzcz0ibGFiZWwiPkJpZyBFeWUgTXVzaWM8L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo2ZW07Ij5CR0VZIDQyMjg8L3RkPjx0cj48dGQgY29sc3Bhbj0iNSI+PGI+VHJhY2tzOjwvYj4gPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPkJhY2sgJmFtcDsgRm9ydGg8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+QXQgWW91ciBCZXN0IChZb3UgQXJlIExvdmUpPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPkFnZSBBaW4mIzM5O3QgTm90aGluZyBCdXQgYSBOdW1iZXI8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+R290IHRvIEdpdmUgSXQgVXA8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+T25lIEkgR2F2ZSBNeSBIZWFydCBUbzwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij5Kb3VybmV5IHRvIHRoZSBQYXN0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPkFyZSBZb3UgVGhhdCBTb21lYm9keT88L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+VHJ5IEFnYWluPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPkkgRG9uJiMzOTt0IFdhbm5hPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPldlIE5lZWQgYSBSZXNvbHV0aW9uPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPk1vcmUgVGhhbiBhIFdvbWFuPC9zcGFuPiAuLi48L3RkPjwvdHI+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiA8YnIgLz48dGFibGU+PHRyIGNsYXNzPSJpbmZvYm94Ij4KICAgICAgICAgICAgPHRkIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWdfY2VsbCI+PGRpdiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtwYWRkaW5nLWJvdHRvbTpjYWxjKCAxMDAlIC8gMS4xMTk0MDI5ODUwNzQ2MjY4KTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGFnZV9zZWFyY2hfaW1nIGxhenlsb2FkIiBkYXRhLXNyYz0iLy9lLnNubWMuaW8vaS8xNTAvcy83ZmFkYjI0MGI1NmVkODQwYWRjYTkxYmU4NTBlNGRjNy8xNDMxNTg3IiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvdGQ+PHRkIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MThweDsiPjx0YWJsZSB3aWR0aD0iMTAwJSI+PHRyPjx0ZD48YSB0aXRsZT0iW0FydGlzdDVdIiAgaHJlZj0iL2FydGlzdC92YXJpb3VzLWFydGlzdHMiIGNsYXNzPSJhcnRpc3QiPlZhcmlvdXMgQXJ0aXN0czwvYT4gLSA8aT48YSB0aXRsZT0iW0FsYnVtMzAwMTFdIiBocmVmPSIvcmVsZWFzZS9hbGJ1bS92YXJpb3VzLWFydGlzdHMvYS1jZWxsYXJmdWwtb2YtbW90b3duLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgQ2VsbGFyZnVsIG9mIE1vdG93biE8L2E+PC9pPjxicj48ZGl2IGNsYXNzPSJjbGVhciI+IDwvZGl2Pjx0YWJsZSBjbGFzcz0ibWJnZW4iIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luLWxlZnQ6LTAuMjVlbTttYXJnaW4tdG9wOjAuNWVtO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLW1vbm8tZSkiPjx0cj4KICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+TGFiZWw6IDxhIHRpdGxlPSJbTGFiZWw2NTddIiBocmVmPSIvbGFiZWwvdW5pdmVyc2FsX211c2ljLyIgY2xhc3M9ImxhYmVsIj5Vbml2ZXJzYWwgTXVzaWM8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4yMDAyPC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLWdiIiBhbHQ9IlVuaXRlZCBLaW5nZG9tIiB0aXRsZT0iVW5pdGVkIEtpbmdkb20iIC8+IDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+Q0QgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6OWVtOyI+PGEgdGl0bGU9IltMYWJlbDY1N10iIGhyZWY9Ii9sYWJlbC91bml2ZXJzYWxfbXVzaWMvIiBjbGFzcz0ibGFiZWwiPlVuaXZlcnNhbCBNdXNpYzwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPjU0NCA2MTktMjwvdGQ+PHRyPjx0ZCBjb2xzcGFuPSI1Ij48Yj5UcmFja3M6PC9iPiA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxNzM3NF0iICBocmVmPSIvYXJ0aXN0L2JhcmJhcmFfbWNuYWlyIiBjbGFzcz0iYXJ0aXN0Ij5CYXJiYXJhIE1jTmFpcjwvYT4gLSBCYWJ5IGEgR28tR288L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q4NTg3XSIgIGhyZWY9Ii9hcnRpc3QvYnJlbmRhLWhvbGxvd2F5IiBjbGFzcz0iYXJ0aXN0Ij5CcmVuZGEgSG9sbG93YXk8L2E+IC0gQWxsIE15IExvdmU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMDM0NF0iICBocmVmPSIvYXJ0aXN0L2VhcmxfdmFuX2R5a2UiIGNsYXNzPSJhcnRpc3QiPkVhcmwgVmFuIER5a2U8L2E+IC0gSGUgV2FzIFJlYWxseSBTYXlpbiYjMzk7IFNvbWV0aGluJiMzOTs8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMTU3OF0iICBocmVmPSIvYXJ0aXN0L3RoZS1jb250b3VycyIgY2xhc3M9ImFydGlzdCI+VGhlIENvbnRvdXJzPC9hPiAtIERhbmdlciwgSGVhcnRicmVhayBEZWFkIEFoZWFkPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0OTI5Ml0iICBocmVmPSIvYXJ0aXN0L2NocmlzX2NsYXJrIiBjbGFzcz0iYXJ0aXN0Ij5DaHJpcyBDbGFyazwvYT4gLSBEbyBJIExvdmUgWW91IChJbmRlZWQgSSBEbyk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMTU3OF0iICBocmVmPSIvYXJ0aXN0L3RoZS1jb250b3VycyIgY2xhc3M9ImFydGlzdCI+VGhlIENvbnRvdXJzPC9hPiAtIEJhYnkgSGl0IGFuZCBSdW48L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q4NTg3XSIgIGhyZWY9Ii9hcnRpc3QvYnJlbmRhLWhvbGxvd2F5IiBjbGFzcz0iYXJ0aXN0Ij5CcmVuZGEgSG9sbG93YXk8L2E+IC0gSG93IENhbiBJPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTE1NzhdIiAgaHJlZj0iL2FydGlzdC90aGUtY29udG91cnMiIGNsYXNzPSJhcnRpc3QiPlRoZSBDb250b3VyczwvYT4gLSBJIExpa2UgRXZlcnl0aGluZyBBYm91dCBZb3U8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q4NTMyXSIgIGhyZWY9Ii9hcnRpc3QvdGFtbWktdGVycmVsbCIgY2xhc3M9ImFydGlzdCI+VGFtbWkgVGVycmVsbDwvYT4gLSBBbGwgSSBEbyBJcyBUaGluayBBYm91dCBZb3U8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxOTcyM10iICBocmVmPSIvYXJ0aXN0L2ppbW15X3J1ZmZpbiIgY2xhc3M9ImFydGlzdCI+SmltbXkgUnVmZmluPC9hPiAtIEx1Y2t5IEx1Y2t5IE1lPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTk3MjNdIiAgaHJlZj0iL2FydGlzdC9qaW1teV9ydWZmaW4iIGNsYXNzPSJhcnRpc3QiPkppbW15IFJ1ZmZpbjwvYT4gLSBPbiB0aGUgQXZlbnVlIChJbiB0aGUgTmVpZ2hib3VyaG9vZCk8L3NwYW4+IC4uLjwvdGQ+PC90cj48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjx0YWJsZT48dHIgY2xhc3M9ImluZm9ib3giPgogICAgICAgICAgICA8dGQgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZ19jZWxsIj48ZGl2IHN0eWxlPSJwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctYm90dG9tOmNhbGMoIDEwMCUgLyAwLjk4KTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGFnZV9zZWFyY2hfaW1nIGxhenlsb2FkIiBkYXRhLXNyYz0iLy9lLnNubWMuaW8vaS8xNTAvcy9lMGM0NTFhZGY5YjE4ZjBiMWNkMTRjNmMxNWMxMGU5MS8xMjE2NDIyIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvdGQ+PHRkIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MThweDsiPjx0YWJsZSB3aWR0aD0iMTAwJSI+PHRyPjx0ZD48YSB0aXRsZT0iW0FydGlzdDVdIiAgaHJlZj0iL2FydGlzdC92YXJpb3VzLWFydGlzdHMiIGNsYXNzPSJhcnRpc3QiPlZhcmlvdXMgQXJ0aXN0czwvYT4gLSA8aT48YSB0aXRsZT0iW0FsYnVtMzAyODJdIiBocmVmPSIvcmVsZWFzZS9hbGJ1bS92YXJpb3VzLWFydGlzdHMvYS12ZXJ5LXNwZWNpYWwtY2hyaXN0bWFzLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgVmVyeSBTcGVjaWFsIENocmlzdG1hczwvYT48L2k+PGJyPjxkaXYgY2xhc3M9ImNsZWFyIj4gPC9kaXY+PHRhYmxlIGNsYXNzPSJtYmdlbiIgc3R5bGU9ImJvcmRlcjpub25lO3BhZGRpbmc6MDttYXJnaW4tbGVmdDotMC4yNWVtO21hcmdpbi10b3A6MC41ZW07Ym9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tbW9uby1lKSI+PHRyPgogICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij5TZXJpZXM6IDxhIHRpdGxlPSJbRGVzY3JpcHRvcjIzMzY0XSIgY2xhc3M9ImdlbnJlIiBocmVmPSIvY2xhc3NpZmllcnMvQStWZXJ5K1NwZWNpYWwrQ2hyaXN0bWFzLyI+QSBWZXJ5IFNwZWNpYWwgQ2hyaXN0bWFzPC9hPjxiciAvPkxhYmVsOiA8YSB0aXRsZT0iW0xhYmVsMTEzXSIgaHJlZj0iL2xhYmVsL2FhbmRtX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPkEmYW1wO00gUmVjb3JkczwvYT48YnIgLz48L3RkPjwvdHI+PHRyPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjRlbTsiPjE5ODc8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPjxpbWcgc3JjPSIvL2Uuc25tYy5pby8yLjUvaW1nL2ltYWdlcy9ibGFuay5wbmciIGNsYXNzPSJmbGFnIGZsYWctdXMiIGFsdD0iVW5pdGVkIFN0YXRlcyIgdGl0bGU9IlVuaXRlZCBTdGF0ZXMiIC8+IDxpbWcgc3JjPSIvL2Uuc25tYy5pby8yLjUvaW1nL2ltYWdlcy9ibGFuay5wbmciIGNsYXNzPSJmbGFnIGZsYWctY2EiIGFsdD0iQ2FuYWRhIiB0aXRsZT0iQ2FuYWRhIiAvPiA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPlZpbnlsIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWwxMTNdIiBocmVmPSIvbGFiZWwvYWFuZG1fcmVjb3Jkcy8iIGNsYXNzPSJsYWJlbCI+QSZhbXA7TSBSZWNvcmRzPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+U1AgMzkxMTwvdGQ+PHRyPjx0ZCBjb2xzcGFuPSI1Ij48Yj5UcmFja3M6PC9iPiA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q0NjFdIiAgaHJlZj0iL2FydGlzdC90aGVfcG9pbnRlcl9zaXN0ZXJzIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgUG9pbnRlciBTaXN0ZXJzPC9hPiAtIFNhbnRhIENsYXVzIElzIENvbWluZyB0byBUb3duPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTk3OV0iICBocmVmPSIvYXJ0aXN0L2V1cnl0aG1pY3MiIGNsYXNzPSJhcnRpc3QiPkV1cnl0aG1pY3M8L2E+IC0gV2ludGVyIFdvbmRlcmxhbmQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QyODQ0XSIgIGhyZWY9Ii9hcnRpc3Qvd2hpdG5leV9ob3VzdG9uIiBjbGFzcz0iYXJ0aXN0Ij5XaGl0bmV5IEhvdXN0b248L2E+IC0gRG8gWW91IEhlYXIgV2hhdCBJIEhlYXI/PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTEzNV0iICBocmVmPSIvYXJ0aXN0L2JydWNlLXNwcmluZ3N0ZWVuIiBjbGFzcz0iYXJ0aXN0Ij5CcnVjZSBTcHJpbmdzdGVlbiAmYW1wOyBUaGUgRSBTdHJlZXQgQmFuZDwvYT4gLSBNZXJyeSBDaHJpc3RtYXMgQmFieTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDcxM10iICBocmVmPSIvYXJ0aXN0L3ByZXRlbmRlcnMiIGNsYXNzPSJhcnRpc3QiPlRoZSBQcmV0ZW5kZXJzPC9hPiAtIEhhdmUgWW91cnNlbGYgYSBNZXJyeSBMaXR0bGUgQ2hyaXN0bWFzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTQ0MV0iICBocmVmPSIvYXJ0aXN0L2pvaG4tbWVsbGVuY2FtcCIgY2xhc3M9ImFydGlzdCI+Sm9obiBDb3VnYXIgTWVsbGVuY2FtcDwvYT4gLSBJIFNhdyBNb21teSBLaXNzaW5nIFNhbnRhIENsYXVzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NDY3XSIgIGhyZWY9Ii9hcnRpc3Qvc3RpbmciIGNsYXNzPSJhcnRpc3QiPlN0aW5nPC9hPiAtIEdhYnJpZWwmIzM5O3MgTWVzc2FnZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDI4OTJdIiAgaHJlZj0iL2FydGlzdC9ydW5fZF9tX2NfIiBjbGFzcz0iYXJ0aXN0Ij5SdW4tRC5NLkMuPC9hPiAtIENocmlzdG1hcyBpbiBIb2xsaXM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q1Nl0iICBocmVmPSIvYXJ0aXN0L3UyIiBjbGFzcz0iYXJ0aXN0Ij5VMjwvYT4gLSBDaHJpc3RtYXMgKEJhYnkgUGxlYXNlIENvbWUgSG9tZSk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q2MjhdIiAgaHJlZj0iL2FydGlzdC9tYWRvbm5hIiBjbGFzcz0iYXJ0aXN0Ij5NYWRvbm5hPC9hPiAtIFNhbnRhIEJhYnk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q1NTM2MTBdIiAgaHJlZj0iL2FydGlzdC9ib2Jfc2VnZXJfYW5kX3RoZV9zaWx2ZXJfYnVsbGV0X2JhbmQiIGNsYXNzPSJhcnRpc3QiPkJvYiBTZWdlciAmYW1wOyBUaGUgU2lsdmVyIEJ1bGxldCBCYW5kPC9hPiAtIFRoZSBMaXR0bGUgRHJ1bW1lciBCb3k8L3NwYW4+IC4uLjwvdGQ+PC90cj48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjx0YWJsZT48dHIgY2xhc3M9ImluZm9ib3giPgogICAgICAgICAgICA8dGQgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZ19jZWxsIj48ZGl2IHN0eWxlPSJwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctYm90dG9tOmNhbGMoIDEwMCUgLyAxLjAxMzUxMzUxMzUxMzUxMzYpOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzdkNzdjMGJiMDJmMDNlZjNlOTJmNmUxYWI3OTllNjdlLzEyMjQ1NjIiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0zMDkzNl0iIGhyZWY9Ii9yZWxlYXNlL2NvbXAvdmFyaW91cy1hcnRpc3RzL2Eta25pZ2h0cy10YWxlLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgS25pZ2h0JiMzOTtzIFRhbGU8L2E+PC9pPjxicj48ZGl2IGNsYXNzPSJjbGVhciI+IDwvZGl2Pjx0YWJsZSBjbGFzcz0ibWJnZW4iIHN0eWxlPSJib3JkZXI6bm9uZTtwYWRkaW5nOjA7bWFyZ2luLWxlZnQ6LTAuMjVlbTttYXJnaW4tdG9wOjAuNWVtO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLW1vbm8tZSkiPjx0cj4KICAgICAgICAgICA8dGQgY29sc3Bhbj0iNSI+U2VyaWVzOiA8YSB0aXRsZT0iW0Rlc2NyaXB0b3IyNDkwMl0iIGNsYXNzPSJnZW5yZSIgaHJlZj0iL2NsYXNzaWZpZXJzL0ZpbG0rU291bmR0cmFja3MrMjAwMCUyZDA0LyI+RmlsbSBTb3VuZHRyYWNrcyAyMDAwLTA0PC9hPjxiciAvPkxhYmVsOiA8YSB0aXRsZT0iW0xhYmVsOTMxXSIgaHJlZj0iL2xhYmVsL3NvbnlfcmVjb3Jkcy8iIGNsYXNzPSJsYWJlbCI+U29ueSBSZWNvcmRzPC9hPjxiciAvPjwvdGQ+PC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NGVtOyI+MjAwMTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij5DRCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48YSB0aXRsZT0iW0xhYmVsOTMxXSIgaHJlZj0iL2xhYmVsL3NvbnlfcmVjb3Jkcy8iIGNsYXNzPSJsYWJlbCI+U29ueSBSZWNvcmRzPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+Q0sgODU2NDg8L3RkPjx0cj48dGQgY29sc3Bhbj0iNSI+PGI+VHJhY2tzOjwvYj4gPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NDQ4XSIgIGhyZWY9Ii9hcnRpc3QvcXVlZW4iIGNsYXNzPSJhcnRpc3QiPlF1ZWVuPC9hPiAtIFdlIFdpbGwgUm9jayBZb3U8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxNzQ3XSIgIGhyZWY9Ii9hcnRpc3Qvd2FyIiBjbGFzcz0iYXJ0aXN0Ij5XQVI8L2E+IC0gTG93IFJpZGVyPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0ODU1XSIgIGhyZWY9Ii9hcnRpc3QvYmFjaG1hbl90dXJuZXJfb3ZlcmRyaXZlIiBjbGFzcz0iYXJ0aXN0Ij5CYWNobWFuLVR1cm5lciBPdmVyZHJpdmU8L2E+IC0gVGFraW4mIzM5OyBDYXJlIG9mIEJ1c2luZXNzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjQ3XSIgIGhyZWY9Ii9hcnRpc3QvZGF2aWQtYm93aWUiIGNsYXNzPSJhcnRpc3QiPkRhdmlkIEJvd2llPC9hPiAtIEdvbGRlbiBZZWFyczwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEyNDNdIiAgaHJlZj0iL2FydGlzdC9oZWFydCIgY2xhc3M9ImFydGlzdCI+SGVhcnQ8L2E+IC0gQ3Jhenkgb24gWW91PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NTE0XSIgIGhyZWY9Ii9hcnRpc3QvZXJpYy1jbGFwdG9uIiBjbGFzcz0iYXJ0aXN0Ij5FcmljIENsYXB0b248L2E+IC0gRnVydGhlciBvbiBVcCB0aGUgUm9hZDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDE4NzFdIiAgaHJlZj0iL2FydGlzdC9yYXJlLWVhcnRoIiBjbGFzcz0iYXJ0aXN0Ij5SYXJlIEVhcnRoPC9hPiAtIEdldCBSZWFkeTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDU2MF0iICBocmVmPSIvYXJ0aXN0L3NseS1hbmQtdGhlLWZhbWlseS1zdG9uZSIgY2xhc3M9ImFydGlzdCI+U2x5ICZhbXA7IFRoZSBGYW1pbHkgU3RvbmU8L2E+IC0gSSBXYW50IHRvIFRha2UgWW91IEhpZ2hlcjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEzNjJdIiAgaHJlZj0iL2FydGlzdC90aGluLWxpenp5IiBjbGFzcz0iYXJ0aXN0Ij5UaGluIExpenp5PC9hPiAtIFRoZSBCb3lzIEFyZSBCYWNrIGluIFRvd248L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QzNDMzOV0iICBocmVmPSIvYXJ0aXN0L2NhcnRlcl9idXJ3ZWxsIiBjbGFzcz0iYXJ0aXN0Ij5DYXJ0ZXIgQnVyd2VsbDwvYT4gLSBPbmUgb2YgWW91ciBPd248L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q3NDVdIiAgaHJlZj0iL2FydGlzdC9yb2JiaWUtd2lsbGlhbXMtMSIgY2xhc3M9ImFydGlzdCI+Um9iYmllIFdpbGxpYW1zPC9hPiAmYW1wOyA8YSB0aXRsZT0iW0FydGlzdDQ0OF0iICBocmVmPSIvYXJ0aXN0L3F1ZWVuIiBjbGFzcz0iYXJ0aXN0Ij5RdWVlbjwvYT4gLSBXZSBBcmUgdGhlIENoYW1waW9uczwvc3Bhbj4gLi4uPC90ZD48L3RyPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT4gPGJyIC8+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDEuMCk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZyBsYXp5bG9hZCIgZGF0YS1zcmM9Ii8vZS5zbm1jLmlvL2kvMTUwL3MvOGM5NmY5NGI5ZTdjYmU2ZjM5NTVkMDUyYjcxNWIwMTQvMjMyNjEwMSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTM0NTk1XSIgaHJlZj0iL3JlbGVhc2UvY29tcC92YXJpb3VzLWFydGlzdHMvYS1uaWdodC1hdC10aGUtcm94YnVyeS8iIGNsYXNzPSJzZWFyY2hwYWdlIj5BIE5pZ2h0IGF0IHRoZSBSb3hidXJ5PC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPlNlcmllczogPGEgdGl0bGU9IltEZXNjcmlwdG9yMjQ5MDFdIiBjbGFzcz0iZ2VucmUiIGhyZWY9Ii9jbGFzc2lmaWVycy9GaWxtK1NvdW5kdHJhY2tzKzE5OTUlMmQ5OS8iPkZpbG0gU291bmR0cmFja3MgMTk5NS05OTwvYT48YnIgLz5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDU5NV0iIGhyZWY9Ii9sYWJlbC9kcmVhbXdvcmtzX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPkRyZWFtV29ya3MgUmVjb3JkczwvYT48YnIgLz48L3RkPjwvdHI+PHRyPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjRlbTsiPjE5OTg8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPjxpbWcgc3JjPSIvL2Uuc25tYy5pby8yLjUvaW1nL2ltYWdlcy9ibGFuay5wbmciIGNsYXNzPSJmbGFnIGZsYWctZXUiIGFsdD0iRXVyb3BlIiB0aXRsZT0iRXVyb3BlIi8+IDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+Q0QgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6OWVtOyI+PGEgdGl0bGU9IltMYWJlbDU5NV0iIGhyZWY9Ii9sYWJlbC9kcmVhbXdvcmtzX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPkRyZWFtV29ya3MgUmVjb3JkczwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPkRSRCA1MDAzMzwvdGQ+PHRyPjx0ZCBjb2xzcGFuPSI1Ij48Yj5UcmFja3M6PC9iPiA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxMzMzNF0iICBocmVmPSIvYXJ0aXN0L2hhZGRhd2F5IiBjbGFzcz0iYXJ0aXN0Ij5IYWRkYXdheTwvYT4gLSBXaGF0IElzIExvdmUgKDcmIzM0OyBNaXgpPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0Mzg4NTJdIiAgaHJlZj0iL2FydGlzdC9iYW1ib28iIGNsYXNzPSJhcnRpc3QiPkJhbWJvbzwvYT4gLSBCYW1ib29naWUgKFJhZGlvIEVkaXQpPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NTAyNDE4XSIgIGhyZWY9Ii9hcnRpc3Qvcm9iaV9yb2JzX2NsdWJ3b3JsZCIgY2xhc3M9ImFydGlzdCI+Um9iaS1Sb2ImIzM5O3MgQ2x1YndvcmxkPC9hPiAtIE1ha2UgVGhhdCBNb25leSAoUm94YnVyeSBSZW1peCk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxNzgyXSIgIGhyZWY9Ii9hcnRpc3QvY3luZGktbGF1cGVyIiBjbGFzcz0iYXJ0aXN0Ij5DeW5kaSBMYXVwZXI8L2E+IC0gRGlzY28gSW5mZXJubzwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDgwNDM0XSIgIGhyZWY9Ii9hcnRpc3Qvbl90cmFuY2UiIGNsYXNzPSJhcnRpc3QiPk4tVHJhbmNlPC9hPiAtIERvIFlhIFRoaW5rIEkmIzM5O20gU2V4eTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDQ0NTkyXSIgIGhyZWY9Ii9hcnRpc3QvM3JkLXBhcnR5LTIiIGNsYXNzPSJhcnRpc3QiPjNyZCBQYXJ0eTwvYT4gLSBQb3AgTXV6aWs8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QyMjY2XSIgIGhyZWY9Ii9hcnRpc3QvZmFpdGhsZXNzIiBjbGFzcz0iYXJ0aXN0Ij5GYWl0aGxlc3M8L2E+IC0gSW5zb21uaWEgKE1vbnN0ZXIgTWl4KTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEzMzMwXSIgIGhyZWY9Ii9hcnRpc3QvbGFfYm91Y2hlIiBjbGFzcz0iYXJ0aXN0Ij5MYSBCb3VjaGU8L2E+IC0gQmUgTXkgTG92ZXIgKENsdWIgTWl4KTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDcxNzBdIiAgaHJlZj0iL2FydGlzdC9hbWJlciIgY2xhc3M9ImFydGlzdCI+QW1iZXI8L2E+IC0gVGhpcyBJcyBZb3VyIE5pZ2h0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NDI4XSIgIGhyZWY9Ii9hcnRpc3QvYWNlLW9mLWJhc2UiIGNsYXNzPSJhcnRpc3QiPkFjZSBvZiBCYXNlPC9hPiAtIEJlYXV0aWZ1bCBMaWZlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NjQ1OV0iICBocmVmPSIvYXJ0aXN0L25vX21lcmN5IiBjbGFzcz0iYXJ0aXN0Ij5ObyBNZXJjeTwvYT4gLSBXaGVyZSBEbyBZb3UgR28gKE9jZWFuIERyaXZlIE1peCk8L3NwYW4+IC4uLjwvdGQ+PC90cj48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjx0YWJsZT48dHIgY2xhc3M9ImluZm9ib3giPgogICAgICAgICAgICA8dGQgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZ19jZWxsIj48ZGl2IHN0eWxlPSJwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctYm90dG9tOmNhbGMoIDEwMCUgLyAwLjk5MjkwNzgwMTQxODQzOTcpOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzlmNjJlMmVhMjUzMDliYWMyZTM0M2IzYzFhZjJlMjI1LzEyMTk0NzAiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW0zNTQxNF0iIGhyZWY9Ii9yZWxlYXNlL2NvbXAvdmFyaW91cy1hcnRpc3RzL2Etd2Vlay1pbi10aGUtcmVhbC13b3JsZC1wYXJ0LTEvIiBjbGFzcz0ic2VhcmNocGFnZSI+QSBXZWVrIGluIHRoZSBSZWFsIFdvcmxkIC0gUGFydCAxPC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPkxhYmVsOiA8YSB0aXRsZT0iW0xhYmVsMzA3MV0iIGhyZWY9Ii9sYWJlbC9yZWFsX3dvcmxkX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPlJlYWwgV29ybGQgUmVjb3JkczwvYT48YnIgLz48L3RkPjwvdHI+PHRyPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjRlbTsiPjE5OTI8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPjxpbWcgc3JjPSIvL2Uuc25tYy5pby8yLjUvaW1nL2ltYWdlcy9ibGFuay5wbmciIGNsYXNzPSJmbGFnIGZsYWctZ2IiIGFsdD0iVW5pdGVkIEtpbmdkb20iIHRpdGxlPSJVbml0ZWQgS2luZ2RvbSIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij5DRCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48YSB0aXRsZT0iW0xhYmVsMzA3MV0iIGhyZWY9Ii9sYWJlbC9yZWFsX3dvcmxkX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPlJlYWwgV29ybGQgUmVjb3JkczwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPkNEUlcyNTwvdGQ+PHRyPjx0ZCBjb2xzcGFuPSI1Ij48Yj5UcmFja3M6PC9iPiA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q3Mjc1XSIgIGhyZWY9Ii9hcnRpc3QvdGhlX2dyaWQiIGNsYXNzPSJhcnRpc3QiPlRoZSBHcmlkPC9hPiAtIE9uIHRoZSBXaW5nPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTAyNzldIiAgaHJlZj0iL2FydGlzdC9heXViLW9nYWRhIiBjbGFzcz0iYXJ0aXN0Ij5BeXViIE9nYWRhPC9hPiAtIFRhbmcgVXJ1PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjcwMTddIiAgaHJlZj0iL2FydGlzdC90aGVfaG9sbWVzX2Jyb3RoZXJzIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgSG9sbWVzIEJyb3RoZXJzPC9hPiAtIEkgV2FudCBKZXN1cyB0byBXYWxrIFdpdGggTWU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QyOTIwXSIgIGhyZWY9Ii9hcnRpc3QvbWFyaS1ib2luZSIgY2xhc3M9ImFydGlzdCI+TWFyaSBCb2luZSBhbmQgQmFuZDwvYT4gLSBJdCBTYXQgRHVvbG1tYSBNdTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDU3MDJdIiAgaHJlZj0iL2FydGlzdC9yb3NzeSIgY2xhc3M9ImFydGlzdCI+Um9zc3k8L2E+IC0gT21hbmFyenk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q0NDQyOF0iICBocmVmPSIvYXJ0aXN0L2xhLWJvdHRpbmUtc291cmlhbnRlIiBjbGFzcz0iYXJ0aXN0Ij5MYSBCb3R0aW5lIHNvdXJpYW50ZTwvYT4gLSBQaWNvcm88L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QzNTg2MjJdIiAgaHJlZj0iL2FydGlzdC9jYW5pemFyZXMiIGNsYXNzPSJhcnRpc3QiPkp1YW4gQ2HDsWl6YXJlczwvYT4gLSBIw61icmlkbzwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDQxMTJdIiAgaHJlZj0iL2FydGlzdC9nZW9mZnJleS1vcnllbWEiIGNsYXNzPSJhcnRpc3QiPkdlb2ZmcmV5IE9yeWVtYTwvYT4gLSBMdWJhbmdhPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzY2NTldIiAgaHJlZj0iL2FydGlzdC9yZW1teV9vbmdhbGEiIGNsYXNzPSJhcnRpc3QiPlJlbW15IE9uZ2FsYSAmYW1wOyBPcmNoZXN0cmUgU3VwZXIgTWF0aW1pbGE8L2E+IC0gRG9kb21hPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NzI3NV0iICBocmVmPSIvYXJ0aXN0L3RoZV9ncmlkIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgR3JpZDwvYT4gLSBTbG93IERvd248L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q0MjQ2MV0iICBocmVmPSIvYXJ0aXN0L3RvdG9fbGFfbW9tcG9zaW5hIiBjbGFzcz0iYXJ0aXN0Ij5Ub3TDsyBsYSBNb21wb3NpbmEgeSBTdXMgVGFtYm9yZXM8L2E+IC0gU29sZWRhZDwvc3Bhbj4gLi4uPC90ZD48L3RyPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT4gPGJyIC8+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDEuMDEwODMwMzI0OTA5NzQ3Mik7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZyBsYXp5bG9hZCIgZGF0YS1zcmM9Ii8vZS5zbm1jLmlvL2kvMTUwL3MvOGJkZjJlZTNhNDZkMDE2ZmM4Y2I2NWI1ZGEzNjA5ZTgvMTY0NTczOCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTM2MDc5XSIgaHJlZj0iL3JlbGVhc2UvY29tcC92YXJpb3VzLWFydGlzdHMvbXVzaWMtZnJvbS1hbmQtaW5zcGlyZWQtYnktam9obi1jYXJwZW50ZXJzLWVzY2FwZS1mcm9tLWxfYS8iIGNsYXNzPSJzZWFyY2hwYWdlIj5NdXNpYyBGcm9tIGFuZCBJbnNwaXJlZCBieSBKb2huIENhcnBlbnRlciYjMzk7cyBFc2NhcGUgRnJvbSBMLkEuPC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPlNlcmllczogPGEgdGl0bGU9IltEZXNjcmlwdG9yMjQ5MDFdIiBjbGFzcz0iZ2VucmUiIGhyZWY9Ii9jbGFzc2lmaWVycy9GaWxtK1NvdW5kdHJhY2tzKzE5OTUlMmQ5OS8iPkZpbG0gU291bmR0cmFja3MgMTk5NS05OTwvYT48YnIgLz5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDE2MTBdIiBocmVmPSIvbGFiZWwvbGF2YV9yZWNvcmRzX2YxLyIgY2xhc3M9ImxhYmVsIj5MYXZhIFJlY29yZHM8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4xOTk2PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLXVzIiBhbHQ9IlVuaXRlZCBTdGF0ZXMiIHRpdGxlPSJVbml0ZWQgU3RhdGVzIiAvPiA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPkNEIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWwxNjEwXSIgaHJlZj0iL2xhYmVsL2xhdmFfcmVjb3Jkc19mMS8iIGNsYXNzPSJsYWJlbCI+TGF2YSBSZWNvcmRzPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+OTI3MTQtMjwvdGQ+PHRyPjx0ZCBjb2xzcGFuPSI1Ij48Yj5UcmFja3M6PC9iPiA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QzNDldIiAgaHJlZj0iL2FydGlzdC9zdGFiYmluZy13ZXN0d2FyZCIgY2xhc3M9ImFydGlzdCI+U3RhYmJpbmcgV2VzdHdhcmQ8L2E+IC0gRGF3bjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDYwNl0iICBocmVmPSIvYXJ0aXN0L3Rvb2wiIGNsYXNzPSJhcnRpc3QiPlRvb2w8L2E+IC0gU3dlYXQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q2MTBdIiAgaHJlZj0iL2FydGlzdC93aGl0ZV96b21iaWUiIGNsYXNzPSJhcnRpc3QiPldoaXRlIFpvbWJpZTwvYT4gLSBUaGUgT25lPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjA5NV0iICBocmVmPSIvYXJ0aXN0L3RvYWRpZXMiIGNsYXNzPSJhcnRpc3QiPlRvYWRpZXM8L2E+IC0gQ3V0IE1lIE91dDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDU3Ml0iICBocmVmPSIvYXJ0aXN0L2J1dHRob2xlLXN1cmZlcnMiIGNsYXNzPSJhcnRpc3QiPkJ1dHRob2xlIFN1cmZlcnM8L2E+IC0gUG90dGVyeTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDcwN10iICBocmVmPSIvYXJ0aXN0L3N1Z2FyX3JheSIgY2xhc3M9ImFydGlzdCI+U3VnYXIgUmF5PC9hPiAtIDEwIFNlY29uZHMgRG93bjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDU4Nl0iICBocmVmPSIvYXJ0aXN0L2dyYXZpdHlfa2lsbHMiIGNsYXNzPSJhcnRpc3QiPkdyYXZpdHkgS2lsbHM8L2E+IC0gQmxhbWUgKEwuQS4gUmVtaXgpPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzY2XSIgIGhyZWY9Ii9hcnRpc3QvdG9yaV9hbW9zIiBjbGFzcz0iYXJ0aXN0Ij5Ub3JpIEFtb3M8L2E+IC0gUHJvZmVzc2lvbmFsIFdpZG93PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NTk5XSIgIGhyZWY9Ii9hcnRpc3QvbWluaXN0cnkiIGNsYXNzPSJhcnRpc3QiPk1pbmlzdHJ5PC9hPiAtIFBhaXNsZXk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3QxNTA5XSIgIGhyZWY9Ii9hcnRpc3Qvb3JhbmdlXzltbSIgY2xhc3M9ImFydGlzdCI+T3JhbmdlIDltbTwvYT4gLSBGaXJlIGluIHRoZSBIb2xlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTUxN10iICBocmVmPSIvYXJ0aXN0L2NsdXRjaCIgY2xhc3M9ImFydGlzdCI+Q2x1dGNoPC9hPiAtIEVzY2FwZSBGcm9tIHRoZSBQcmlzb24gUGxhbmV0PC9zcGFuPiAuLi48L3RkPjwvdHI+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiA8YnIgLz48dGFibGU+PHRyIGNsYXNzPSJpbmZvYm94Ij4KICAgICAgICAgICAgPHRkIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWdfY2VsbCI+PGRpdiBzdHlsZT0icG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtwYWRkaW5nLWJvdHRvbTpjYWxjKCAxMDAlIC8gMS4wKTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGFnZV9zZWFyY2hfaW1nIGxhenlsb2FkIiBkYXRhLXNyYz0iLy9lLnNubWMuaW8vaS8xNTAvcy9lZmUyMGJmYzI0M2E0ODdmMDMwNzMyMWYwYzM1NGYyMC8zOTA4Mzc5IiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvdGQ+PHRkIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MThweDsiPjx0YWJsZSB3aWR0aD0iMTAwJSI+PHRyPjx0ZD48YSB0aXRsZT0iW0FydGlzdDVdIiAgaHJlZj0iL2FydGlzdC92YXJpb3VzLWFydGlzdHMiIGNsYXNzPSJhcnRpc3QiPlZhcmlvdXMgQXJ0aXN0czwvYT4gLSA8aT48YSB0aXRsZT0iW0FsYnVtNDA4NjFdIiBocmVmPSIvcmVsZWFzZS9hbGJ1bS92YXJpb3VzLWFydGlzdHMvYS1tYW4tZm9yLWFsbC1zZWFzb25zLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgTWFuIGZvciBBbGwgU2Vhc29uczwvYT48L2k+PGJyPjxkaXYgY2xhc3M9ImNsZWFyIj4gPC9kaXY+PHRhYmxlIGNsYXNzPSJtYmdlbiIgc3R5bGU9ImJvcmRlcjpub25lO3BhZGRpbmc6MDttYXJnaW4tbGVmdDotMC4yNWVtO21hcmdpbi10b3A6MC41ZW07Ym9yZGVyLXRvcDoxcHggc29saWQgdmFyKC0tbW9uby1lKSI+PHRyPgogICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDM1ODQ5XSIgaHJlZj0iL2xhYmVsL3JjYV92aWN0b3JfcmVkX3NlYWwvIiBjbGFzcz0ibGFiZWwiPlJDQSBWaWN0b3IgUmVkIFNlYWw8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4xOTY2PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLXVzIiBhbHQ9IlVuaXRlZCBTdGF0ZXMiIHRpdGxlPSJVbml0ZWQgU3RhdGVzIiAvPiA8aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLWNhIiBhbHQ9IkNhbmFkYSIgdGl0bGU9IkNhbmFkYSIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij5WaW55bCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48YSB0aXRsZT0iW0xhYmVsMzU4NDldIiBocmVmPSIvbGFiZWwvcmNhX3ZpY3Rvcl9yZWRfc2VhbC8iIGNsYXNzPSJsYWJlbCI+UkNBIFZpY3RvciBSZWQgU2VhbDwvYT48L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjZlbTsiPlZETS0xMTY8L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT4gPGJyIC8+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDAuOTk2NDQxMjgxMTM4NzkpOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYWdlX3NlYXJjaF9pbWcgbGF6eWxvYWQiIGRhdGEtc3JjPSIvL2Uuc25tYy5pby9pLzE1MC9zLzE2NGJmOTFkMGQxMTcwYzI2YWZmYzA0ODU5MzczMWJjLzEyNDUwNzEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPC90ZD48dGQgc3R5bGU9InBhZGRpbmctbGVmdDoxOHB4OyI+PHRhYmxlIHdpZHRoPSIxMDAlIj48dHI+PHRkPjxhIHRpdGxlPSJbQXJ0aXN0NV0iICBocmVmPSIvYXJ0aXN0L3ZhcmlvdXMtYXJ0aXN0cyIgY2xhc3M9ImFydGlzdCI+VmFyaW91cyBBcnRpc3RzPC9hPiAtIDxpPjxhIHRpdGxlPSJbQWxidW00MzkwNl0iIGhyZWY9Ii9yZWxlYXNlL2FsYnVtL3ZhcmlvdXMtYXJ0aXN0cy9hLXNhdWNlcmZ1bC1vZi1waW5rLWEtdHJpYnV0ZS10by1waW5rLWZsb3lkLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkEgU2F1Y2VyZnVsIG9mIFBpbms6IEEgVHJpYnV0ZSB0byBQaW5rIEZsb3lkPC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPlRyaWJ1dGU6IDxhIHRpdGxlPSJbQXJ0aXN0MzEyXSIgIGhyZWY9Ii9hcnRpc3QvcGluay1mbG95ZCIgY2xhc3M9ImFydGlzdCI+UGluayBGbG95ZDwvYT48YnIgLz5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDQyN10iIGhyZWY9Ii9sYWJlbC9jbGVvcGF0cmFfcmVjb3Jkcy8iIGNsYXNzPSJsYWJlbCI+Q2xlb3BhdHJhIFJlY29yZHM8L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4xOTk1PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLXVzIiBhbHQ9IlVuaXRlZCBTdGF0ZXMiIHRpdGxlPSJVbml0ZWQgU3RhdGVzIiAvPiA8L3RkPgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjVlbTsiPkNEIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjllbTsiPjxhIHRpdGxlPSJbTGFiZWw0MjddIiBocmVmPSIvbGFiZWwvY2xlb3BhdHJhX3JlY29yZHMvIiBjbGFzcz0ibGFiZWwiPkNsZW9wYXRyYSBSZWNvcmRzPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+Q0xFTyA5NTUxLTI8L3RkPjx0cj48dGQgY29sc3Bhbj0iNSI+PGI+VHJhY2tzOjwvYj4gPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MjA2MF0iICBocmVmPSIvYXJ0aXN0L3BzeWNoaWNfdHYiIGNsYXNzPSJhcnRpc3QiPlBzeWNoaWMgVFY8L2E+IC0gU2V0IENvbnRyb2xzIGZvciB0aGUgSGVhcnQgb2YgdGhlIFN1bjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDIxMzA2XSIgIGhyZWY9Ii9hcnRpc3QvY29udHJvbGxlZC1ibGVlZGluZyIgY2xhc3M9ImFydGlzdCI+Q29udHJvbGxlZCBCbGVlZGluZzwvYT4gLSBBbm90aGVyIEJyaWNrIGluIHRoZSBXYWxsIFBhcnQgMSAmYW1wOyAyPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0OTI2OV0iICBocmVmPSIvYXJ0aXN0L3NwYWhuX3JhbmNoIiBjbGFzcz0iYXJ0aXN0Ij5TcGFobiBSYW5jaDwvYT4gLSBPbmUgb2YgVGhlc2UgRGF5czwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEyNDM2XSIgIGhyZWY9Ii9hcnRpc3Qvc2t5X2NyaWVzX21hcnkiIGNsYXNzPSJhcnRpc3QiPlNreSBDcmllcyBNYXJ5PC9hPiAtIFdvdHMuLi4gVWggdGhlIERlYWw8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q1NTAxOV0iICBocmVmPSIvYXJ0aXN0L3NwaXJhbF9yZWFsbXMiIGNsYXNzPSJhcnRpc3QiPlNwaXJhbCBSZWFsbXM8L2E+IC0gSW50ZXJzdGVsbGFyIE92ZXJkcml2ZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDU3NTRdIiAgaHJlZj0iL2FydGlzdC9sZWFldGhlci1zdHJpcCIgY2xhc3M9ImFydGlzdCI+TGXDpnRoZXIgU3RyaXA8L2E+IC0gTGVhcm5pbmcgdG8gRmx5PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTMxNzddIiAgaHJlZj0iL2FydGlzdC9yb24tZ2Vlc2luIiBjbGFzcz0iYXJ0aXN0Ij5Sb24gR2Vlc2luPC9hPiAtIFRvIFJvZ2VyIFdhdGVycywgV2hlcmV2ZXIgWW91IEFyZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDE3NDEwXSIgIGhyZWY9Ii9hcnRpc3QvZWRlbl9mNCIgY2xhc3M9ImFydGlzdCI+RURFTjwvYT4gLSBKdWdiYW5kIEJsdWVzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0NjU1MzZdIiAgaHJlZj0iL2FydGlzdC9kaW5fZjEiIGNsYXNzPSJhcnRpc3QiPkRpbjwvYT4gLSBPbiB0aGUgUnVuPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MTkzM10iICBocmVmPSIvYXJ0aXN0L2FsaWVuX3NleF9maWVuZCIgY2xhc3M9ImFydGlzdCI+QWxpZW4gU2V4IEZpZW5kPC9hPiAtIEVjaG9lczwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDEzMDI5MjhdIiAgaHJlZj0iL2FydGlzdC9mdXJuYWNlLTEiIGNsYXNzPSJhcnRpc3QiPkZ1cm5hY2U8L2E+IC0gSGV5IFlvdTwvc3Bhbj4gLi4uPC90ZD48L3RyPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT4gPGJyIC8+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDAuOTcyMjIyMjIyMjIyMjIyMik7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZyBsYXp5bG9hZCIgZGF0YS1zcmM9Ii8vZS5zbm1jLmlvL2kvMTUwL3MvM2ExNjAzMjI3ZjA1NDRjYTA5NzU2ZTcyYmZlY2Y0ZDUvMTIwODc2MCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTQ1MzEyXSIgaHJlZj0iL3JlbGVhc2UvY29tcC92YXJpb3VzLWFydGlzdHMvZWFybHktbF9hLyIgY2xhc3M9InNlYXJjaHBhZ2UiPkVhcmx5IEwuQS4gPC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPkxhYmVsOiA8YSB0aXRsZT0iW0xhYmVsMzY5ODRdIiBocmVmPSIvbGFiZWwvdG9nZXRoZXIvIiBjbGFzcz0ibGFiZWwiPlRvZ2V0aGVyPC9hPjxiciAvPjwvdGQ+PC90cj48dHI+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NGVtOyI+MTk2OTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+PGltZyBzcmM9Ii8vZS5zbm1jLmlvLzIuNS9pbWcvaW1hZ2VzL2JsYW5rLnBuZyIgY2xhc3M9ImZsYWcgZmxhZy11cyIgYWx0PSJVbml0ZWQgU3RhdGVzIiB0aXRsZT0iVW5pdGVkIFN0YXRlcyIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij5WaW55bCA8L3RkPgoKICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo5ZW07Ij48YSB0aXRsZT0iW0xhYmVsMzY5ODRdIiBocmVmPSIvbGFiZWwvdG9nZXRoZXIvIiBjbGFzcz0ibGFiZWwiPlRvZ2V0aGVyPC9hPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NmVtOyI+U1QtVC0xMDE0PC90ZD48dHI+PHRkIGNvbHNwYW49IjUiPjxiPlRyYWNrczo8L2I+IDxzcGFuIGNsYXNzPSJyZW5kZXJlZF90ZXh0Ij48YSB0aXRsZT0iW0FydGlzdDY2MTddIiAgaHJlZj0iL2FydGlzdC9kaW5vLXZhbGVudGUiIGNsYXNzPSJhcnRpc3QiPiBEaW5vIFZhbGVudGk8L2E+IC0gQmxhY2sgQmV0dHk8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q2NjE3XSIgIGhyZWY9Ii9hcnRpc3QvZGluby12YWxlbnRlIiBjbGFzcz0iYXJ0aXN0Ij4gRGlubyBWYWxlbnRpPC9hPiAtIExpZmUgSXMgTGlrZSBUaGF0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzI1OV0iICBocmVmPSIvYXJ0aXN0L2RhdmlkLWNyb3NieSIgY2xhc3M9ImFydGlzdCI+RGF2aWQgQ3Jvc2J5PC9hPiAtIFdpbGxpZSBHZW5lPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzI1OV0iICBocmVmPSIvYXJ0aXN0L2RhdmlkLWNyb3NieSIgY2xhc3M9ImFydGlzdCI+RGF2aWQgQ3Jvc2J5PC9hPiAtIENvbWUgQmFjayBCYWJ5PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPlRoZSBKZXQgU2V0ICg8YSB0aXRsZT0iW0FydGlzdDY5MF0iICBocmVmPSIvYXJ0aXN0L3RoZS1ieXJkcyIgY2xhc3M9ImFydGlzdCI+VGhlIEJ5cmRzPC9hPiA6IDxhIHRpdGxlPSJbQXJ0aXN0MTYwM10iICBocmVmPSIvYXJ0aXN0L3JvZ2VyLW1jZ3Vpbm4iIGNsYXNzPSJhcnRpc3QiPlJvZ2VyIE1jR3Vpbm48L2E+ICwgPGEgdGl0bGU9IltBcnRpc3QzMzQxXSIgIGhyZWY9Ii9hcnRpc3QvZ2VuZS1jbGFyayIgY2xhc3M9ImFydGlzdCI+R2VuZSBDbGFyazwvYT4gLCA8YSB0aXRsZT0iW0FydGlzdDMyNTldIiAgaHJlZj0iL2FydGlzdC9kYXZpZC1jcm9zYnkiIGNsYXNzPSJhcnRpc3QiPkRhdmlkIENyb3NieTwvYT4gKSAtIFRoZSBPbmx5IEdpcmw8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+VGhlIEpldCBTZXQgKDxhIHRpdGxlPSJbQXJ0aXN0NjkwXSIgIGhyZWY9Ii9hcnRpc3QvdGhlLWJ5cmRzIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgQnlyZHM8L2E+IDogPGEgdGl0bGU9IltBcnRpc3QxNjAzXSIgIGhyZWY9Ii9hcnRpc3Qvcm9nZXItbWNndWlubiIgY2xhc3M9ImFydGlzdCI+Um9nZXIgTWNHdWlubjwvYT4gLCA8YSB0aXRsZT0iW0FydGlzdDMzNDFdIiAgaHJlZj0iL2FydGlzdC9nZW5lLWNsYXJrIiBjbGFzcz0iYXJ0aXN0Ij5HZW5lIENsYXJrPC9hPiAsIDxhIHRpdGxlPSJbQXJ0aXN0MzI1OV0iICBocmVmPSIvYXJ0aXN0L2RhdmlkLWNyb3NieSIgY2xhc3M9ImFydGlzdCI+RGF2aWQgQ3Jvc2J5PC9hPiApIC0gWW91IE1vdmluJiMzOTs8L3NwYW4+LCA8c3BhbiBjbGFzcz0icmVuZGVyZWRfdGV4dCI+PGEgdGl0bGU9IltBcnRpc3Q4Njg3XSIgIGhyZWY9Ii9hcnRpc3QvdGhlX2RpbGxhcmRzIiBjbGFzcz0iYXJ0aXN0Ij5UaGUgRGlsbGFyZHM8L2E+IGZlYXR1cmluZyA8YSB0aXRsZT0iW0FydGlzdDEyNjE5XSIgIGhyZWY9Ii9hcnRpc3QvY2hyaXMtaGlsbG1hbiIgY2xhc3M9ImFydGlzdCI+Q2hyaXMgSGlsbG1hbjwvYT4gYW5kIE1pY2hhZWwgQ2xhcmtlICAtIEVhY2ggU2Vhc29uIENoYW5nZXMgWW91PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0ODY4N10iICBocmVmPSIvYXJ0aXN0L3RoZV9kaWxsYXJkcyIgY2xhc3M9ImFydGlzdCI+VGhlIERpbGxhcmRzPC9hPiBmZWF0dXJpbmcgPGEgdGl0bGU9IltBcnRpc3QxMjYxOV0iICBocmVmPSIvYXJ0aXN0L2NocmlzLWhpbGxtYW4iIGNsYXNzPSJhcnRpc3QiPkNocmlzIEhpbGxtYW48L2E+IGFuZCBNaWNoYWVsIENsYXJrZSAtIERvbiYjMzk7dCBZb3UgQ3J5PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzM5OV0iICBocmVmPSIvYXJ0aXN0L2Nhbm5lZC1oZWF0IiBjbGFzcz0iYXJ0aXN0Ij5DYW5uZWQgSGVhdDwvYT4gLSBZb3UgS25vdyBJIExvdmUgWW91PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJlbmRlcmVkX3RleHQiPjxhIHRpdGxlPSJbQXJ0aXN0MzM5OV0iICBocmVmPSIvYXJ0aXN0L2Nhbm5lZC1oZWF0IiBjbGFzcz0iYXJ0aXN0Ij5DYW5uZWQgSGVhdDwvYT4gLSBGaXJzdCBUaW1lIEFyb3VuZDwvc3Bhbj4gPC90ZD48L3RyPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT4gPGJyIC8+PHRhYmxlPjx0ciBjbGFzcz0iaW5mb2JveCI+CiAgICAgICAgICAgIDx0ZCBjbGFzcz0icGFnZV9zZWFyY2hfaW1nX2NlbGwiPjxkaXYgc3R5bGU9InBvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7cGFkZGluZy1ib3R0b206Y2FsYyggMTAwJSAvIDEuMDAzMzg5ODMwNTA4NDc0NSk7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhZ2Vfc2VhcmNoX2ltZyBsYXp5bG9hZCIgZGF0YS1zcmM9Ii8vZS5zbm1jLmlvL2kvMTUwL3MvNTlmZDE0NTJkMmFlZjhlZTMxMDcxNzM1ZTNmYjBjNmQvMjcxOTU5MSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L3RkPjx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OjE4cHg7Ij48dGFibGUgd2lkdGg9IjEwMCUiPjx0cj48dGQ+PGEgdGl0bGU9IltBcnRpc3Q1XSIgIGhyZWY9Ii9hcnRpc3QvdmFyaW91cy1hcnRpc3RzIiBjbGFzcz0iYXJ0aXN0Ij5WYXJpb3VzIEFydGlzdHM8L2E+IC0gPGk+PGEgdGl0bGU9IltBbGJ1bTQ1Mzc0XSIgaHJlZj0iL3JlbGVhc2UvY29tcC92YXJpb3VzLWFydGlzdHMvYS1sYXRlLWp1bmN0aW9uLWNvbXBpbGF0aW9uLTEvIiBjbGFzcz0ic2VhcmNocGFnZSI+QSBMYXRlIEp1bmN0aW9uIENvbXBpbGF0aW9uICMxPC9hPjwvaT48YnI+PGRpdiBjbGFzcz0iY2xlYXIiPiA8L2Rpdj48dGFibGUgY2xhc3M9Im1iZ2VuIiBzdHlsZT0iYm9yZGVyOm5vbmU7cGFkZGluZzowO21hcmdpbi1sZWZ0Oi0wLjI1ZW07bWFyZ2luLXRvcDowLjVlbTtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1tb25vLWUpIj48dHI+CiAgICAgICAgICAgPHRkIGNvbHNwYW49IjUiPlNlcmllczogPGEgdGl0bGU9IltEZXNjcmlwdG9yMjU1OTddIiBjbGFzcz0iZ2VucmUiIGhyZWY9Ii9jbGFzc2lmaWVycy9MYXRlK0p1bmN0aW9uLyI+TGF0ZSBKdW5jdGlvbjwvYT48YnIgLz5MYWJlbDogPGEgdGl0bGU9IltMYWJlbDQ3ODg3XSIgaHJlZj0iL2xhYmVsL2xhdGVfanVuY3Rpb24vIiBjbGFzcz0ibGFiZWwiPkxhdGUgSnVuY3Rpb248L2E+PGJyIC8+PC90ZD48L3RyPjx0cj4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0ZW07Ij4yMDAyPC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo1ZW07Ij48aW1nIHNyYz0iLy9lLnNubWMuaW8vMi41L2ltZy9pbWFnZXMvYmxhbmsucG5nIiBjbGFzcz0iZmxhZyBmbGFnLWdiIiBhbHQ9IlVuaXRlZCBLaW5nZG9tIiB0aXRsZT0iVW5pdGVkIEtpbmdkb20iIC8+IDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NWVtOyI+Q0QgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6OWVtOyI+PGEgdGl0bGU9IltMYWJlbDQ3ODg3XSIgaHJlZj0iL2xhYmVsL2xhdGVfanVuY3Rpb24vIiBjbGFzcz0ibGFiZWwiPkxhdGUgSnVuY3Rpb248L2E+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo2ZW07Ij5CQkNMSjMwMDQyPC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjwvdGFibGU+IDxiciAvPjxkaXYgc3R5bGU9InRleHQtYWxpZ246cmlnaHQiPjxhIGlkPSJzZWFyY2hfbW9yZWxpbmsiIHN0eWxlPSJtYXJnaW4tcmlnaHQ6MWVtOyIgaHJlZj0iL3NlYXJjaD9zZWFyY2h0ZXJtPWEmYW1wO3NlYXJjaHR5cGU9eSZhbXA7cGFnZT0yIj5Nb3JlIFJlc3VsdHM8L2E+PGJyIC8+PGJyIC8+PC9kaXY+PCEtLXotLT48ZGl2IHN0eWxlPSJwYWRkaW5nOjFlbTsiPjwvZGl2PjwvdGQ+PC90cj48L3RhYmxlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICA8IS0tIGVuZCBzZWFyY2ggLS0+PGRpdiBjbGFzcz0iY29sdW1uX2ZpbGxlciIgaWQ9ImNvbHVtbl9maWxsZXJfbGVmdCI+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgPGRpdiBpZD0iY29sdW1uX2NvbnRhaW5lcl9yaWdodCIgY2xhc3M9ImxhcmdlLTQgY29sdW1ucyI+PGRpdiBjbGFzcz0iY29sdW1uX2ZpbGxlciIgaWQ9ImNvbHVtbl9maWxsZXJfcmlnaHQiPjwvZGl2PjwvZGl2PjwvZGl2PgogICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhcmZpeCI+PC9kaXY+CiAgICAgICAgIDwhLS0gZW5kIGNvbnRlbnQgYW5kIGNvbnRlbnRfd3JhcHBlciAtLT4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDxkaXYgaWQ9InRyYWNrX3ByZXZpZXdfZnJhbWUiICBjbGFzcz0idHJhY2tfcHJldmlld19mcmFtZSI+CgogICAgICAgICAgICAgPGRpdiBjbGFzcz0idHJhY2tfcHJldmlld19jbG9zZSIgb25DbGljaz0iJCgnI3RyYWNrX3ByZXZpZXdfZnJhbWUnKS5oaWRlKCk7JCgnI3RyYWNrX3ByZXZpZXcnKS5odG1sKCcnKTsiPgogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXRpbWVzLWNpcmNsZSI+PC9pPgogICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgPGRpdiBpZD0idHJhY2tfcHJldmlld190ZXh0IiBjbGFzcz0idHJhY2tfcHJldmlld190ZXh0Ij4KICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgIDxkaXYgaWQ9InRyYWNrX3ByZXZpZXciIGNsYXNzPSJ0cmFja19wcmV2aWV3Ij4KCiAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDxkaXYgY2xhc3M9Im92ZXJsYXlfaW52aXNpYmxlIiBpZD0ib3ZlcmxheV9pbnZpc2libGUiPjwvZGl2PgoKICAgICAgICAgIDxkaXYgY2xhc3M9InVpX2Nyb3BwZXJfZnJhbWUiIGlkPSJ1aV9jcm9wcGVyX2ZyYW1lIj48L2Rpdj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbF9wYXJlbnRfZnJhbWUiIGlkPSJtb2RhbF9wYXJlbnRfZnJhbWUiPgogICAgICAgICAgICAgPGRpdiBvbkNsaWNrPSJyeW0uY2xvc2VNb2RhbCgpOyIgaWQ9Im1vZGFsX292ZXJsYXkiIGNsYXNzPSJtb2RhbF9vdmVybGF5IiBzdHlsZT0iIj5DbG9zZSA8aSBjbGFzcz0iZmEgZmEtdGltZXMiPjwvaT48L2Rpdj4KICAgICAgICAgICAgIDxkaXYgb25DbGljaz0icnltLmNsb3NlTW9kYWwoKTsiIGlkPSJtb2RhbF9vdmVybGF5X2ludmlzaWJsZSIgY2xhc3M9Im1vZGFsX292ZXJsYXlfaW52aXNpYmxlIiBzdHlsZT0iIj48L2Rpdj4KICAgICAgICAgICAgIDxkaXYgaWQ9Im1vZGFsX3BhcmVudF9mcmFtZV9pbm5lciIgY2xhc3M9Im1vZGFsX3BhcmVudF9mcmFtZV9pbm5lciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibW9kYWxfY29udGVudCIgY2xhc3M9Im1vZGFsX2NvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbF9wYXJlbnRfZnJhbWVfbGV2ZWxfMiIgaWQ9Im1vZGFsX3BhcmVudF9mcmFtZV9sZXZlbF8yIj4KICAgICAgICAgICAgIDxkaXYgb25DbGljaz0icnltLmNsb3NlTW9kYWwyKCk7IiBpZD0ibW9kYWxfb3ZlcmxheV9sZXZlbF8yIiBjbGFzcz0ibW9kYWxfb3ZlcmxheSIgc3R5bGU9IiI+Q2xvc2UgPGkgY2xhc3M9ImZhIGZhLXRpbWVzIj48L2k+PC9kaXY+CiAgICAgICAgICAgICA8ZGl2IG9uQ2xpY2s9InJ5bS5jbG9zZU1vZGFsMigpOyIgaWQ9Im1vZGFsX292ZXJsYXlfaW52aXNpYmxlX2xldmVsXzIiIGNsYXNzPSJtb2RhbF9vdmVybGF5X2ludmlzaWJsZSIgc3R5bGU9IiI+PC9kaXY+CiAgICAgICAgICAgICA8ZGl2IGlkPSJtb2RhbF9wYXJlbnRfZnJhbWVfaW5uZXJfbGV2ZWxfMiIgY2xhc3M9Im1vZGFsX3BhcmVudF9mcmFtZV9pbm5lcl9sZXZlbF8yIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJtb2RhbF9jb250ZW50X2xldmVsXzIiIGNsYXNzPSJtb2RhbF9jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgoKCiAgICAgICAgICAgICA8IS0tIH5+fn5+fn5+IGVuZCBjb250ZW50IH5+fn5+fn5+fn5+fn5+fiAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idWlfY2hvb3Nlcl9yZXN1bHRzX2ZyYW1lIiBpZD0idWlfY2hvb3Nlcl9yZXN1bHRzX2ZyYW1lIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVpX2Nob29zZXJfcmVzdWx0cyBiZy1mZmYgYWx0ZXJuYXRlIiBpZD0idWlfY2hvb3Nlcl9yZXN1bHRzIj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4gIAoKICAgICAgICAgICAgIDxkaXYgaWQ9ImNvbnRlbnRfY292ZXIiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0icHJldmlld19mcmFtZSI+PC9kaXY+CiAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICA8ZGl2IGlkPSJ2b3RpbmdfdWlfZnJhbWUiPjwvZGl2PgoKICAgICAgICAgIDxkaXYgc3R5bGU9ImNsZWFyOmJvdGg7Ij48L2Rpdj4KICAgICAgCjxmb290ZXI+CiAgPGRpdiBjbGFzcz0iZm9vdGVyX2lubmVyIj4KCiAgICAgPGRpdiBjbGFzcz0iZm9vdGVyX21haW5fc2VjdGlvbiI+PGRpdiBjbGFzcz0ibWluaWxvZ29fZnJhbWUiPjxkaXYgY2xhc3M9Im1pbmlsb2dvIj4gPGRpdiBjbGFzcz0ibG9nb19zb25lbWljX2J3XzI0Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1pbmlsb2dvX3RleHQiPlJhdGUgWW91ciBNdXNpYzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2Rpdj4KCgogICAgICAgIDxkaXYgY2xhc3M9ImNvcHlyaWdodCI+JmNvcHk7IDIwMDAtMjAyMSBTb25lbWljLCBJbmMuPC9kaXY+CiAgICAgICAgICAKCiAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9ImNsZWFyZml4Ij48L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJzb2NpYWxfaWNvbnMiPiAKICAgICAgICAgICA8YSByZWw9Im5vb3BlbmVyIiB0aXRsZT0iRm9sbG93IHVzIG9uIEZhY2Vib29rIiBocmVmPSJodHRwczovL2ZhY2Vib29rLmNvbS9zb25lbWljLm5ldHdvcmsvIiB0YXJnZXQ9Il9ibGFuayI+PGkgY2xhc3M9ImZhYiBmYS1mYWNlYm9vay1zcXVhcmUiPjwvaT48L2E+IAogICAgICAgICAgIDxhIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJGb2xsb3cgdXMgb24gVHdpdHRlciIgaHJlZj0iaHR0cHM6Ly90d2l0dGVyLmNvbS9zb25lbWljLyIgdGFyZ2V0PSJfYmxhbmsiPjxpIGNsYXNzPSJmYWIgZmEtdHdpdHRlci1zcXVhcmUiPjwvaT48L2E+IAogICAgICAgICAgIDxhIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJGb2xsb3cgdXMgb24gSW5zdGFncmFtIiBocmVmPSJodHRwczovL2luc3RhZ3JhbS5jb20vc29uZW1pYy8iIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmFiIGZhLWluc3RhZ3JhbS1zcXVhcmUiPjwvaT48L2E+IAogICAgICAgICAgIDxhIHJlbD0ibm9vcGVuZXIiIHRpdGxlPSJGb2xsb3cgdXMgb24gU3BvdGlmeSIgaHJlZj0iaHR0cHM6Ly9vcGVuLnNwb3RpZnkuY29tL3VzZXIvc29uZW1pYy5jb20iIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmFiIGZhLXNwb3RpZnkiPjwvaT48L2E+IAogICAgIAogICAgICAgIDwvZGl2PgogICAgIDwvZGl2PiAKICAKICA8ZGl2IGlkPSJleHBhbmRfZnVsbF9mb290ZXIiIGNsYXNzPSJtb2JpbGVfZXhwYW5kYWJsZV9mdWxsIG1vYmlsZV9leHBhbmRfZm9vdGVyIj4KCiAgICAgICAgPGRpdiBpZD0iZXhwYW5kX2Z1bGxfaGVhZGVyX2Zvb3RlciIgY2xhc3M9Im1vYmlsZV9leHBhbmRhYmxlX2Z1bGxfaGVhZGVyIiBvbmNsaWNrPSJSWU1tb2JpbGUubW9iaWxlRXhwYW5kLnRvZ2dsZUZ1bGwoJ2Zvb3RlcicpOyI+CgogICAgICAgICAgIDxkaXYgY2xhc3M9Im1vYmlsZV9leHBhbmRhYmxlX2Z1bGxfaWNvbnMiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vYmlsZV9leHBhbmRhYmxlX2Z1bGxfZXhwYW5kX2ljb25fZXhwYW5kZWQiPgogICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jYXJldC1kb3duIj48L2k+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9iaWxlX2V4cGFuZGFibGVfZnVsbF9leHBhbmRfaWNvbl9oaWRkZW4iPgogICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1jYXJldC1yaWdodCI+PC9pPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICA8ZGl2IGlkPSJleHBhbmRfZnVsbF9uYW1lX2Zvb3RlciIgY2xhc3M9Im1vYmlsZV9leHBhbmRhYmxlX2Z1bGxfbmFtZSI+CiAgICAgICAgICAgICAgU2l0ZSBsaW5rcwogICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBpZD0iZXhwYW5kX2Z1bGxfY29udGVudF9mb290ZXIiIGNsYXNzPSJtb2JpbGVfZXhwYW5kYWJsZV9mdWxsX2NvbnRlbnQiPgogICAgICAgICAgIAogICAgIDxkaXYgY2xhc3M9ImZvb3Rlcl9zZWN0aW9ucyI+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyX3NlY3Rpb24iIGlkPSJzZWN0aW9uX25ldHdvcmsiPgogICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlcl9oZWFkZXIiPlJZTSBOZXR3b3JrPC9kaXY+CiAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyX3N1Yl9saW5rcyI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImFzb25lbWljIiBocmVmPSJodHRwczovL3JhdGV5b3VybXVzaWMuY29tLyI+UllNIDxzcGFuIGNsYXNzPSJzdWIiPm11c2ljPC9zcGFuPjwvYT4KICAgICAgICAgICAgICA8YSBjbGFzcz0iYXNvbmVtaWMiIGhyZWY9Imh0dHBzOi8vc29uZW1pYy5jb20vIj5Tb25lbWljIDxzcGFuIGNsYXNzPSJzdWIiPm5ldyBtdXNpYyBzaXRlIChiZXRhKTwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImFjaW5lbW9zIiBocmVmPSJodHRwczovL2NpbmVtb3MuY29tLyI+Q2luZW1vcyA8c3BhbiBjbGFzcz0ic3ViIj5maWxtIChiZXRhKTwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImFnbGl0Y2h3YXZlIiBocmVmPSJodHRwczovL2dsaXRjaHdhdmUuY29tLyI+R2xpdGNod2F2ZSA8c3BhbiBjbGFzcz0ic3ViIj52aWRlbyBnYW1lcyAoYmV0YSk8L3NwYW4+PC9hPgogICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlcl9zZWN0aW9uIj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXJfaGVhZGVyIj5JbmZvPC9kaXY+CiAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyX3N1Yl9saW5rcyI+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL3dpa2kvUllNOkZBUSI+RkFRPC9hPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii9kZXZlbG9wbWVudC8iPkRldmVsb3BtZW50IHN0YXR1czwvYT4KICAgICAgICAgICAgICA8YSBocmVmPSIvcnltemlsbGEvIiBjbGFzcz0iaGFzX3RpcCIgZGF0YS10aXB0aXA9IlJlcG9ydCBidWdzIGFuZCByZXF1ZXN0IGZlYXR1cmVzIj5SWU16aWxsYTwvYT4KICAgICAgICAgICAgICA8YSBocmVmPSIvcXVldWVzLyI+U3VibWlzc2lvbnM8L2E+CiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyX3NlY3Rpb24iPgogICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlcl9oZWFkZXIiPlBvbGljeTwvZGl2PgogICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlcl9zdWJfbGlua3MiPgogICAgICAgICAgICAgIAogICAgICAgICAgICAgIDxhIGhyZWY9Ii93aWtpLyI+RGF0YWJhc2Ugc3RhbmRhcmRzPC9hPgogICAgICAgICAgICAgIDxhIGNsYXNzPSIiIGhyZWY9Ii9wcml2YWN5Ij5Qcml2YWN5PC9hPgogICAgICAgICAgICAgIDxhIGNsYXNzPSIiIGhyZWY9Ii90b3MiPlRlcm1zIG9mIHNlcnZpY2U8L2E+CiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyX3NlY3Rpb24iPgogICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb3Rlcl9oZWFkZXIiPkNvbnRhY3QgdXM8L2Rpdj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXJfc3ViX2xpbmtzIj4KICAgICAgICAgICAgICA8YSBocmVmPSIvY29udGFjdCI+U3VwcG9ydCAvIEZlZWRiYWNrPC9hPgogICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vYnV5LmJ1eXNlbGxhZHMuY29tL2RpcmVjdG9yeS9yYXRleW91cm11c2ljL2NoZWNrb3V0L25ldyI+QWR2ZXJ0aXNlPC9hPgogICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vc29uZW1pYy5jb20vam9icy8iPkpvYnM8L2E+CiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgPC9kaXY+CiAgCiAgICAgICAgPC9kaXY+CiAgICAgPC9kaXY+CiAgCiAKIAoKICAgICA8ZGl2IHN0eWxlPSJjbGVhcjpib3RoOyI+PC9kaXY+CiAgPC9kaXY+Cgo8L2Zvb3Rlcj48L2JvZHk+PC9odG1sPjxzY3JpcHQ+PC9zY3JpcHQ+CgogICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9lLnNubWMuaW8vMi41L2pzL2pxdWVyeS5taW4uMi5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii8vZS5zbm1jLmlvL2Rpc3QvanMvYnVuZGxlLmpzP3Y9NzBkZTY3ZWYtZDM1MC00MmQwLTk4NWEtNDFlZWY0YTFjY2Q4Ij48L3NjcmlwdD48bGluayBpZD0iY3NzLWJhc2UtZmxhZ3MiIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLy9lLnNubWMuaW8vZGlzdC9jc3MvYmFzZS9mbGFncy5jc3M/dj03MGRlNjdlZi1kMzUwLTQyZDAtOTg1YS00MWVlZjRhMWNjZDgiIHR5cGU9InRleHQvY3NzIiAvPgogICAgICA8c2NyaXB0PgogICAgICAgIChmdW5jdGlvbihpLHMsbyxnLHIsYSxtKXtpWydHb29nbGVBbmFseXRpY3NPYmplY3QnXT1yO2lbcl09aVtyXXx8ZnVuY3Rpb24oKXsKICAgICAgICAoaVtyXS5xPWlbcl0ucXx8W10pLnB1c2goYXJndW1lbnRzKX0saVtyXS5sPTEqbmV3IERhdGUoKTthPXMuY3JlYXRlRWxlbWVudChvKSwKICAgICAgICBtPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobylbMF07YS5hc3luYz0xO2Euc3JjPWc7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLG0pCiAgICAgICAgfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCcvL3d3dy5nb29nbGUtYW5hbHl0aWNzLmNvbS9hbmFseXRpY3MuanMnLCdnYScpOwoKCiAgICAgIAogICAgICAgICAgIGNvbnNvbGUubG9nKCdyeW0uYW5hbHl0aWNzOiBHb29nbGUgYW5hbHl0aWNzIHBhZ2V2aWV3IGV2ZW50IHNlbnQuJyk7CiAgICAgICAgICAgZ2EoJ2NyZWF0ZScsICdVQS01OTA1Ny0xJywgJ2F1dG8nKTsKICAgICAgICAgICBnYSgnc2VuZCcsICdwYWdldmlldycpOwogICAgICAgICAgICAKICAgICAgPC9zY3JpcHQ+CiAgICAgICAgIDxzY3JpcHQ+CgogICAgICAgICAgICBmb3IgKCB2YXIgaSBpbiByeW1pbml0ICkgewogICAgICAgICAgICAgICB2YXIgZm4gPSByeW1pbml0W2ldOwogICAgICAgICAgICAgICByeW1pbml0W2ldID0gbnVsbDsKICAgICAgICAgICAgICAgaWYgKCBmbiApIHsKICAgICAgICAgICAgICAgICAgZm4oKTsKICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICByeW1pbml0ID0gbnVsbDsKICAgICAgICAgPC9zY3JpcHQ+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii8vZS5zbm1jLmlvLzIuNS9qcy9iYXNlcmVxLW1pbi1iNS5qcyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii8vZS5zbm1jLmlvLzIuNS9qcy9qcXVlcnktYXBwZWFyLWIxLmpzIj48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iLy9lLnNubWMuaW8vMi41L2pzL3RhZ2dlcmYudjIuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvL2Uuc25tYy5pby8yLjUvanMvcmF0aW5ndjQuanMiPjwvc2NyaXB0Pg==
  recorded_at: Mon, 14 Jun 2021 12:09:16 GMT
recorded_with: VCR 6.0.0

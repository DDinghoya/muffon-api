---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/search?key=<YOUTUBE_API_KEY>&maxResults=5&pageToken&part=snippet&q=wild%20nothing%20chinatown&type=video&videoCategoryId=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux x86_64) ruby/3.0.0p0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - www.googleapis.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Sun, 24 Jan 2021 17:17:08 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJraW5kIjogInlvdXR1YmUjc2VhcmNoTGlzdFJlc3BvbnNlIiwKICAiZXRhZyI6ICJqY2MtU01kZlVqM280LURzZTlFM0NJMDJ1V3MiLAogICJuZXh0UGFnZVRva2VuIjogIkNBVVFBQSIsCiAgInJlZ2lvbkNvZGUiOiAiQlkiLAogICJwYWdlSW5mbyI6IHsKICAgICJ0b3RhbFJlc3VsdHMiOiAyMDMwNCwKICAgICJyZXN1bHRzUGVyUGFnZSI6IDUKICB9LAogICJpdGVtcyI6IFsKICAgIHsKICAgICAgImtpbmQiOiAieW91dHViZSNzZWFyY2hSZXN1bHQiLAogICAgICAiZXRhZyI6ICJqUEt4WkxRUllMMVgxcWlNQVdlYWExdS1udVEiLAogICAgICAiaWQiOiB7CiAgICAgICAgImtpbmQiOiAieW91dHViZSN2aWRlbyIsCiAgICAgICAgInZpZGVvSWQiOiAiMWFUSWtRZjNlUlkiCiAgICAgIH0sCiAgICAgICJzbmlwcGV0IjogewogICAgICAgICJwdWJsaXNoZWRBdCI6ICIyMDE0LTEyLTAxVDEyOjQ0OjUwWiIsCiAgICAgICAgImNoYW5uZWxJZCI6ICJVQ2JhSlpVVnFmRVpQdHdhVXpHZ2RaOEEiLAogICAgICAgICJ0aXRsZSI6ICJDaGluYXRvd24iLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJQcm92aWRlZCB0byBZb3VUdWJlIGJ5IEJXU0NELCBJbmMuIENoaW5hdG93biDCtyBXaWxkIE5vdGhpbmcgR2VtaW5pIOKElyAyMDEwIENhcHR1cmVkIFRyYWNrcyBSZWxlYXNlZCBvbjogMjAxMC0wNS0yNSBBdXRvLWdlbmVyYXRlZCBieSBZb3VUdWJlLiIsCiAgICAgICAgInRodW1ibmFpbHMiOiB7CiAgICAgICAgICAiZGVmYXVsdCI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpLzFhVElrUWYzZVJZL2RlZmF1bHQuanBnIiwKICAgICAgICAgICAgIndpZHRoIjogMTIwLAogICAgICAgICAgICAiaGVpZ2h0IjogOTAKICAgICAgICAgIH0sCiAgICAgICAgICAibWVkaXVtIjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvMWFUSWtRZjNlUlkvbXFkZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDMyMCwKICAgICAgICAgICAgImhlaWdodCI6IDE4MAogICAgICAgICAgfSwKICAgICAgICAgICJoaWdoIjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvMWFUSWtRZjNlUlkvaHFkZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDQ4MCwKICAgICAgICAgICAgImhlaWdodCI6IDM2MAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImNoYW5uZWxUaXRsZSI6ICJXaWxkIE5vdGhpbmcgLSBUb3BpYyIsCiAgICAgICAgImxpdmVCcm9hZGNhc3RDb250ZW50IjogIm5vbmUiLAogICAgICAgICJwdWJsaXNoVGltZSI6ICIyMDE0LTEyLTAxVDEyOjQ0OjUwWiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAieW91dHViZSNzZWFyY2hSZXN1bHQiLAogICAgICAiZXRhZyI6ICJCQ0ZBbzZRS1lBZVdmZUlidHNncDAxVnR6TEEiLAogICAgICAiaWQiOiB7CiAgICAgICAgImtpbmQiOiAieW91dHViZSN2aWRlbyIsCiAgICAgICAgInZpZGVvSWQiOiAiajZ0WkxWb0FRbk0iCiAgICAgIH0sCiAgICAgICJzbmlwcGV0IjogewogICAgICAgICJwdWJsaXNoZWRBdCI6ICIyMDExLTEyLTE5VDA4OjMyOjQ0WiIsCiAgICAgICAgImNoYW5uZWxJZCI6ICJVQ3VaMG9hVnhVM0puM1cxVnlnSzBFaFEiLAogICAgICAgICJ0aXRsZSI6ICJXaWxkIE5vdGhpbmcgLSBDaGluYXRvd24iLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJMeXJpY3M6IElubm9jZW50IGxvdmUsIEkgbmVlZCBzb21lb25lIHNvbWV3aGVyZSBJIG5lZWQgc29tZSB3YXkgdG8gY29tZSBkb3duIEkgbmVlZCBzb21lIHdheSB0byBtYWtlIHRoaW5ncyByaWdodCBJbm5vY2VudCBsb3ZlLCBJIG5lZWQgc29tZW9uZSAuLi4iLAogICAgICAgICJ0aHVtYm5haWxzIjogewogICAgICAgICAgImRlZmF1bHQiOiB7CiAgICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9pLnl0aW1nLmNvbS92aS9qNnRaTFZvQVFuTS9kZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDEyMCwKICAgICAgICAgICAgImhlaWdodCI6IDkwCiAgICAgICAgICB9LAogICAgICAgICAgIm1lZGl1bSI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL2o2dFpMVm9BUW5NL21xZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiAzMjAsCiAgICAgICAgICAgICJoZWlnaHQiOiAxODAKICAgICAgICAgIH0sCiAgICAgICAgICAiaGlnaCI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL2o2dFpMVm9BUW5NL2hxZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiA0ODAsCiAgICAgICAgICAgICJoZWlnaHQiOiAzNjAKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJjaGFubmVsVGl0bGUiOiAiZHNiY2hpbGx3YXZlIiwKICAgICAgICAibGl2ZUJyb2FkY2FzdENvbnRlbnQiOiAibm9uZSIsCiAgICAgICAgInB1Ymxpc2hUaW1lIjogIjIwMTEtMTItMTlUMDg6MzI6NDRaIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJ5b3V0dWJlI3NlYXJjaFJlc3VsdCIsCiAgICAgICJldGFnIjogIkswQUVLdzNnaHFfVTYtVnVmNDZ2TFl3c3o1USIsCiAgICAgICJpZCI6IHsKICAgICAgICAia2luZCI6ICJ5b3V0dWJlI3ZpZGVvIiwKICAgICAgICAidmlkZW9JZCI6ICJuX0g2c3FwTkFpYyIKICAgICAgfSwKICAgICAgInNuaXBwZXQiOiB7CiAgICAgICAgInB1Ymxpc2hlZEF0IjogIjIwMTEtMDctMTdUMTg6NDI6NDJaIiwKICAgICAgICAiY2hhbm5lbElkIjogIlVDQkxLQVpmOFdyOTdDbTJYWXdfSDJDZyIsCiAgICAgICAgInRpdGxlIjogIldpbGQgTm90aGluZzogQ2hpbmF0b3duIGx5cmljcyIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogImNoaW5hdG93biBieSB3aWxkIG5vdGhpbmcgaSBkbyBub3Qgb3duIHRoaXMgc29uZyBhbmQgbm8gY29weXJpZ2h0IGluZnJpbmdlbWVudCBpcyBpbnRlbmRlZC4iLAogICAgICAgICJ0aHVtYm5haWxzIjogewogICAgICAgICAgImRlZmF1bHQiOiB7CiAgICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9pLnl0aW1nLmNvbS92aS9uX0g2c3FwTkFpYy9kZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDEyMCwKICAgICAgICAgICAgImhlaWdodCI6IDkwCiAgICAgICAgICB9LAogICAgICAgICAgIm1lZGl1bSI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL25fSDZzcXBOQWljL21xZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiAzMjAsCiAgICAgICAgICAgICJoZWlnaHQiOiAxODAKICAgICAgICAgIH0sCiAgICAgICAgICAiaGlnaCI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL25fSDZzcXBOQWljL2hxZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiA0ODAsCiAgICAgICAgICAgICJoZWlnaHQiOiAzNjAKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJjaGFubmVsVGl0bGUiOiAiZHlpbmdmbDB3ZXJzIiwKICAgICAgICAibGl2ZUJyb2FkY2FzdENvbnRlbnQiOiAibm9uZSIsCiAgICAgICAgInB1Ymxpc2hUaW1lIjogIjIwMTEtMDctMTdUMTg6NDI6NDJaIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJ5b3V0dWJlI3NlYXJjaFJlc3VsdCIsCiAgICAgICJldGFnIjogImUteHd0ZFBONm5HMWZmQXBCNk5JUnlsVFgzayIsCiAgICAgICJpZCI6IHsKICAgICAgICAia2luZCI6ICJ5b3V0dWJlI3ZpZGVvIiwKICAgICAgICAidmlkZW9JZCI6ICJEclI5Qkc5cWtZSSIKICAgICAgfSwKICAgICAgInNuaXBwZXQiOiB7CiAgICAgICAgInB1Ymxpc2hlZEF0IjogIjIwMTEtMDMtMDJUMjE6NTM6NDhaIiwKICAgICAgICAiY2hhbm5lbElkIjogIlVDN2hmaURZUmhsUHd4NkwzRGF1dDZRZyIsCiAgICAgICAgInRpdGxlIjogIldpbGQgTm90aGluZyAmcXVvdDtDaGluYXRvd24mcXVvdDsgTGl2ZSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIldpbGQgTm90aGluZyBhdCBIb2xvY2VuZSBpbiBQb3J0bGFuZCwgT1IgTWFyY2ggMDEsIDIwMTEgRm9yIHBob3RvcyBmcm9tIHRoZSBzaG93OiBodHRwOi8vd3d3LnFyb21hZy5jb20vY29uY2VydF9nYWxsZXJ5Lz9nMl9pdGVtSWQ9Mjk5NTM5IGZvciByZXZpZXc6IC4uLiIsCiAgICAgICAgInRodW1ibmFpbHMiOiB7CiAgICAgICAgICAiZGVmYXVsdCI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL0RyUjlCRzlxa1lJL2RlZmF1bHQuanBnIiwKICAgICAgICAgICAgIndpZHRoIjogMTIwLAogICAgICAgICAgICAiaGVpZ2h0IjogOTAKICAgICAgICAgIH0sCiAgICAgICAgICAibWVkaXVtIjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvRHJSOUJHOXFrWUkvbXFkZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDMyMCwKICAgICAgICAgICAgImhlaWdodCI6IDE4MAogICAgICAgICAgfSwKICAgICAgICAgICJoaWdoIjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvRHJSOUJHOXFrWUkvaHFkZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDQ4MCwKICAgICAgICAgICAgImhlaWdodCI6IDM2MAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImNoYW5uZWxUaXRsZSI6ICJQaG90b3NwaGVyZSIsCiAgICAgICAgImxpdmVCcm9hZGNhc3RDb250ZW50IjogIm5vbmUiLAogICAgICAgICJwdWJsaXNoVGltZSI6ICIyMDExLTAzLTAyVDIxOjUzOjQ4WiIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgImtpbmQiOiAieW91dHViZSNzZWFyY2hSZXN1bHQiLAogICAgICAiZXRhZyI6ICJpd0Z4MEdWelNsOGNPUVNOQVJfV2FQZGIxdm8iLAogICAgICAiaWQiOiB7CiAgICAgICAgImtpbmQiOiAieW91dHViZSN2aWRlbyIsCiAgICAgICAgInZpZGVvSWQiOiAiMWdwZmVlZXVYQUEiCiAgICAgIH0sCiAgICAgICJzbmlwcGV0IjogewogICAgICAgICJwdWJsaXNoZWRBdCI6ICIyMDE5LTA3LTEyVDA5OjMwOjAzWiIsCiAgICAgICAgImNoYW5uZWxJZCI6ICJVQ1FkWmcyS3lJRUFyM3hNWXhtakZ3NHciLAogICAgICAgICJ0aXRsZSI6ICJXaWxkIE5vdGhpbmcgLSBDaGluYXRvd24gKEx5cmljcykiLAogICAgICAgICJkZXNjcmlwdGlvbiI6ICJXaWxkIE5vdGhpbmcncyBhY2hpbmdseSBiZWF1dGlmdWwgcmVmbGVjdGlvbiBvZiA4MHMgZHJlYW0tcG9wIGNhcnZlcyBhIHR1bm5lbCBmcm9tIEliaXphJ3MgYmVhY2hlcyB0byBNYW5jaGVzdGVyJ3MgcmFpbi1zb2FrZWQgZmFpcmdyb3VuZHMu4oCdIOKAnEdlbWluaSBmaW5kcyAuLi4iLAogICAgICAgICJ0aHVtYm5haWxzIjogewogICAgICAgICAgImRlZmF1bHQiOiB7CiAgICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9pLnl0aW1nLmNvbS92aS8xZ3BmZWVldVhBQS9kZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDEyMCwKICAgICAgICAgICAgImhlaWdodCI6IDkwCiAgICAgICAgICB9LAogICAgICAgICAgIm1lZGl1bSI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpLzFncGZlZWV1WEFBL21xZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiAzMjAsCiAgICAgICAgICAgICJoZWlnaHQiOiAxODAKICAgICAgICAgIH0sCiAgICAgICAgICAiaGlnaCI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpLzFncGZlZWV1WEFBL2hxZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiA0ODAsCiAgICAgICAgICAgICJoZWlnaHQiOiAzNjAKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJjaGFubmVsVGl0bGUiOiAiVGhlIFRpbnkgTWFqb3JpdHkiLAogICAgICAgICJsaXZlQnJvYWRjYXN0Q29udGVudCI6ICJub25lIiwKICAgICAgICAicHVibGlzaFRpbWUiOiAiMjAxOS0wNy0xMlQwOTozMDowM1oiCiAgICAgIH0KICAgIH0KICBdCn0K
  recorded_at: Sun, 24 Jan 2021 17:17:07 GMT
recorded_with: VCR 6.0.0

---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/search?key=<YOUTUBE_API_KEY>&maxResults=5&pageToken&part=snippet&q=wild%20nothing%20chinatown&type=video
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (linux-gnu x86_64) ruby/2.7.2p137
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - www.googleapis.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Tue, 13 Oct 2020 19:23:39 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3-Q050=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-27=":443"; ma=2592000,h3-T051=":443";
        ma=2592000,h3-T050=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJraW5kIjogInlvdXR1YmUjc2VhcmNoTGlzdFJlc3BvbnNlIiwKICAiZXRhZyI6ICI2eWx4UXZWd0hxdnF6R3Rtd1U1M1l2QnJXcFkiLAogICJuZXh0UGFnZVRva2VuIjogIkNBVVFBQSIsCiAgInJlZ2lvbkNvZGUiOiAiQlkiLAogICJwYWdlSW5mbyI6IHsKICAgICJ0b3RhbFJlc3VsdHMiOiAxMDAwMDAwLAogICAgInJlc3VsdHNQZXJQYWdlIjogNQogIH0sCiAgIml0ZW1zIjogWwogICAgewogICAgICAia2luZCI6ICJ5b3V0dWJlI3NlYXJjaFJlc3VsdCIsCiAgICAgICJldGFnIjogIkZjbk9yblNIU2NwV3hqTTBseF9LTkZ2aFF0WSIsCiAgICAgICJpZCI6IHsKICAgICAgICAia2luZCI6ICJ5b3V0dWJlI3ZpZGVvIiwKICAgICAgICAidmlkZW9JZCI6ICIxYVRJa1FmM2VSWSIKICAgICAgfSwKICAgICAgInNuaXBwZXQiOiB7CiAgICAgICAgInB1Ymxpc2hlZEF0IjogIjIwMTQtMTItMDFUMTI6NDQ6NTBaIiwKICAgICAgICAiY2hhbm5lbElkIjogIlVDYmFKWlVWcWZFWlB0d2FVekdnZFo4QSIsCiAgICAgICAgInRpdGxlIjogIkNoaW5hdG93biIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIlByb3ZpZGVkIHRvIFlvdVR1YmUgYnkgQldTQ0QsIEluYy4gQ2hpbmF0b3duIMK3IFdpbGQgTm90aGluZyBHZW1pbmkg4oSXIDIwMTAgQ2FwdHVyZWQgVHJhY2tzIFJlbGVhc2VkIG9uOiAyMDEwLTA1LTI1IEF1dG8tZ2VuZXJhdGVkIGJ5IFlvdVR1YmUuIiwKICAgICAgICAidGh1bWJuYWlscyI6IHsKICAgICAgICAgICJkZWZhdWx0IjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvMWFUSWtRZjNlUlkvZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiAxMjAsCiAgICAgICAgICAgICJoZWlnaHQiOiA5MAogICAgICAgICAgfSwKICAgICAgICAgICJtZWRpdW0iOiB7CiAgICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9pLnl0aW1nLmNvbS92aS8xYVRJa1FmM2VSWS9tcWRlZmF1bHQuanBnIiwKICAgICAgICAgICAgIndpZHRoIjogMzIwLAogICAgICAgICAgICAiaGVpZ2h0IjogMTgwCiAgICAgICAgICB9LAogICAgICAgICAgImhpZ2giOiB7CiAgICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9pLnl0aW1nLmNvbS92aS8xYVRJa1FmM2VSWS9ocWRlZmF1bHQuanBnIiwKICAgICAgICAgICAgIndpZHRoIjogNDgwLAogICAgICAgICAgICAiaGVpZ2h0IjogMzYwCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAiY2hhbm5lbFRpdGxlIjogIldpbGQgTm90aGluZyAtIFRvcGljIiwKICAgICAgICAibGl2ZUJyb2FkY2FzdENvbnRlbnQiOiAibm9uZSIsCiAgICAgICAgInB1Ymxpc2hUaW1lIjogIjIwMTQtMTItMDFUMTI6NDQ6NTBaIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJ5b3V0dWJlI3NlYXJjaFJlc3VsdCIsCiAgICAgICJldGFnIjogIlluY2Yzd1BVRWQ2SDlzcS1PUXg5bjVab0toZyIsCiAgICAgICJpZCI6IHsKICAgICAgICAia2luZCI6ICJ5b3V0dWJlI3ZpZGVvIiwKICAgICAgICAidmlkZW9JZCI6ICJqNnRaTFZvQVFuTSIKICAgICAgfSwKICAgICAgInNuaXBwZXQiOiB7CiAgICAgICAgInB1Ymxpc2hlZEF0IjogIjIwMTEtMTItMTlUMDg6MzI6NDRaIiwKICAgICAgICAiY2hhbm5lbElkIjogIlVDdVowb2FWeFUzSm4zVzFWeWdLMEVoUSIsCiAgICAgICAgInRpdGxlIjogIldpbGQgTm90aGluZyAtIENoaW5hdG93biIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIkx5cmljczogSW5ub2NlbnQgbG92ZSwgSSBuZWVkIHNvbWVvbmUgc29tZXdoZXJlIEkgbmVlZCBzb21lIHdheSB0byBjb21lIGRvd24gSSBuZWVkIHNvbWUgd2F5IHRvIG1ha2UgdGhpbmdzIHJpZ2h0IElubm9jZW50IGxvdmUsIEkgbmVlZCBzb21lb25lIC4uLiIsCiAgICAgICAgInRodW1ibmFpbHMiOiB7CiAgICAgICAgICAiZGVmYXVsdCI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL2o2dFpMVm9BUW5NL2RlZmF1bHQuanBnIiwKICAgICAgICAgICAgIndpZHRoIjogMTIwLAogICAgICAgICAgICAiaGVpZ2h0IjogOTAKICAgICAgICAgIH0sCiAgICAgICAgICAibWVkaXVtIjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvajZ0WkxWb0FRbk0vbXFkZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDMyMCwKICAgICAgICAgICAgImhlaWdodCI6IDE4MAogICAgICAgICAgfSwKICAgICAgICAgICJoaWdoIjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvajZ0WkxWb0FRbk0vaHFkZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDQ4MCwKICAgICAgICAgICAgImhlaWdodCI6IDM2MAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImNoYW5uZWxUaXRsZSI6ICJkc2JjaGlsbHdhdmUiLAogICAgICAgICJsaXZlQnJvYWRjYXN0Q29udGVudCI6ICJub25lIiwKICAgICAgICAicHVibGlzaFRpbWUiOiAiMjAxMS0xMi0xOVQwODozMjo0NFoiCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogInlvdXR1YmUjc2VhcmNoUmVzdWx0IiwKICAgICAgImV0YWciOiAiVFVSTUdkQ1JpckdXMlQ0YzJDeWhQOHNPaEVBIiwKICAgICAgImlkIjogewogICAgICAgICJraW5kIjogInlvdXR1YmUjdmlkZW8iLAogICAgICAgICJ2aWRlb0lkIjogIm5fSDZzcXBOQWljIgogICAgICB9LAogICAgICAic25pcHBldCI6IHsKICAgICAgICAicHVibGlzaGVkQXQiOiAiMjAxMS0wNy0xN1QxODo0Mjo0MloiLAogICAgICAgICJjaGFubmVsSWQiOiAiVUNCTEtBWmY4V3I5N0NtMlhZd19IMkNnIiwKICAgICAgICAidGl0bGUiOiAiV2lsZCBOb3RoaW5nOiBDaGluYXRvd24gbHlyaWNzIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiY2hpbmF0b3duIGJ5IHdpbGQgbm90aGluZyBpIGRvIG5vdCBvd24gdGhpcyBzb25nIGFuZCBubyBjb3B5cmlnaHQgaW5mcmluZ2VtZW50IGlzIGludGVuZGVkLiIsCiAgICAgICAgInRodW1ibmFpbHMiOiB7CiAgICAgICAgICAiZGVmYXVsdCI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL25fSDZzcXBOQWljL2RlZmF1bHQuanBnIiwKICAgICAgICAgICAgIndpZHRoIjogMTIwLAogICAgICAgICAgICAiaGVpZ2h0IjogOTAKICAgICAgICAgIH0sCiAgICAgICAgICAibWVkaXVtIjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvbl9INnNxcE5BaWMvbXFkZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDMyMCwKICAgICAgICAgICAgImhlaWdodCI6IDE4MAogICAgICAgICAgfSwKICAgICAgICAgICJoaWdoIjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvbl9INnNxcE5BaWMvaHFkZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDQ4MCwKICAgICAgICAgICAgImhlaWdodCI6IDM2MAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgImNoYW5uZWxUaXRsZSI6ICJkeWluZ2ZsMHdlcnMiLAogICAgICAgICJsaXZlQnJvYWRjYXN0Q29udGVudCI6ICJub25lIiwKICAgICAgICAicHVibGlzaFRpbWUiOiAiMjAxMS0wNy0xN1QxODo0Mjo0MloiCiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJraW5kIjogInlvdXR1YmUjc2VhcmNoUmVzdWx0IiwKICAgICAgImV0YWciOiAidmJuSDlGUzVZU0ZDZkZ2ZkVxUmU0LUcySjVjIiwKICAgICAgImlkIjogewogICAgICAgICJraW5kIjogInlvdXR1YmUjdmlkZW8iLAogICAgICAgICJ2aWRlb0lkIjogIkRyUjlCRzlxa1lJIgogICAgICB9LAogICAgICAic25pcHBldCI6IHsKICAgICAgICAicHVibGlzaGVkQXQiOiAiMjAxMS0wMy0wMlQyMTo1Mzo0OFoiLAogICAgICAgICJjaGFubmVsSWQiOiAiVUM3aGZpRFlSaGxQd3g2TDNEYXV0NlFnIiwKICAgICAgICAidGl0bGUiOiAiV2lsZCBOb3RoaW5nICZxdW90O0NoaW5hdG93biZxdW90OyBMaXZlIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiV2lsZCBOb3RoaW5nIGF0IEhvbG9jZW5lIGluIFBvcnRsYW5kLCBPUiBNYXJjaCAwMSwgMjAxMSBGb3IgcGhvdG9zIGZyb20gdGhlIHNob3c6IGh0dHA6Ly93d3cucXJvbWFnLmNvbS9jb25jZXJ0X2dhbGxlcnkvP2cyX2l0ZW1JZD0yOTk1MzkgZm9yIHJldmlldzogLi4uIiwKICAgICAgICAidGh1bWJuYWlscyI6IHsKICAgICAgICAgICJkZWZhdWx0IjogewogICAgICAgICAgICAidXJsIjogImh0dHBzOi8vaS55dGltZy5jb20vdmkvRHJSOUJHOXFrWUkvZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiAxMjAsCiAgICAgICAgICAgICJoZWlnaHQiOiA5MAogICAgICAgICAgfSwKICAgICAgICAgICJtZWRpdW0iOiB7CiAgICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9pLnl0aW1nLmNvbS92aS9EclI5Qkc5cWtZSS9tcWRlZmF1bHQuanBnIiwKICAgICAgICAgICAgIndpZHRoIjogMzIwLAogICAgICAgICAgICAiaGVpZ2h0IjogMTgwCiAgICAgICAgICB9LAogICAgICAgICAgImhpZ2giOiB7CiAgICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9pLnl0aW1nLmNvbS92aS9EclI5Qkc5cWtZSS9ocWRlZmF1bHQuanBnIiwKICAgICAgICAgICAgIndpZHRoIjogNDgwLAogICAgICAgICAgICAiaGVpZ2h0IjogMzYwCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAiY2hhbm5lbFRpdGxlIjogIlBob3Rvc3BoZXJlIiwKICAgICAgICAibGl2ZUJyb2FkY2FzdENvbnRlbnQiOiAibm9uZSIsCiAgICAgICAgInB1Ymxpc2hUaW1lIjogIjIwMTEtMDMtMDJUMjE6NTM6NDhaIgogICAgICB9CiAgICB9LAogICAgewogICAgICAia2luZCI6ICJ5b3V0dWJlI3NlYXJjaFJlc3VsdCIsCiAgICAgICJldGFnIjogIjlib2RLTGpXclA5Q3JUNmxBU2tEUldoZVFEYyIsCiAgICAgICJpZCI6IHsKICAgICAgICAia2luZCI6ICJ5b3V0dWJlI3ZpZGVvIiwKICAgICAgICAidmlkZW9JZCI6ICJuUnh2VS1DWlFnVSIKICAgICAgfSwKICAgICAgInNuaXBwZXQiOiB7CiAgICAgICAgInB1Ymxpc2hlZEF0IjogIjIwMTktMDktMjZUMTA6MDE6MTVaIiwKICAgICAgICAiY2hhbm5lbElkIjogIlVDYmFKWlVWcWZFWlB0d2FVekdnZFo4QSIsCiAgICAgICAgInRpdGxlIjogIkNoaW5hdG93biAoTGl2ZSBmcm9tIEJyb29rbHluIFN0ZWVsKSIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIlByb3ZpZGVkIHRvIFlvdVR1YmUgYnkgQldTQ0QsIEluYy4gQ2hpbmF0b3duIChMaXZlIGZyb20gQnJvb2tseW4gU3RlZWwpIMK3IFdpbGQgTm90aGluZyBMaXZlIGZyb20gQnJvb2tseW4gU3RlZWwg4oSXIDIwMTkgQ2FwdHVyZWQgVHJhY2tzIFJlbGVhc2VkIG9uOiAuLi4iLAogICAgICAgICJ0aHVtYm5haWxzIjogewogICAgICAgICAgImRlZmF1bHQiOiB7CiAgICAgICAgICAgICJ1cmwiOiAiaHR0cHM6Ly9pLnl0aW1nLmNvbS92aS9uUnh2VS1DWlFnVS9kZWZhdWx0LmpwZyIsCiAgICAgICAgICAgICJ3aWR0aCI6IDEyMCwKICAgICAgICAgICAgImhlaWdodCI6IDkwCiAgICAgICAgICB9LAogICAgICAgICAgIm1lZGl1bSI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL25SeHZVLUNaUWdVL21xZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiAzMjAsCiAgICAgICAgICAgICJoZWlnaHQiOiAxODAKICAgICAgICAgIH0sCiAgICAgICAgICAiaGlnaCI6IHsKICAgICAgICAgICAgInVybCI6ICJodHRwczovL2kueXRpbWcuY29tL3ZpL25SeHZVLUNaUWdVL2hxZGVmYXVsdC5qcGciLAogICAgICAgICAgICAid2lkdGgiOiA0ODAsCiAgICAgICAgICAgICJoZWlnaHQiOiAzNjAKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJjaGFubmVsVGl0bGUiOiAiV2lsZCBOb3RoaW5nIC0gVG9waWMiLAogICAgICAgICJsaXZlQnJvYWRjYXN0Q29udGVudCI6ICJub25lIiwKICAgICAgICAicHVibGlzaFRpbWUiOiAiMjAxOS0wOS0yNlQxMDowMToxNVoiCiAgICAgIH0KICAgIH0KICBdCn0K
  recorded_at: Tue, 13 Oct 2020 19:23:37 GMT
recorded_with: VCR 6.0.0
